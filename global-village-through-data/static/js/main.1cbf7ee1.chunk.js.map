{"version":3,"sources":["assets/svgs/earth.svg","assets/svgs/question.tsx","components/pages/main/index.tsx","components/pages/glob/styles.ts","components/organisms/link-modal/index.tsx","components/organisms/glob-chart/index.tsx","assets/images/globe.jpg","utils/helper.ts","components/organisms/global-glob/index.tsx","components/organisms/CountryTable/index.tsx","components/organisms/circle-map/index.tsx","components/organisms/plane-map/index.tsx","components/routes/index.tsx","components/pages/glob/index.tsx","components/organisms/ImageButton.tsx","components/organisms/Menus.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WomanGray","SvgIcon","xmlns","width","height","viewBox","transform","id","fill","fontFamily","fontSize","x","y","clipPath","d","FlexMixin","css","MainContainer","styled","div","MainTitle","SubTitle","SubjectsContainer","SubjectContainer","SubSubjectsContainer","Subject","bgColor","SubSubject","Main","history","useHistory","ROUTES","map","route","color","subject","paths","path","onClick","push","prefix","subSubject","GlobContainer","Contents","Sidebar","SidebarTitle","EarthImg","img","SidebarHelpMixin","SidebarHelp","button","HelpDiv","SidebarLinks","Link","active","ContentTitle","HeaderContainer","ContentDesc","ContentRef","ContentDivider","Divider","Content","CircleContainer","LeftContainer","SelectContainer","SelectLabel","ChartTitle","EarthContainer","LegendContainer","LegendInnerContainer","Legend","LegendLabel","LegendElement","TableContainer","TableInnerContainer","TableTitle","TableHeaderCell","th","TableBodyCell","td","CustomTextField","TextField","PointText","span","GlobeContainer","ButtonContainer","ChangeButton","ContentContainer","ChartArea","ChartContainer","SubjectTypo","LinkSubSubject","LinkModal","open","onClose","Dialog","DialogTitle","DialogContent","DialogActions","Button","style","useStyles","makeStyles","cell","opacity","index","GlobChart","korea","avg","unit","setCoords","rank","classes","useState","name","value","data","setData","useEffect","ResponsiveContainer","BarChart","margin","top","right","left","bottom","XAxis","dataKey","Bar","isAnimationActive","LabelList","content","props","Number","textAnchor","dominantBaseline","entry","Cell","latitude","longitude","label","className","cursor","getColorByValue","colors","max","gap","isReturnIndex","length","some","i","toString","renderTooltip","K","ADMIN","toFixed","GlobalGlob","coords","rotate","setRotate","globe","useRef","lat","lng","setLabel","countriesJson","features","feature","properties","applyCountry","ADM0_A3_IS","codeMap","newCountries","setNewCountries","filteredData","Object","keys","key","item","filter","interval","setInterval","country","COORDS","TWO","clearInterval","current","camera","zoom","controls","enableZoom","updateProjectionMatrix","pointOfView","ref","globeImageUrl","globeTexture","window","innerHeight","animateIn","labelsData","labelText","labelSize","labelTypeFace","yangin","labelColor","useCallback","labelDotRadius","labelAltitude","onPolygonHover","polygonsData","polygonCapColor","polygonSideColor","polygonStrokeColor","backgroundColor","polygonLabel","Tr","tr","CountryTable","sortedValues","title","slice","code","CircleMap","year","years","setCircle","setYear","isDisplay","sort","reverseColors","display","variant","select","onChange","e","target","MenuItem","marginTop","marginBottom","Tooltip","SORT_TYPE","ASC","reverse","MapContainer","Map","PlaneMap","mapRef","setMap","applyData","PLANE","forEach","undefined","fillKey","newMap","DataMap","geographyConfig","highlightBorderColor","popupTemplate","geography","highlightBorderWidth","element","projection","fills","defaultFill","level0","level1","level2","level3","level4","level5","assertedData","totalData","Glob","description","reference","defaultYear","circle","modal","setModal","dataForSorting","totals","numberValue","Boolean","KOR","reduce","a","b","Math","React","anchorEl","setAnchorEl","popOverRef","setTimeout","idx","src","earth","alt","event","currentTarget","type","ClickAwayListener","onClickAway","Popper","transition","TransitionProps","Fade","timeout","prev","Array","from","_","DESC","Routes","exact","component","render","to","ImageButton","selected","darken","lighten","ButtonTopRight","Origin","Menus","children","isClosableTab","opener","close","AppContainer","App","onContextMenu","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1cbf7ee1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth.56b56168.svg\";","import React from \"react\";\nimport { SvgIcon, SvgIconProps } from \"@material-ui/core\";\n\nconst WomanGray: React.FC<SvgIconProps> = () => {\n  return (\n    <SvgIcon\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"32\"\n      height=\"32\"\n      viewBox=\"0 0 32 32\"\n    >\n      <g transform=\"translate(-40 -1008)\">\n        <text\n          id=\"_\"\n          fill=\"#717578\"\n          fontFamily=\"YJ\"\n          fontSize=\"18px\"\n          transform=\"translate(50 1031)\"\n        >\n          <tspan x=\"0\" y=\"0\">\n            ?\n          </tspan>\n        </text>\n        <g fill=\"#717578\" transform=\"translate(40 1007.764)\">\n          <g clipPath=\"url(#clip-path)\">\n            <path\n              d=\"M15.907 31.812a15.906 15.906 0 1 1 15.907-15.907 15.926 15.926 0 0 1-15.907 15.907m0-28.279A12.372 12.372 0 1 0 28.28 15.905 12.39 12.39 0 0 0 15.907 3.534\"\n              transform=\"translate(0 .429)\"\n            />\n          </g>\n        </g>\n      </g>\n    </SvgIcon>\n  );\n};\n\nexport default WomanGray;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { ROUTES } from \"../../routes\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const FlexMixin = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const MainContainer = styled.div`\n  padding-top: 50px;\n  flex-direction: column;\n  width: 100%;\n  flex: 1;\n  background-color: #f8f8f8;\n  ${FlexMixin}\n`;\n\nexport const MainTitle = styled.div`\n  font-size: 76px;\n  color: #1b94a3;\n  font-family: \"YJ\", sans-serif;\n`;\n\nexport const SubTitle = styled.div`\n  font-size: 28px;\n  margin-top: 10px;\n  letter-spacing: -0.6px;\n  color: #3c3c3c;\n  font-family: \"Spotlight\", sans-serif;\n`;\n\nexport const SubjectsContainer = styled.div`\n  margin-top: 70px;\n  display: flex;\n  width: 100%;\n  flex: 1;\n  height: 100%;\n  justify-content: space-around;\n`;\n\nexport const SubjectContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 220px;\n  flex: 1;\n`;\n\nexport const SubSubjectsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n`;\n\ntype SubjectProps = {\n  bgColor?: string;\n};\n\nexport const Subject = styled.div<SubjectProps>`\n  font-family: \"Spotlight\", sans-serif;\n  height: 220px;\n  width: 100%;\n  border-radius: 50%;\n  font-size: 42px;\n  line-height: 1.83;\n  letter-spacing: -0.84px;\n  color: #ffffff;\n  margin-bottom: 30px;\n  ${({ bgColor }) => css`\n    background-color: ${bgColor ? bgColor : \"#66d5c4\"};\n  `}\n\n  ${FlexMixin}\n`;\n\nexport const SubSubject = styled.div<SubjectProps>`\n  cursor: pointer;\n  font-weight: 800;\n  max-width: 105px;\n  height: 105px;\n  width: 100%;\n  border-radius: 10px;\n  white-space: pre;\n  font-size: 20px;\n  line-height: 1.3;\n  letter-spacing: -0.4px;\n  color: #ffffff;\n  margin-bottom: 10px;\n  text-align: center;\n  word-break: keep-all;\n\n  ${({ bgColor }) => css`\n    background-color: ${bgColor ? bgColor : \"#66d5c4\"};\n    &:hover {\n      opacity: 0.7;\n    }\n  `}\n  ${FlexMixin}\n`;\n\nconst Main: React.FC = () => {\n  const history = useHistory();\n  return (\n    <MainContainer>\n      <MainTitle>데이터로 보는 지구촌</MainTitle>\n      <SubTitle>관심 주제를 선택하여 세계속의 한국을 알아보세요!</SubTitle>\n      <SubjectsContainer>\n        {ROUTES.map((route) => {\n          return (\n            <SubjectContainer key={route.prefix}>\n              <Subject bgColor={route.color}>{route.subject}</Subject>\n              <SubSubjectsContainer>\n                {route.paths.map((path) => {\n                  return (\n                    <SubSubject\n                      bgColor={route.color}\n                      key={path.subSubject}\n                      onClick={() => {\n                        history.push(`/${route.prefix}/${path.path}`);\n                      }}\n                    >\n                      {path.subSubject}\n                    </SubSubject>\n                  );\n                })}\n              </SubSubjectsContainer>\n            </SubjectContainer>\n          );\n        })}\n      </SubjectsContainer>\n    </MainContainer>\n  );\n};\n\nexport default Main;\n","import styled, { css } from \"styled-components\";\nimport { FlexMixin } from \"../main\";\nimport { Divider } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport const GlobContainer = styled.div`\n  display: flex;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Contents = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding-top: 50px;\n  padding-bottom: 40px;\n  margin: 0 60px;\n  align-items: center;\n`;\n\nexport const Sidebar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n`;\n\nexport const SidebarTitle = styled.div`\n  font-family: \"YJ\", sans-serif;\n  padding-top: 40px;\n  padding-left: 40px;\n  font-size: 28px;\n  line-height: 1.32;\n  color: #1b94a3;\n  white-space: pre;\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const EarthImg = styled.img`\n  position: absolute;\n  bottom: 5px;\n  margin-left: 5px;\n`;\n\nexport const SidebarHelpMixin = css`\n  margin-bottom: 40px;\n  margin-left: 40px;\n  outline: 0;\n  border: 0;\n  cursor: pointer;\n  background: none;\n  width: 40px;\n`;\n\nexport const SidebarHelp = styled.button`\n  ${SidebarHelpMixin}\n`;\n\nexport const HelpDiv = styled.div`\n  padding: 15px;\n  font-size: 18px;\n  color: #717578;\n  border-radius: 5px;\n  border: 1px solid lightgray;\n  background-color: #fcfcfc;\n  line-height: 1.5;\n`;\n\nexport const SidebarLinks = styled.div`\n  margin-top: 0;\n  display: flex;\n  flex-direction: column;\n`;\n\ntype LinkProps = {\n  bgColor?: string;\n  active?: boolean;\n};\n\nexport const Link = styled.div<LinkProps>`\n  width: 130px;\n  height: 70px;\n  font-family: \"Spotlight\", sans-serif;\n  color: #fff;\n  cursor: pointer;\n  font-size: 30px;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  margin-bottom: 12px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n  &:hover {\n    opacity: 0.7;\n  }\n\n  ${({ bgColor, active }) => css`\n    background-color: ${bgColor ? bgColor : \"#66d5c4\"};\n    box-shadow: ${active ? \"3px 3px 3px 3px gray\" : \"\"};\n  `}\n  ${FlexMixin}\n`;\n\nexport const ContentTitle = styled.div`\n  font-family: \"YJ\", sans-serif;\n  font-size: 36px;\n  ${FlexMixin};\n`;\nexport const HeaderContainer = styled.div`\n  margin-bottom: 40px;\n  flex-direction: column;\n  ${FlexMixin};\n`;\n\nexport const ContentDesc = styled.div`\n  font-family: \"Spotlight\", sans-serif;\n  font-size: 22px;\n  margin-top: 10px;\n  text-align: center;\n  color: #717578;\n`;\nexport const ContentRef = styled.div`\n  font-size: 18px;\n  margin-top: 10px;\n  text-align: center;\n  color: #717578;\n`;\nexport const ContentDivider = styled(Divider)`\n  &.MuiDivider-root {\n    background-color: #717578;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`;\n\nexport const CircleContainer = styled.div`\n  border-top: 1px solid #717578;\n  display: flex;\n  padding-top: 40px;\n`;\n\nexport const LeftContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const SelectContainer = styled.div``;\nexport const SelectLabel = styled.div`\n  font-size: 30px;\n  color: #3c3c3c;\n  margin-bottom: 15px;\n  font-family: \"Spotlight\", sans-serif;\n`;\nexport const ChartTitle = styled.div`\n  color: #717578;\n  font-size: 22px;\n  font-weight: bold;\n`;\n\nexport const EarthContainer = styled.div`\n  display: flex;\n  margin-left: 60px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LegendContainer = styled.div`\n  margin-left: 40px;\n  width: 116px;\n  ${FlexMixin}\n`;\n\nexport const LegendInnerContainer = styled.div`\n  height: 180px;\n  flex: 1;\n  display: flex;\n`;\nexport const Legend = styled.div`\n  display: flex;\n  height: 100%;\n  width: 17px;\n  flex-direction: column;\n`;\nexport const LegendLabel = styled.div`\n  height: 200px;\n  margin-left: 8px;\n  font-size: 12px;\n  color: #717578;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-top: -10px;\n`;\nexport const LegendElement = styled.div`\n  flex: 1;\n`;\n\nexport const TableContainer = styled.div`\n  flex-direction: column;\n  ${FlexMixin};\n  justify-content: space-between;\n`;\n\nexport const TableInnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  flex: 1;\n  width: 100%;\n`;\nexport const TableTitle = styled.div`\n  font-size: 24px;\n  color: #717578;\n  font-weight: 800;\n  margin-bottom: 14px;\n`;\nexport const TableHeaderCell = styled.th`\n  text-align: left;\n  font-size: 18px;\n  padding: 6px 0 7px 15px;\n  color: #717578;\n  background-color: #efefef;\n  border-right: solid 2px #d9d9d9;\n  border-collapse: collapse;\n  &:last-child {\n    border-right: none;\n  }\n`;\n\nexport const TableBodyCell = styled.td`\n  text-align: left;\n  font-size: 18px;\n  padding: 6px 0 7px 15px;\n  color: #717578;\n  border-right: solid 1px #d9d9d9;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  border-bottom: solid 1px #d9d9d9;\n  border-collapse: collapse;\n  &:last-child {\n    border-right: none;\n  }\n`;\n\nexport const CustomTextField = styled(TextField)`\n  width: 130px;\n  height: 49px;\n  .MuiSelect-outlined.MuiSelect-outlined {\n    padding: 15px 5px 10px 5px;\n    font-family: \"Spotlight\", sans-serif;\n    color: #717578;\n    margin-left: 5px;\n    font-size: 21px;\n  }\n`;\n\nexport const PointText = styled.span`\n  color: #1b94a3;\n  font-weight: 800;\n`;\n\nexport const GlobeContainer = styled.div`\n  flex-direction: column;\n  font-family: \"Spotlight\", sans-serif;\n  color: #717578;\n  height: 100%;\n  ${FlexMixin};\n`;\n\nexport const ButtonContainer = styled.div`\n  height: 50px;\n  ${FlexMixin};\n`;\n\ntype ChangeButtonProps = {\n  bgColor: string;\n};\n\nexport const ChangeButton = styled.button<ChangeButtonProps>`\n  margin-left: auto;\n  border-radius: 8px;\n  height: 100%;\n  outline: none;\n  border: none;\n  width: 240px;\n  font-family: \"Spotlight\", sans-serif;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  ${({ bgColor }) => css`\n    background-color: ${bgColor};\n  `}\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const ChartArea = styled.div`\n  margin-top: 20%;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nexport const ChartContainer = styled.div`\n  flex: 1;\n`;\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogProps,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { FlexMixin, SubSubject } from \"components/pages/main\";\nimport { useHistory } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\nexport type Path = {\n  subSubject: string;\n  path: string;\n  unit: string;\n  description: string;\n  reference: string;\n  years: number[];\n};\nexport type Route = {\n  subject: string;\n  prefix: string;\n  color: string;\n  colors: string[];\n  paths: Path[];\n};\n\ninterface Props extends DialogProps {\n  route: Route | null;\n}\ntype SubjectTypoProps = {\n  color?: string;\n};\nconst SubjectTypo = styled.div<SubjectTypoProps>`\n  ${({ color }) => css`\n    font-family: \"Spotlight\", sans-serif;\n    color: ${color ? color : \"black\"};\n    ${FlexMixin}\n  `}\n`;\n\nconst SubjectContainer = styled.div`\n  display: flex;\n`;\n\nconst LinkSubSubject = styled(SubSubject)`\n  width: 120px;\n  margin-right: 10px;\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst LinkModal: React.FC<Props> = ({ open, onClose, route }) => {\n  const history = useHistory();\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>\n        {route && (\n          <SubjectTypo color={route.color}>{route.subject}</SubjectTypo>\n        )}\n      </DialogTitle>\n      <DialogContent>\n        <SubjectContainer>\n          {route &&\n            route.paths.map((path) => {\n              return (\n                <LinkSubSubject\n                  bgColor={route.color}\n                  key={path.subSubject}\n                  onClick={() => {\n                    history.push(`/${route.prefix}/${path.path}`);\n                  }}\n                >\n                  {path.subSubject}\n                </LinkSubSubject>\n              );\n            })}\n        </SubjectContainer>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          style={{ color: route?.color }}\n          onClick={() => onClose!({}, \"backdropClick\")}\n        >\n          닫기\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default LinkModal;\n","import React, { Dispatch, SetStateAction, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport {\n  Bar,\n  BarChart,\n  Cell,\n  LabelList,\n  XAxis,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Coords } from \"../CountryTable\";\n\ntype GlobChartProps = {\n  korea: number;\n  avg: number;\n  color: string;\n  subSubject: string;\n  rank: string | null;\n  setCoords: Dispatch<SetStateAction<Coords>>;\n  unit: string;\n};\n\nconst useStyles = makeStyles(\n  () => {\n    return {\n      cell: {\n        \"&:hover\": {\n          opacity: 0.5,\n        },\n      },\n    };\n  },\n  { index: 1 }\n);\n\nconst GlobChart: React.FC<GlobChartProps> = ({\n  korea,\n  avg,\n  color,\n  unit,\n  setCoords,\n  rank,\n}) => {\n  const classes = useStyles();\n  const [data, setData] = useState([\n    { name: \"한국\", value: korea },\n    { name: \"지구촌 평균\", value: avg },\n  ]);\n\n  useEffect(() => {\n    setData([\n      { name: \"한국\", value: korea },\n      { name: \"지구촌 평균\", value: avg },\n    ]);\n  }, [korea, avg]);\n  return (\n    <ResponsiveContainer>\n      <BarChart\n        margin={{\n          top: 50,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n        data={data}\n      >\n        <XAxis dataKey=\"name\" />\n        <Bar dataKey=\"value\" isAnimationActive={false}>\n          <LabelList\n            data={data}\n            dataKey=\"value\"\n            content={(props) => {\n              const { x, y, width, value, index } = props as any;\n              return (\n                <g>\n                  <text\n                    x={Number(x) + Number(width) / 2}\n                    y={Number(y) - (index === 0 ? 40 : 20)}\n                    fontSize={21}\n                    fontFamily=\"Spotlight\"\n                    fill=\"#717578\"\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"middle\"\n                  >\n                    {value}\n                    {unit}\n                  </text>\n                  {index === 0 && (\n                    <text\n                      x={Number(x) + Number(width) / 2}\n                      y={Number(y) - 20}\n                      fontSize={18}\n                      fontFamily=\"Spotlight\"\n                      fill=\"#717578\"\n                      textAnchor=\"middle\"\n                      dominantBaseline=\"middle\"\n                    >\n                      ({rank ? `상위 ${rank}%` : \"데이터 없음\"})\n                    </text>\n                  )}\n                </g>\n              );\n            }}\n          />\n          {data.map((entry, index) => {\n            return (\n              <Cell\n                onClick={() => {\n                  if (index === 0) {\n                    setCoords({\n                      latitude: 35.907757,\n                      longitude: 127.766922,\n                      label: \"한국\",\n                      value: korea,\n                    });\n                  }\n                }}\n                className={index === 0 ? classes.cell : \"\"}\n                style={{ cursor: index === 0 ? \"cursor\" : \"inherit\" }}\n                key={`cell-${index}`}\n                fill={index === 0 ? color : \"#d9d9d9\"}\n              />\n            );\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default GlobChart;\n","export default __webpack_public_path__ + \"static/media/globe.db0f72d2.jpg\";","type GetColorByValueProps = {\n  value: number;\n  colors: string[];\n  max: number;\n  gap: number;\n  isReturnIndex?: boolean;\n};\n\nexport const getColorByValue = ({\n  colors,\n  max,\n  value,\n  gap,\n  isReturnIndex = false,\n}: GetColorByValueProps) => {\n  const { length } = colors;\n  let color = colors[0];\n  const listOfIndex = [0, 1, 2, 3, 4];\n  let index = 0;\n  listOfIndex.some((i) => {\n    if (value <= max - gap * i && value > max - gap * (i + 1)) {\n      color = colors[length - (i + 1)];\n      index = length - (i + 1);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (isReturnIndex) {\n    return index.toString();\n  }\n  return color;\n};\ntype RenderTooltipProps = {\n  K: string;\n  ADMIN: string;\n  subSubject: string;\n  value: string | number;\n  unit: string;\n};\nexport const renderTooltip = ({\n  K,\n  ADMIN,\n  subSubject,\n  value,\n  unit,\n}: RenderTooltipProps) => {\n  return `<div style=\"background:#fafafa; color:#3c3c3c; padding: 10px; box-shadow: 5px 5px 5px #bcbcbc; border-radius: 5px;\">\n        <b style=\"font-weight:800; font-size: 18px\">\n        ${K ? K : ADMIN}</b><br/>${subSubject}: <i>\n        ${\n          Number(value) ? `${Number(value).toFixed(2)}${unit}` : \"자료 없음\"\n        }</i></div>`;\n};\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport \"tippy.js/dist/tippy.css\";\nimport \"tippy.js/animations/scale.css\";\nimport Globe from \"react-globe.gl\";\nimport codeMap from \"datasets/kr_code_map.json\";\nimport countriesJson from \"datasets/examples/countries.json\";\nimport globeTexture from \"assets/images/globe.jpg\";\nimport { Coords } from \"../CountryTable\";\nimport yangin from \"assets/fonts/YangJin/YANGJIN_Regular.json\";\nimport COORDS from \"datasets/coords.json\";\nimport { getColorByValue, renderTooltip } from \"utils/helper\";\ntype Country = {\n  K: string;\n  TWO: string;\n  THREE: string;\n  value: string;\n};\n\ntype GlobalGlobProps = {\n  data: Record<string, Country>;\n  colors: string[];\n  subSubject: string;\n  max: number;\n  gap: number;\n  coords: Coords;\n  unit: string;\n  rotate: boolean;\n  setRotate: Dispatch<SetStateAction<boolean>>;\n  setCoords: Dispatch<SetStateAction<Coords>>;\n};\n\nconst GlobalGlob: React.FC<GlobalGlobProps> = ({\n  data,\n  colors,\n  subSubject,\n  gap,\n  max,\n  unit,\n  coords,\n  setCoords,\n  rotate,\n  setRotate,\n}) => {\n  const globe = useRef<any>(null);\n  const [label, setLabel] = useState([\n    {\n      lat: coords.latitude,\n      lng: coords.longitude,\n      label: `${coords.label}, ${subSubject}: ${coords.value.toFixed(\n        2\n      )}${unit}`,\n    },\n  ]);\n  const [newCountries, setNewCountries] = useState({\n    ...countriesJson,\n    features: countriesJson.features.map((feature) => {\n      const { properties } = feature;\n      const country = data[properties.ADM0_A3_IS];\n      const applyCountry = country || (codeMap as any)[properties.ADM0_A3_IS];\n      return {\n        ...feature,\n        properties: {\n          ...feature.properties,\n          ...applyCountry,\n        },\n      };\n    }),\n  });\n\n  const color = (props: any) => {\n    const value = Number(props.properties.value);\n    return value\n      ? getColorByValue({\n          max,\n          gap,\n          value,\n          colors,\n        })\n      : colors[0];\n  };\n\n  useEffect(() => {\n    if (data) {\n      setNewCountries({\n        ...countriesJson,\n        features: countriesJson.features.map((feature) => {\n          const { properties } = feature;\n          const country = data[properties.ADM0_A3_IS];\n          const applyCountry =\n            country || (codeMap as any)[properties.ADM0_A3_IS];\n          return {\n            ...feature,\n            properties: {\n              ...feature.properties,\n              ...applyCountry,\n            },\n          };\n        }),\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    let index = 0;\n    const filteredData = Object.keys(data)\n      .map((key) => {\n        const item = data[key];\n        return {\n          ...item,\n        };\n      })\n      .filter((item) => Number(item.value));\n    const interval = setInterval(() => {\n      if (index >= filteredData.length) {\n        index -= filteredData.length;\n      }\n      const country = filteredData[index];\n      const coords = (COORDS as any)[country.TWO];\n      setCoords({\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        value: Number(country.value),\n        label: country.K,\n      });\n      index += 1;\n    }, 2000);\n    if (!rotate) {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [setCoords, data, rotate]);\n\n  useEffect(() => {\n    if (globe.current) {\n      const camera = globe.current.camera();\n      camera.zoom = 1.5;\n      globe.current.controls().enableZoom = false;\n      camera.updateProjectionMatrix();\n    }\n  }, [globe]);\n\n  useEffect(() => {\n    if (globe.current) {\n      globe.current.pointOfView(\n        {\n          lat: coords.latitude,\n          lng: coords.longitude,\n        },\n        1000\n      );\n      setLabel([\n        {\n          lat: coords.latitude,\n          lng: coords.longitude,\n          label: `${coords.label}, ${subSubject}: ${coords.value.toFixed(\n            2\n          )}${unit}`,\n        },\n      ]);\n    }\n  }, [coords, unit, subSubject]);\n  return (\n    <Globe\n      ref={globe}\n      globeImageUrl={globeTexture}\n      height={window.innerHeight * 0.6}\n      width={window.innerHeight * 0.6}\n      animateIn={false}\n      labelsData={label}\n      labelText=\"label\"\n      labelSize={1.6}\n      labelTypeFace={yangin}\n      labelColor={useCallback(() => \"black\", [])}\n      labelDotRadius={0.4}\n      labelAltitude={0.05}\n      onPolygonHover={() => {\n        setRotate(false);\n        setLabel([]);\n      }}\n      polygonsData={newCountries.features}\n      polygonCapColor={color}\n      polygonSideColor={color}\n      polygonStrokeColor={() => \"lightgray\"}\n      backgroundColor=\"rgba(255,255,255,0)\"\n      polygonLabel={(props) => {\n        const assertedProps = props as any;\n        const { properties } = assertedProps;\n        const { ADMIN } = properties;\n        return renderTooltip({\n          K: properties.K,\n          ADMIN: ADMIN,\n          subSubject,\n          unit,\n          value: properties.value,\n        });\n      }}\n    />\n  );\n};\n\nexport default GlobalGlob;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport {\n  TableBodyCell,\n  TableHeaderCell,\n  TableInnerContainer,\n  TableTitle,\n} from \"../../pages/glob/styles\";\nimport COORDS from \"datasets/coords.json\";\nimport styled from \"styled-components\";\nexport type ForSortingItem = {\n  country: string;\n  value: number;\n  code: string;\n};\n\nexport type Coords = {\n  latitude: number;\n  longitude: number;\n  value: number;\n  label: string;\n};\n\nexport type CountryTableProps = {\n  title: string;\n  unit: string;\n  setCoords: Dispatch<SetStateAction<Coords>>;\n  sortedValues: ForSortingItem[];\n  setRotate: Dispatch<SetStateAction<boolean>>;\n};\n\nexport const Tr = styled.tr`\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n    opacity: 0.7;\n  }\n`;\n\nconst CountryTable: React.FC<CountryTableProps> = ({\n  sortedValues,\n  title,\n  unit,\n  setCoords,\n  setRotate,\n}) => {\n  return (\n    <TableInnerContainer>\n      <TableTitle>{title}</TableTitle>\n      <table>\n        <thead>\n          <tr>\n            <TableHeaderCell>국가명</TableHeaderCell>\n            <TableHeaderCell>값</TableHeaderCell>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedValues.slice(0, 5).map((item) => {\n            return (\n              <Tr\n                key={item.country}\n                onClick={() => {\n                  const coords = (COORDS as any)[item.code];\n                  if (coords) {\n                    const { latitude, longitude } = coords;\n                    setRotate(false);\n                    setCoords({\n                      latitude,\n                      longitude,\n                      value: item.value,\n                      label: item.country,\n                    });\n                  }\n                }}\n              >\n                <TableBodyCell>{item.country}</TableBodyCell>\n                <TableBodyCell>\n                  {item.value.toFixed(2)}\n                  {unit}\n                </TableBodyCell>\n              </Tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </TableInnerContainer>\n  );\n};\n\nexport default CountryTable;\n","import {\n  ChangeButton,\n  ChartArea,\n  ChartContainer,\n  ChartTitle,\n  CircleContainer,\n  Content,\n  ContentDivider,\n  CustomTextField,\n  EarthContainer,\n  GlobeContainer,\n  LeftContainer,\n  Legend,\n  LegendContainer,\n  LegendElement,\n  LegendInnerContainer,\n  LegendLabel,\n  SelectContainer,\n  SelectLabel,\n  TableContainer,\n} from \"../../pages/glob/styles\";\nimport { MenuItem, Tooltip } from \"@material-ui/core\";\nimport GlobChart from \"../glob-chart\";\nimport GlobalGlob from \"../global-glob\";\nimport CountryTable, { Coords } from \"../CountryTable\";\nimport React, { Dispatch, SetStateAction, useState } from \"react\";\nimport { SORT_TYPE } from \"../../routes\";\n\ntype Props = {\n  subSubject: string;\n  year: number;\n  years: number[];\n  setYear: Dispatch<SetStateAction<number>>;\n  rank: null | string;\n  unit: string;\n  korea: number;\n  setCoords: Dispatch<SetStateAction<Coords>>;\n  avg: number;\n  coords: Coords;\n  color: string;\n  max: number;\n  isDisplay: boolean;\n  gap: number;\n  data: any;\n  colors: string[];\n  reverseColors: string[];\n  sortedValues: any;\n  setCircle: Dispatch<SetStateAction<boolean>>;\n  sort: SORT_TYPE;\n};\n\nconst CircleMap: React.FC<Props> = ({\n  subSubject,\n  year,\n  years,\n  setCircle,\n  setYear,\n  rank,\n  unit,\n  korea,\n  isDisplay,\n  setCoords,\n  avg,\n  color,\n  coords,\n  max,\n  gap,\n  sort,\n  data,\n  colors,\n  reverseColors,\n  sortedValues,\n}) => {\n  const [rotate, setRotate] = useState(true);\n  return (\n    <Content style={{ display: isDisplay ? \"inherit\" : \"none\" }}>\n      <CircleContainer>\n        <LeftContainer>\n          <SelectContainer>\n            <SelectLabel>{subSubject}</SelectLabel>\n            <CustomTextField\n              variant=\"outlined\"\n              select\n              value={year}\n              onChange={(e) => {\n                setYear(Number(e.target.value));\n              }}\n            >\n              {years.map((year) => {\n                return (\n                  <MenuItem key={year} value={year}>\n                    {year}년\n                  </MenuItem>\n                );\n              })}\n            </CustomTextField>\n          </SelectContainer>\n          <ChartArea>\n            <ChartTitle>한국과 지구촌 평균 비교</ChartTitle>\n            <ContentDivider style={{ marginTop: 14, marginBottom: 0 }} />\n            <ChartContainer>\n              <GlobChart\n                rank={rank}\n                unit={unit}\n                korea={korea}\n                setCoords={setCoords}\n                avg={avg}\n                subSubject={subSubject}\n                color={color}\n              />\n            </ChartContainer>\n          </ChartArea>\n        </LeftContainer>\n        <EarthContainer>\n          <GlobeContainer>\n            <GlobalGlob\n              setCoords={setCoords}\n              max={max}\n              gap={gap}\n              rotate={rotate}\n              setRotate={setRotate}\n              data={data}\n              unit={unit}\n              coords={coords}\n              colors={colors}\n              subSubject={subSubject}\n            />\n            지구본을 돌려보세요\n          </GlobeContainer>\n          <LegendContainer>\n            <LegendInnerContainer>\n              <Legend>\n                {reverseColors.map((color, index) => {\n                  return (\n                    <Tooltip\n                      key={color}\n                      title={`${(max - (index + 1) * gap).toFixed(2)} ~ ${(\n                        max -\n                        index * gap\n                      ).toFixed(2)}${unit}`}\n                    >\n                      <LegendElement style={{ backgroundColor: color }} />\n                    </Tooltip>\n                  );\n                })}\n              </Legend>\n              <LegendLabel>\n                <div>\n                  {max.toFixed(2)}\n                  {unit}\n                </div>\n                <div>0{unit}</div>\n              </LegendLabel>\n            </LegendInnerContainer>\n          </LegendContainer>\n        </EarthContainer>\n        <TableContainer>\n          <CountryTable\n            unit={unit}\n            setRotate={setRotate}\n            setCoords={setCoords}\n            title=\"상위 5개 국가\"\n            sortedValues={\n              sort === SORT_TYPE.ASC\n                ? sortedValues.slice().reverse()\n                : sortedValues\n            }\n          />\n          <CountryTable\n            unit={unit}\n            setRotate={setRotate}\n            setCoords={setCoords}\n            title=\"하위 5개 국가\"\n            sortedValues={\n              sort === SORT_TYPE.ASC\n                ? sortedValues\n                : sortedValues.slice().reverse()\n            }\n          />\n          <ChangeButton\n            bgColor={color}\n            onClick={() => {\n              setCircle(false);\n            }}\n            style={{ height: 50 }}\n          >\n            평면으로 보기\n          </ChangeButton>\n        </TableContainer>\n      </CircleContainer>\n    </Content>\n  );\n};\n\nexport default CircleMap;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport DataMap from \"datamaps\";\nimport styled from \"styled-components\";\nimport { FlexMixin } from \"../../pages/main\";\nimport { getColorByValue, renderTooltip } from \"utils/helper\";\nimport PLANE from \"datasets/plane.json\";\nconst MapContainer = styled.div`\n  border-top: 1px solid rgb(113, 117, 120);\n  padding-top: 40px;\n  flex: 1 1 0;\n  ${FlexMixin}\n`;\n\nconst Map = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\ntype PlaneMapProps = {\n  data: any;\n  colors: string[];\n  gap: number;\n  max: number;\n  subSubject: string;\n  unit: string;\n};\n\nconst PlaneMap: React.FC<PlaneMapProps> = ({\n  data,\n  max,\n  subSubject,\n  unit,\n  colors,\n  gap,\n}) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<any | null>(null);\n  useEffect(() => {\n    if (mapRef.current && !map) {\n      let applyData: Record<string, any> = {};\n\n      Object.keys(PLANE).forEach((key) => {\n        const country = data[key];\n        const value = country ? Number(country.value) : undefined;\n        applyData[key] = {\n          fillKey: value\n            ? `level${getColorByValue({\n                colors,\n                max,\n                gap,\n                value: Number(country.value),\n                isReturnIndex: true,\n              })}`\n            : \"level0\",\n          ...(PLANE as any)[key],\n          value,\n        };\n      });\n      const newMap = new DataMap({\n        geographyConfig: {\n          highlightBorderColor: \"#bada55\",\n          popupTemplate: (geography: any, d: any) => {\n            return `<div style=\"position: relative; left: 100px;top: 50px;\">${renderTooltip(\n              {\n                K: d.K,\n                ADMIN: d.K,\n                subSubject,\n                unit,\n                value: d.value,\n              }\n            )}\n         </div>`;\n          },\n          highlightBorderWidth: 3,\n        },\n\n        element: mapRef.current,\n        projection: \"mercator\",\n        fills: {\n          defaultFill: colors[0],\n          level0: colors[0],\n          level1: colors[1],\n          level2: colors[2],\n          level3: colors[3],\n          level4: colors[4],\n          level5: colors[5],\n        },\n        data: applyData,\n      });\n      setMap(newMap);\n    }\n  }, [mapRef, colors, data, gap, max, map, subSubject, unit]);\n\n  return (\n    <MapContainer>\n      <Map ref={mapRef} />\n    </MapContainer>\n  );\n};\n\nexport default PlaneMap;\n","import Glob from \"components/pages/glob\";\nimport Main from \"components/pages/main\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nexport enum SORT_TYPE {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\nexport const ROUTES = [\n  {\n    subject: \"인구\",\n    prefix: \"populations\",\n    color: \"#66d5c4\",\n    colors: [\"#f4fdfc\", \"#dffaf6\", \"#b4f2e8\", \"#98ede0\", \"#81e6d7\", \"#66d5c4\"],\n    paths: [\n      {\n        subSubject: \"총 인구\",\n        path: \"총인구\",\n        unit: \"천명\",\n        sort: SORT_TYPE.ASC,\n        description: \"중위(medium) 자료, 장래인구는 7월1일 시점의 인구를 기준\",\n        reference: \"통계청\",\n        years: Array.from(new Array(15)).map((_, index) => 1980 + index * 5),\n      },\n      {\n        subSubject: \"출산율\",\n        path: \"출산율\",\n        unit: \"명\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"한 여성이 평생동안 평균 몇 명의 자녀를 낳는가를 나타내는 지표\",\n        reference: \"통계청\",\n        years: Array.from(new Array(15)).map((_, index) => 1980 + index * 5),\n      },\n      {\n        subSubject: \"기대수명\",\n        path: \"기대수명\",\n        unit: \"세\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"0세 출생자가 향후 생존할 것으로 기대되는 평균 생존년수로, ‘0세의 기대여명’임\",\n        reference: \"통계청\",\n        years: Array.from(new Array(15)).map((_, index) => 1980 + index * 5),\n      },\n      {\n        subSubject: \"노령화지수\",\n        path: \"노령화지수\",\n        unit: \"%\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"유소년층(0~14세) 인구에 대한 노령층(65세 이상) 인구의 비율\",\n        reference: \"통계청\",\n        years: Array.from(new Array(15)).map((_, index) => 1980 + index * 5),\n      },\n    ],\n  },\n  {\n    subject: \"경제\",\n    prefix: \"economies\",\n    color: \"#73d6e8\",\n    colors: [\"#e2fbff\", \"#c7f3fa\", \"#b3edf7\", \"#a4e8f4\", \"#8be1f0\", \"#73d6e8\"],\n    paths: [\n      {\n        subSubject: \"1인당\\n국민 총 소득\",\n        path: \"1인당국민총소득\",\n        unit: \"$\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"당해년가격 GNI를 인구로 나눈 것으로 국제비교를 위하여 US$로 표시\",\n        reference: \"통계청\",\n        years: Array.from(new Array(20)).map((_, index) => 2000 + index),\n      },\n      {\n        subSubject: \"경제(GDP)\\n성장률\",\n        path: \"경제성장률\",\n        unit: \"%\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"일정기간 동안 경제규모의 실질적인 증가정도를 나타내는 지표로서, 기준년가격 GDP의 전년비 증가율로 나타냄\",\n        reference: \"통계청\",\n        years: Array.from(new Array(20)).map((_, index) => 2000 + index),\n      },\n      {\n        subSubject: \"도시화율\",\n        path: \"도시화율\",\n        unit: \"%\",\n        sort: SORT_TYPE.ASC,\n        description: \"전체인구 중에서 도시지역에 거주하는 인구비율.\",\n        reference: \"통계청\",\n        years: Array.from(new Array(20)).map((_, index) => 2000 + index),\n      },\n    ],\n  },\n  {\n    subject: \"근로\",\n    prefix: \"works\",\n    color: \"#f2ad8f\",\n    colors: [\"#fff2eb\", \"#ffe6d9\", \"#ffd5c1\", \"#fac9b2\", \"#f8bda2\", \"#f2ad8f\"],\n    paths: [\n      {\n        subSubject: \"고용률\",\n        path: \"고용률\",\n        unit: \"%\",\n        sort: SORT_TYPE.ASC,\n        description: \"생산가능인구(15~64세)대비 취업자 비율\",\n        reference: \"통계청\",\n        years: Array.from(new Array(20)).map((_, index) => 2000 + index),\n      },\n      {\n        subSubject: \"실업률\",\n        path: \"실업률\",\n        unit: \"%\",\n        sort: SORT_TYPE.DESC,\n        description: \"실업자가 경제활동인구(취업자+실업자)에서 차지하는 비율\",\n        reference: \"통계청\",\n        years: Array.from(new Array(20)).map((_, index) => 2000 + index),\n      },\n      {\n        subSubject: \"일 평균\\n근로시간\",\n        path: \"일평균근로시간\",\n        unit: \"시간\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"연평균 실제 근로시간=연간 총근로시간 ÷ 연간 평균 취업자 수\",\n        reference: \"통계청\",\n        years: Array.from(new Array(20)).map((_, index) => 2000 + index),\n      },\n    ],\n  },\n  {\n    subject: \"교육\",\n    prefix: \"educations\",\n    color: \"#f2d77c\",\n    colors: [\"#fff8e3\", \"#fff4d1\", \"#fff0be\", \"#fde9a4\", \"#f7e092\", \"#f2d77c\"],\n    paths: [\n      {\n        subSubject: \"초등 교사\\n1인당\\n학생 수\",\n        path: \"초등 교사 1인당 학생수\",\n        unit: \"명\",\n        sort: SORT_TYPE.DESC,\n        description:\n          \"학생 대 교사 비율에서 교사와 학생은 모두 인구조사를 기준으로 주어진 학력에 명시된 교육 수준에서 교사 대 학생의 평균 숫자임\",\n        reference: \"통계청\",\n        years: Array.from(new Array(19)).map((_, index) => 2000 + index),\n      },\n      {\n        subSubject: \"중등 교사\\n1인당\\n학생 수\",\n        path: \"중등 교사 1인당 학생수\",\n        unit: \"명\",\n        sort: SORT_TYPE.DESC,\n        description:\n          \"학생 대 교사 비율에서 교사와 학생은 모두 인구조사를 기준으로 주어진 학력에 명시된 교육 수준에서 교사 대 학생의 평균 숫자임\",\n        reference: \"통계청\",\n        years: Array.from(new Array(19)).map((_, index) => 2000 + index),\n      },\n      {\n        subSubject: \"수학\\n학업성취도\",\n        path: \"수학 학업성취도\",\n        unit: \"\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"건설적이고, 관심있고, 참여하는 시민으로서 개인의 삶에 필요한 판단을 수학게임의 이해와 식별 능력으로 측정\",\n        reference: \"통계청\",\n        years: Array.from(new Array(7)).map((_, index) => 2000 + index * 3),\n      },\n      {\n        subSubject: \"과학\\n학업성취도\",\n        path: \"과학 학업성취도\",\n        unit: \"\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"자연계와 인간 활동을 통하여 자연을 변화시키는 것에 대한 판단을 돕고, 증거에 근거하여 결론을 도출하는 과학적 지식을 사용하는 능력을 측정\",\n        reference: \"통계청\",\n        years: Array.from(new Array(7)).map((_, index) => 2000 + index * 3),\n      },\n      {\n        subSubject: \"고등학교\\n진학률\",\n        path: \"고등학교 진학률\",\n        unit: \"%\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"연령에 상관없이 주어진 교육 수준에 등록된 학생 수를 동일 교육 수준에 대한 이론적인 연령군의 인구에 대한 백분율로 표시함\",\n        reference: \"통계청\",\n        years: Array.from(new Array(19)).map((_, index) => 2000 + index),\n      },\n    ],\n  },\n  {\n    subject: \"사회\",\n    prefix: \"socials\",\n    color: \"#b4b8fd\",\n    colors: [\"#f4f4ff\", \"#eaebff\", \"#e0e2ff\", \"#d1d4ff\", \"#c4c7ff\", \"#b4b8fd\"],\n    paths: [\n      {\n        subSubject: \"인터넷\\n이용율\",\n        path: \"인터넷이용률\",\n        unit: \"%\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"국민 중 최근 1개월 이내 유선 또는 무선 인터넷을 이용한 사람을 집계, 국가에 따라 인터넷 이용자 정의가 다름\",\n        reference: \"통계청\",\n        years: Array.from(new Array(20)).map((_, index) => 2000 + index),\n      },\n      {\n        subSubject: \"범죄\\n발생 수\",\n        path: \"범죄발생수\",\n        unit: \"\",\n        sort: SORT_TYPE.DESC,\n        description: \"1만명당 살인건수\",\n        reference: \"통계청\",\n        years: Array.from(new Array(19)).map((_, index) => 2000 + index),\n      },\n      {\n        subSubject: \"성불평등\",\n        path: \"성불평등지수\",\n        sort: SORT_TYPE.DESC,\n        unit: \"\",\n        description:\n          \"모성 사망률과 청소년 출산율 수준을 살피고 여성 의원 비율, 중등학교 이상 교육 받은 비율, 경제활동참가율 격차를 살펴 지수를 산정\",\n        reference: \"통계청\",\n        years: [\n          2000,\n          2005,\n          2010,\n          2011,\n          2012,\n          2013,\n          2014,\n          2015,\n          2016,\n          2017,\n          2018,\n        ],\n      },\n    ],\n  },\n  {\n    subject: \"생태\",\n    prefix: \"ecologies\",\n    color: \"#efadff\",\n    colors: [\"#fdf2ff\", \"#fdebfd\", \"#f9e2ff\", \"#f7d6ff\", \"#f2c1fd\", \"#efadff\"],\n    paths: [\n      {\n        subSubject: \"토지황폐화\",\n        path: \"토지황폐화\",\n        sort: SORT_TYPE.DESC,\n        unit: \"%\",\n        description: \"총 토지 면적 (%)에서 황폐화 된 토지의 비율을 의미합니다.\",\n        reference: \"UN\",\n        years: [2015],\n      },\n      {\n        subSubject: \"보호구역 내\\n산림면적\",\n        path: \"보호구역 내 산림면적\",\n        unit: \"%\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"법적으로 확립된 보호 지역 내 산림 면적의 비율로, 높을 수록 산림 보호가 잘 되고 있음을 의미합니다.\",\n        reference: \"UN\",\n        years: [2000],\n      },\n      {\n        subSubject: \"육지생물\\n다양성\",\n        path: \"육지생물 다양성\",\n        unit: \"%\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"보호 지역에 포함된 육상 주요 생물 다양성 지역 (KBA)의 평균 비율을 측정합니다. 높을 수록 종이 다양함을 의미합니다.\",\n        reference: \"UN\",\n        years: [2000],\n      },\n      {\n        subSubject: \"수상생물\\n다양성\",\n        path: \"수상생물 다양성\",\n        unit: \"%\",\n        sort: SORT_TYPE.ASC,\n        description:\n          \"보호 지역에 포함된 민물 주요 생물 다양성 지역(KBA, key biodiversity areas)의 평균 비율을 측정합니다. 높을 수록 종이 다양함을 의미합니다.\",\n        reference: \"UN\",\n        years: [2000],\n      },\n    ],\n  },\n];\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Main} />\n      {ROUTES.map((route) => {\n        return route.paths.map((path) => {\n          return (\n            <Route\n              key={path.subSubject}\n              path={`/${route.prefix}/${path.path}`}\n              render={() => {\n                return (\n                  <Glob\n                    sort={path.sort}\n                    subSubject={path.subSubject}\n                    prefix={route.prefix}\n                    color={route.color}\n                    colors={route.colors}\n                    path={path.path}\n                    description={path.description}\n                    reference={path.reference}\n                    unit={path.unit}\n                    years={path.years}\n                  />\n                );\n              }}\n            />\n          );\n        });\n      })}\n      <Redirect path=\"*\" to=\"/\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport earth from \"assets/svgs/earth.svg\";\nimport Question from \"assets/svgs/question\";\nimport { ROUTES, SORT_TYPE } from \"../../routes\";\nimport { ClickAwayListener, Fade, Popper } from \"@material-ui/core\";\nimport {\n  ButtonContainer,\n  ChangeButton,\n  ContentContainer,\n  ContentDesc,\n  ContentRef,\n  Contents,\n  ContentTitle,\n  EarthImg,\n  GlobContainer,\n  HeaderContainer,\n  HelpDiv,\n  Link,\n  PointText,\n  Sidebar,\n  SidebarHelp,\n  SidebarLinks,\n  SidebarTitle,\n} from \"./styles\";\nimport { ForSortingItem } from \"components/organisms/CountryTable\";\nimport { useHistory } from \"react-router-dom\";\nimport totalData from \"datasets/total.json\";\nimport LinkModal, { Route } from \"../../organisms/link-modal\";\nimport CircleMap from \"../../organisms/circle-map\";\nimport PlaneMap from \"../../organisms/plane-map\";\n\ntype Props = {\n  subSubject: string;\n  prefix: string;\n  color: string;\n  colors: string[];\n  path: string;\n  unit: string;\n  description: string;\n  reference: string;\n  sort: SORT_TYPE;\n  years: number[];\n};\nconst assertedData: any = totalData;\n\nconst Glob: React.FC<Props> = ({\n  subSubject,\n  prefix,\n  color,\n  path,\n  colors,\n  years,\n  description,\n  reference,\n  unit,\n  sort,\n}) => {\n  const defaultYear =\n    years[years.length - 1] > 2020 && years.length >= 15\n      ? years[years.length - 7]\n      : years[years.length - 1];\n  const [year, setYear] = useState(defaultYear);\n  const [circle, setCircle] = useState(true);\n  const [data, setData] = useState(assertedData[prefix][path][year]);\n  const [modal, setModal] = useState<Route | null>(null);\n  const history = useHistory();\n  const dataForSorting: ForSortingItem[] = [];\n  const valueFilter = (key: string) => {\n    const country = data[key];\n    const numberValue = Number(country.value);\n    return Boolean(numberValue);\n  };\n  const filteredData = Object.keys(data).filter(valueFilter);\n  const totals = filteredData.map((key) => {\n    const country = data[key];\n    const value = Number(country.value);\n    dataForSorting.push({\n      country: country.K,\n      code: country.TWO,\n      value,\n    });\n    return Number(country.value);\n  });\n  const korea = data.KOR\n    ? Number((Number(data[\"KOR\"].value) || 0).toFixed(2))\n    : 0;\n  const avg = Number(\n    (totals.reduce((a, b) => a + b, 0) / totals.length).toFixed(2)\n  );\n  const [coords, setCoords] = useState({\n    latitude: 35.907757,\n    longitude: 127.766922,\n    label: \"한국\",\n    value: korea,\n  });\n  const max = Math.max(...totals);\n  const gap = max / colors.length;\n  const reverseColors = colors.slice().reverse();\n  const sortedValues = dataForSorting.sort((a, b) => a.value - b.value);\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (anchorEl) {\n      setAnchorEl(null);\n    } else {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n  const popOverRef = useRef<HTMLButtonElement>(null);\n  useEffect(() => {\n    setData(assertedData[prefix][path][year]);\n  }, [prefix, path, year]);\n  useEffect(() => {\n    setCoords({\n      latitude: 35.907757,\n      longitude: 127.766922,\n      label: \"한국\",\n      value: korea,\n    });\n  }, [korea]);\n  useEffect(() => {\n    if (popOverRef.current) {\n      setTimeout(() => {\n        setAnchorEl(popOverRef.current);\n      }, 500);\n    }\n  }, [popOverRef, circle]);\n  let rank = null;\n  sortedValues.some((i, idx) => {\n    if (i.code === \"KR\") {\n      rank = `${(\n        ((sort === SORT_TYPE.ASC ? sortedValues.length - idx : idx) /\n          sortedValues.length) *\n        100\n      ).toFixed(0)}`;\n      return true;\n    }\n    return false;\n  });\n  return (\n    <GlobContainer>\n      <Sidebar>\n        <SidebarTitle\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          {`데이터로\\n보는\\n지구촌`}\n          <EarthImg src={earth} alt=\"earth\" />\n        </SidebarTitle>\n        <SidebarLinks>\n          {ROUTES.map((route) => {\n            return (\n              <Link\n                active={route.prefix === prefix}\n                key={route.subject}\n                bgColor={route.color}\n                onClick={() => {\n                  setModal(route);\n                }}\n              >\n                {route.subject}\n              </Link>\n            );\n          })}\n        </SidebarLinks>\n        <SidebarHelp\n          ref={popOverRef}\n          color=\"primary\"\n          onClick={handleClick}\n          type=\"button\"\n        >\n          <Question />\n        </SidebarHelp>\n        {!!anchorEl && (\n          <ClickAwayListener\n            onClickAway={() => {\n              setAnchorEl(null);\n            }}\n          >\n            <Popper open={!!anchorEl} anchorEl={anchorEl} transition>\n              {({ TransitionProps }) => (\n                <Fade {...TransitionProps} timeout={350}>\n                  {circle ? (\n                    <HelpDiv>\n                      상단에서 <PointText>연도를 선택</PointText>하면 해당\n                      주제의 <br />\n                      연도별, 국가별 데이터를 확인할 수 있습니다. <br />\n                      다른 주제가 궁금하다면 <br />\n                      왼쪽의 <PointText>카테고리</PointText>를 클릭해보세요.\n                    </HelpDiv>\n                  ) : (\n                    <HelpDiv>\n                      <PointText>지도 위를 터치</PointText>하여 국가명과\n                      데이터를 확인해보세요\n                    </HelpDiv>\n                  )}\n                </Fade>\n              )}\n            </Popper>\n          </ClickAwayListener>\n        )}\n      </Sidebar>\n      <Contents>\n        <HeaderContainer>\n          <ContentTitle>{`${year}년 ${subSubject}`}</ContentTitle>\n          <ContentDesc>{description}</ContentDesc>\n          <ContentRef>{`자료 출처: ${reference} - 전 세계 245개 국가 중 데이터가 존재하는 ${sortedValues.length}개 국가의 데이터입니다.`}</ContentRef>\n        </HeaderContainer>\n        <ContentContainer>\n          <CircleMap\n            setCircle={setCircle}\n            isDisplay={circle}\n            subSubject={subSubject}\n            year={year}\n            years={years}\n            setYear={setYear}\n            rank={rank}\n            unit={unit}\n            korea={korea}\n            setCoords={setCoords}\n            avg={avg}\n            color={color}\n            coords={coords}\n            max={max}\n            gap={gap}\n            sort={sort}\n            data={data}\n            colors={colors}\n            reverseColors={reverseColors}\n            sortedValues={sortedValues}\n          />\n          {!circle && (\n            <PlaneMap\n              max={max}\n              colors={colors}\n              gap={gap}\n              data={data}\n              subSubject={subSubject}\n              unit={unit}\n            />\n          )}\n\n          {!circle && (\n            <ButtonContainer>\n              <ChangeButton\n                bgColor={color}\n                onClick={() => setCircle((prev) => !prev)}\n              >\n                {`원형으로 보기`}\n              </ChangeButton>\n            </ButtonContainer>\n          )}\n        </ContentContainer>\n      </Contents>\n      <LinkModal open={!!modal} onClose={() => setModal(null)} route={modal} />\n    </GlobContainer>\n  );\n};\n\nexport default Glob;\n","import { darken, lighten } from '@material-ui/core';\nimport styled, { css } from 'styled-components';\n\nconst ImageButton = styled.button`\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  background-color: transparent;\n  font-size: 2.25rem;\n  z-index: 1;\n\n  ${() => {\n    const selected = '#d9d9d9';\n    return css`\n      color: ${selected};\n      &:hover {\n        color: ${darken(selected, 0.1)};\n      }\n      &:active {\n        color: ${lighten(selected, 0.1)};\n      }\n      &:disabled {\n        color: ${lighten(selected, 0.4)};\n        cursor: not-allowed;\n      }\n    `;\n  }}\n`;\n\nexport default ImageButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaHome as Home } from 'react-icons/fa';\nimport ImageButton from './ImageButton';\n\nconst ButtonTopRight = styled.div`\n  position: absolute;\n  top: 1.5rem;\n  right: 1.5rem;\n  display: flex;\n  justify-content: flex-end;\n\n  button + button {\n    margin-left: 1rem;\n  }\n`;\n\nconst Origin = styled.div`\n  position: absolute;\n  right: 1rem;\n  bottom: 1rem;\n  font-size: 0.6rem;\n`;\n\nconst Menus: React.FC = ({ children }) => {\n  const closeTab = () => window.close();\n  const isClosableTab = window.opener !== null;\n  return (\n    <>\n      <ButtonTopRight>\n        {isClosableTab && (\n          <ImageButton onClick={closeTab}>\n            <Home />\n          </ImageButton>\n        )}\n      </ButtonTopRight>\n      <Origin>© 2021. 05. DataDriven. All rights reserved.</Origin>\n    </>\n  );\n};\n\nexport default Menus;\n","import React from 'react';\nimport Routes from 'components/routes';\nimport styled from 'styled-components';\nimport Menus from 'components/organisms/Menus';\n\nconst AppContainer = styled.div`\n  flex-direction: column;\n  -ms-user-select: none;\n  -webkit-user-select: none;\n  user-select: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  position: relative;\n`;\n\nfunction App() {\n  return (\n    <AppContainer\n      onContextMenu={(e) => {\n        e.preventDefault();\n      }}\n    >\n      <Menus />\n      <Routes />\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"d3/dist/d3.min\";\nimport \"topojson/dist/topojson.min\";\nimport \"datamaps/dist/datamaps.world.min\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}