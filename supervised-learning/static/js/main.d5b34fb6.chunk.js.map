{"version":3,"sources":["App/datas.ts","styles/colors.ts","styles/animations.ts","App/context.ts","components/ImageButton.tsx","components/BasePage.tsx","components/ChatUI.tsx","components/Button.tsx","styles/theme.ts","components/BaseStyles.tsx","pages/Cover.tsx","components/ButtonGroup.tsx","assets/images/circle_didi.png","assets/sounds/messenger.mp3","assets/images/circle_bini.png","pages/WhatIsAI.tsx","pages/HowToDecide.tsx","components/EtcStyles.tsx","assets/images/airfresh.gif","pages/LearnByExperience.tsx","components/bacteriaParts/eyes/Squint.tsx","components/bacteriaParts/eyes/Empty.tsx","components/bacteriaParts/eyes/Bean.tsx","components/bacteriaParts/eyes/Wink.tsx","components/bacteriaParts/eyes/Heart.tsx","components/bacteriaParts/eyes/Cat.tsx","components/bacteriaParts/eyes/Frank.tsx","components/bacteriaParts/eyes/Angry.tsx","components/bacteriaParts/eyes/Smile.tsx","components/bacteriaParts/mouses/Normal.tsx","components/bacteriaParts/mouses/Smile.tsx","components/bacteriaParts/mouses/SquareTeeth.tsx","components/bacteriaParts/mouses/TongueSmile.tsx","components/bacteriaParts/mouses/Blood.tsx","components/bacteriaParts/mouses/Puppy.tsx","components/bacteriaParts/mouses/Saliva.tsx","components/bacteriaParts/mouses/Surprised.tsx","components/bacteriaParts/mouses/ThreeTeeth.tsx","components/bacteriaParts/bodies/Cloud.tsx","components/bacteriaParts/bodies/Diamond.tsx","components/bacteriaParts/bodies/Nail.tsx","components/bacteriaParts/bodies/Round.tsx","components/bacteriaParts/bodies/Square.tsx","components/bacteriaParts/bodies/Star.tsx","components/bacteriaParts/bodies/index.tsx","components/BacteriaCombination.tsx","assets/images/seed.png","assets/images/dandelion.png","assets/images/pine-cone.png","assets/images/sesame.png","assets/images/rope.png","assets/images/candy.png","assets/images/jupiter.png","assets/images/milky-way.png","assets/images/dna.png","components/RenderNoBacteria.tsx","assets/images/micro.png","components/HelpBox.tsx","components/HelpBoxByGage.tsx","pages/AILearning1.tsx","assets/images/machine.png","components/ConveyerBelt.tsx","pages/AIPerformanceCheck1.tsx","pages/WhatIsSupervisedLearning.tsx","components/PlayAgainBox.tsx","pages/AIPerformanceResult1.tsx","pages/AILearning2.tsx","pages/AIPerformanceCheck2.tsx","components/BacteriaChart.tsx","pages/AIPerformanceResult2.tsx","pages/Finish.tsx","components/Container.tsx","components/ContentTitle.tsx","pages/Survey.tsx","App/index.tsx","reportWebVitals.ts","styles/globalStyles.ts","index.tsx"],"names":["Body","Eyes","Mouse","Color","ColorType","generateBacteria","eyes","Math","floor","random","body","mouse","color","modelFirst","learnCount","pattern","bacteria","noBacteriaGroupA","noBacteriaGroupB","noBacteriaGroupC","generateModelFirstLabel","noBacterias","length","generateNoBacteriasLabel","modelSecond","Good","Soso","Bad","GroupRed","GroupYellow","GroupGreen","GroupBlue","Bounce","keyframes","LittleBounce","Opacity","FromRight","scaleUp","Conveyer1","Conveyer2","Conveyer3","Conveyer4","defaultState","page","bacterias","modelsFirst","noBacteria","modelsSecond","noxious","innoxious","AppContext","createContext","state","setState","closeTab","goToHome","goToPrev","goToNext","generateBacterias","learnBacteria","learnNoBacteria","learnNoxiousBacteria","learnInnoxiousBacteria","predictFirst","predictSecond","ImgBtn","styled","button","selected","theme","palette","midGray","css","darken","lighten","Container","div","ButtonTopLeft","ButtonTopRight","Origin","BasePage","children","cover","useContext","isClosableTab","window","opener","ImageButton","onClick","MessageStatus","Blue","LightGray","MidGray","Yellow","Pink","Purple","Green","colorStyles","props","outline","sizes","xxlarge","height","fontSize","xlarge","large","medium","small","paddings","longWidth","padding","sizeStyles","size","paddingStyles","fullWidthStyle","fullWidth","StyledButton","Button","rest","defaultTheme","PointText","span","blue","PointDiv","Title","SubTitle","BounceButton","DivBase","ContentTitle","Content","ExplainBox","Cover","img","Lg","lightGray","Mg","Div","ButtonGroup","isOpenNextPage","callbackNext","lastPage","buttonText","setTimeout","disabled","audio","Audio","messenger","AvatarWrapper","Avatar","ChatMessage","ChatBubbleContainer","isFirstPersonView","status","HIDE","APPREARING","SHOW","switchMessageStatus","messageStatus","ChatBubble","imgSrc","text","src","ChatUIContainer","backgroundImgSrc","ChatUI","users","messages","animation","setOpenNextPage","useState","animationStep","setAnimationStep","useEffect","play","step","meUserId","find","user","userId","userMap","Map","map","message","get","ChatBot","id","StyledContent","Page","Didi","Bini","HowToDecide","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","style","marginTop","options","width","FlexDiv","LearnPageDiv","TrashDiv","TrashBtn","CustomBtn","CustomBtnDiv","RightBtnDiv","Trapezoid","MicroImg","LearnPageBtn","MicroCircle","OXBtnDiv","BatteryDiv","CustomPopover","isOpen","AirFresh","alt","WhiteLeft","WhiteRight","BlackLeft","BlackRight","App","Eye","EyeRight","EyeLeft","Wink","WinkBrowRight","WinkBrowLeft","EyebrowLeft","EyebrowRight","PulseLeft","PulseRight","HeartEye","Heart","RightEye","Pupil","Blink","Eyebrows","Eyebrow1","Eyebrow2","Eye2","Normal","Smile","TeethLeft","TeethRight","TongueSmile","Blooddrop","ToothLeft","ToothRight","Blood","Face","Features","Animation","Teeth","Saliva","Surprised","Cloud","Diamond","Nail","Round","Square","Star","colorMap","bodyMap","Bodies","pickedBody","bodyGroup","BodyComponent","undefined","renderBody","pickedColor","colorGroup","renderColor","eyesMap","WinkEye","SmileEye","SquintEye","EmptyEye","BeanEye","AngryEye","FrankEye","CatEye","renderEyes","pickedEyes","eyesGroup","EyesComponent","mouseMap","PuppyMouse","TongueSmileMouse","SmileMouse","SquareTeethMouse","SurprisedMouse","NormalMouse","BloodMouse","ThreeTeethMouse","SalivaMouse","renderMouse","pickedMouse","mouseGroup","MouseComponent","BodyDiv","EyeDiv","MouseDiv","BacteriaCombination","type","detail","React","memo","somethingRender","NoBacteriaGroupA_0","NoBacteriaGroupA_1","NoBacteriaGroupA_2","NoBacteriaGroupB_0","NoBacteriaGroupB_1","NoBacteriaGroupB_2","NoBacteriaGroupC_0","NoBacteriaGroupC_1","NoBacteriaGroupC_2","SometingDiv","RenderSomething","HelpBox","title","content","HelpBoxByGage","gage","zeroPaddedGage","toString","join","slice","target","useMemo","param","handleChange","learn","handleChangeO","handleChangeX","open","setOpen","Micro","ClickAwayListener","onClickAway","prevState","RenderNoBacteria","margin","GreenIcon","RedIcon","getLabelFirst","result","getLabelSecond","Animated","UVMachine","on","LabelDiv","Img","Belt","Circle","generateSomething","something","feature","ConveyerBelt","Array","from","_","index","key","somethings","setSomethings","setBacterias","useLayoutEffect","timeout","prev","clearTimeout","isFirstUVMachineOn","isSecondUVMachineOn","position","Machine","isStopped","className","Point","WhatIsSupervisedLearning","guestListOptions","GuestList","codeOptions","Code","display","justifyContent","marginLeft","BoldTitle","RestartBtn","PlayAgainBox","goTo","learningPage1Index","learningPage2Index","Grid","Cell","gridCellCount","BacteriasContainer","Data","data","predict","fullData","label","push","generateFullData","datas","alignItems","StackedBarChartContainer","Bar","value","Label","StackedBarChart","filter","Number","isNaN","patternSecondKeys","patternSecondNames","BacteriaChart","scoreNoxious","reduce","current","total","percentNoxious","round","percentInnoxious","part","scoreNoxiousPart","totalPart","percentNoxiousPart","percentInnoxiousPart","modal","setModal","setDatas","handleClick","left","JSON","stringify","Modal","onClose","aria-labelledby","aria-describedby","Finish","dotenv","config","PRIVATE_KEY","process","replace","doc","GoogleSpreadsheet","appendSpreadsheet","row","a","useServiceAccountAuth","client_email","private_key","loadInfo","sheet","sheetsById","now","Date","addRow","date","moment","format","console","error","ageOptions","ratingOptions","icon","defaultValues","age","rating","List","Subtitle","h3","Wrapper","CustomDivBase","Option","AgeOption","active","RatingOption","useStyles","makeStyles","cookieAlert","Survey","classes","option","borderRadius","marginBottom","background","Snackbar","event","reason","Alert","severity","variant","pageComponents","WhatIsAI","LearnByExperience","AILearning1","AIPerformanceCheck1","AIPerformanceResult1","AILearning2","AIPerformanceCheck2","AIPerformanceResult2","navigator","onLine","pages","C","findIndex","pageComponent","maxStage","handleGoToPage","addValue","newStage","handleLearnFirst","model","handleLearnSecond","Provider","close","count","scoreBacteria","scoreNoBacteria","scoreInnoxious","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5b34fb6.chunk.js","sourcesContent":["export enum Body {\n  Good,\n  Soso,\n  Bad,\n}\n\nexport enum Eyes {\n  Good,\n  Soso,\n  Bad,\n}\n\nexport enum Mouse {\n  Good,\n  Soso,\n  Bad,\n}\n\nexport enum Color {\n  GroupRed,\n  GroupYellow,\n  GroupGreen,\n  GroupBlue,\n}\n\nexport type Bacteria = {\n  eyes: Eyes;\n  body: Body;\n  mouse: Mouse;\n  color: Color;\n};\n\nexport type BacteriaPickedPartType = {\n  pickedEyes?: number;\n  pickedBody?: number;\n  pickedMouse?: number;\n  pickedColor?: number;\n};\n\nexport const generateBacteria: () => Bacteria = () => ({\n  eyes: Math.floor(Math.random() * 3),\n  body: Math.floor(Math.random() * 3),\n  mouse: Math.floor(Math.random() * 3),\n  color: Math.floor(Math.random() * 4),\n});\n\nexport const generateBacteriaPickedPart: () => BacteriaPickedPartType = () => ({\n  pickedEyes: Math.floor(Math.random() * 3),\n  pickedBody: Math.floor(Math.random() * 2),\n  pickedMouse: Math.floor(Math.random() * 3),\n  pickedColor: Math.floor(Math.random() * 2),\n});\n\nexport type PatternFirstType = {\n  bacteria: number;\n  noBacteriaGroupA: number;\n  noBacteriaGroupB: number;\n  noBacteriaGroupC: number;\n};\nexport type ModelFirstType = {\n  learnCount: number;\n  pattern: PatternFirstType;\n};\nexport const modelFirst: ModelFirstType = {\n  learnCount: 0,\n  pattern: {\n    bacteria: 0,\n    noBacteriaGroupA: 0,\n    noBacteriaGroupB: 0,\n    noBacteriaGroupC: 0,\n  },\n};\nexport type NoBacteriaType = Omit<keyof PatternFirstType, 'bacteria'>;\nexport const generateNoBacteriasLabel: () => NoBacteriaType = () => {\n  const noBacterias: NoBacteriaType[] = [\n    'noBacteriaGroupA',\n    'noBacteriaGroupB',\n    'noBacteriaGroupC',\n  ];\n  return noBacterias[Math.floor(Math.random() * noBacterias.length)];\n};\nexport const generateModelFirstLabel: () => keyof PatternFirstType = () => {\n  if (Math.random() > 0.5) {\n    return 'bacteria' as keyof PatternFirstType;\n  }\n  return generateNoBacteriasLabel() as keyof PatternFirstType;\n};\n\nexport type PatternSecondType = Record<keyof Bacteria, Record<number, number>>;\nexport type ModelSecondType = {\n  learnCount: number;\n  pattern: PatternSecondType;\n};\nexport const modelSecond: ModelSecondType = {\n  learnCount: 0,\n  pattern: {\n    eyes: {\n      [Eyes.Good]: 0,\n      [Eyes.Soso]: 0,\n      [Eyes.Bad]: 0,\n    },\n    body: {\n      [Body.Good]: 0,\n      [Body.Soso]: 0,\n      [Body.Bad]: 0,\n    },\n    mouse: {\n      [Mouse.Good]: 0,\n      [Mouse.Soso]: 0,\n      [Mouse.Bad]: 0,\n    },\n    color: {\n      [Color.GroupRed]: 0,\n      [Color.GroupYellow]: 0,\n      [Color.GroupGreen]: 0,\n      [Color.GroupBlue]: 0,\n    },\n  },\n};\n","export enum ColorType {\n  Blue = 'blue',\n  LightGray = 'lightGray',\n  MidGray = 'midGray',\n  Yellow = 'yellow',\n  Pink = 'pink',\n  Purple = 'purple',\n  Green = 'green',\n}\n\nexport const palette = {\n  [ColorType.Blue]: '#1696e5',\n  [ColorType.LightGray]: '#f2f2f2',\n  [ColorType.MidGray]: '#d9d9d9',\n  [ColorType.Yellow]: '#F4DE38',\n  [ColorType.Pink]: '#EF4875',\n  [ColorType.Purple]: '#8E94FF',\n  [ColorType.Green]: '#46BF83',\n};\n","import { keyframes } from 'styled-components';\r\n\r\nexport const Bounce = keyframes`\r\nfrom {transform: translateY(0px);}\r\nto{transform: translateY(-15px);}\r\n`;\r\nexport const LittleBounce = keyframes`\r\nfrom {transform: translateY(0px);}\r\nto{transform: translateY(-4px);}\r\n`;\r\n\r\nexport const Opacity = keyframes`\r\n  from {opacity: 0;}\r\n  to {opacity: 1;}\r\n`;\r\n\r\nexport const FromLeft = keyframes`\r\nfrom {transform: translateX(-200%);}\r\nto{transform: translateX(0%);}\r\n`;\r\n\r\nexport const FromRight = keyframes`\r\nfrom {transform: translateX(80%); opacity: 0}\r\nto{transform: translateX(0%); opacity: 1}\r\n`;\r\n\r\nexport const FromTop = keyframes`\r\nfrom {transform: translateY(-200%);}\r\nto{transform: translateY(0%);}\r\n`;\r\n\r\nexport const FromBottom = keyframes`\r\nfrom {transform: translateY(200%);}\r\nto{transform: translateY(0%);}\r\n`;\r\n\r\nexport const scaleUp = keyframes` \r\n  from { -webkit-transform: scale(0.95); }\r\n  `;\r\n\r\nexport const Shake1 = keyframes`\r\n  0% { transform: translate(2px, 2px) rotate(0deg); }\r\n  1.78571% { transform: translate(-2px, -3px) rotate(-1deg); }\r\n  3.57143% { transform: translate(-4px, 0px) rotate(1deg); }\r\n  4.35714% { transform: translate(4px, 3px) rotate(0deg); }\r\n  6.14286% { transform: translate(2px, -2px) rotate(1deg); }\r\n  7.92857% { transform: translate(-1px, 2px) rotate(-1deg); }\r\n  9.71429% { transform: translate(-3px, 1px) rotate(0deg); }\r\n  10.8224% { transform: translate(-2px, -2px) rotate(1deg); }\r\n  11.2354% { transform: translate(0px, 0px) rotate(-2deg); }\r\n  100% { transform: translate(2px, 2px) rotate(0deg); }\r\n`;\r\n\r\nexport const Shake2 = keyframes`\r\n  0% { transform: translate(2px, 2px) rotate(0deg); }\r\n  26.78571% { transform: translate(-2px, -3px) rotate(-1deg); }\r\n  27.57143% { transform: translate(-4px, 0px) rotate(1deg); }\r\n  29.35714% { transform: translate(4px, 3px) rotate(0deg); }\r\n  31.14286% { transform: translate(2px, -2px) rotate(1deg); }\r\n  32.92857% { transform: translate(-1px, 2px) rotate(-1deg); }\r\n  34.71429% { transform: translate(-3px, 1px) rotate(0deg); }\r\n  36.8224% { transform: translate(-2px, -2px) rotate(1deg); }\r\n  38.2354% { transform: translate(0px, 0px) rotate(-2deg); }\r\n  100% { transform: translate(2px, 2px) rotate(0deg); }\r\n`;\r\n\r\nexport const Shake3 = keyframes`\r\n  0% { transform: translate(2px, 2px) rotate(0deg); }\r\n  51.78571% { transform: translate(-2px, -3px) rotate(-1deg); }\r\n  53.57143% { transform: translate(-4px, 0px) rotate(1deg); }\r\n  54.35714% { transform: translate(4px, 3px) rotate(0deg); }\r\n  55.14286% { transform: translate(2px, -2px) rotate(1deg); }\r\n  57.92857% { transform: translate(-1px, 2px) rotate(-1deg); }\r\n  59.71429% { transform: translate(-3px, 1px) rotate(0deg); }\r\n  61.8224% { transform: translate(-2px, -2px) rotate(1deg); }\r\n  62.2354% { transform: translate(0px, 0px) rotate(-2deg); }\r\n  100% { transform: translate(2px, 2px) rotate(0deg); }\r\n`;\r\n\r\nexport const Shake4 = keyframes`\r\n  0% { transform: translate(2px, 2px) rotate(0deg); }\r\n  76.78571% { transform: translate(-2px, -3px) rotate(-1deg); }\r\n  77.57143% { transform: translate(-4px, 0px) rotate(1deg); }\r\n  78.35714% { transform: translate(5px, 3px) rotate(0deg); }\r\n  79.14286% { transform: translate(1px, -2px) rotate(1deg); }\r\n  81.92857% { transform: translate(-2px, 2px) rotate(-1deg); }\r\n  82.71429% { transform: translate(-1px, 1px) rotate(0deg); }\r\n  83.8224% { transform: translate(0px, -2px) rotate(1deg); }\r\n  85.2354% { transform: translate(0px, 0px) rotate(-2deg); }\r\n  100% { transform: translate(2px, 2px) rotate(0deg); }\r\n`;\r\n\r\nexport const SlideItems = keyframes`\r\n    0% { left: 100%; opacity: 1; }\r\n   36% { left:  50%; opacity: 1; }\r\n   72% { left: -50%; opacity: 1; }\r\n  100% { left: -50%; }\r\n`;\r\n\r\nexport const Conveyer1 = keyframes`\r\n0% {transform: translateX(-100%);}\r\n50%{transform: translateX(0);}\r\n`;\r\nexport const Conveyer2 = keyframes`\r\n0% {transform: translateX(-100%);}\r\n50%{transform: translateX(0.1%);}\r\n`;\r\nexport const Conveyer3 = keyframes`\r\n0% {transform: translateX(-100%);}\r\n50%{transform: translateX(0.2%);}\r\n`;\r\nexport const Conveyer4 = keyframes`\r\n0% {transform: translateX(-100%);}\r\n50%{transform: translateX(-0.1%);}\r\n`;\r\n\r\nexport const Gradient = keyframes`\r\n0%{background-position:0% 50%}\r\n50%{background-position:100% 50%}\r\n100%{background-position:0% 50%}\r\n`;\r\n","import React, { createContext } from 'react';\r\nimport {\r\n  Bacteria,\r\n  modelFirst,\r\n  ModelFirstType,\r\n  modelSecond,\r\n  ModelSecondType,\r\n  PatternFirstType,\r\n} from './datas';\r\n\r\nexport type ModelsFirstType = {\r\n  bacteria: ModelFirstType; // 세균\r\n  noBacteria: ModelFirstType; // 세균아님\r\n};\r\n\r\nexport type ModelsSecondType = {\r\n  noxious: ModelSecondType; // 유해균\r\n  innoxious: ModelSecondType; // 무해균\r\n};\r\n\r\nexport type StateType = {\r\n  page: number;\r\n  bacterias: Bacteria[];\r\n  modelsFirst: ModelsFirstType;\r\n  modelsSecond: ModelsSecondType;\r\n};\r\n\r\nexport type AppContextProps = {\r\n  state: StateType;\r\n  setState: React.Dispatch<React.SetStateAction<StateType>>;\r\n  goToHome: () => void;\r\n  goToPrev: () => void;\r\n  goToNext: () => void;\r\n  closeTab: () => void;\r\n  generateBacterias: (count: number) => void;\r\n  learnBacteria: (param: keyof PatternFirstType) => void;\r\n  learnNoBacteria: (param: keyof PatternFirstType) => void;\r\n  learnNoxiousBacteria: (bacteria: Bacteria) => void;\r\n  learnInnoxiousBacteria: (bacteria: Bacteria) => void;\r\n  predictFirst: (param: keyof PatternFirstType) => keyof ModelsFirstType | null;\r\n  predictSecond: (bacteria: Bacteria) => keyof ModelsSecondType | null;\r\n};\r\n\r\nexport const minPage = 0;\r\nexport const defaultState: StateType = {\r\n  page: minPage,\r\n  bacterias: [],\r\n  modelsFirst: {\r\n    bacteria: { ...modelFirst },\r\n    noBacteria: { ...modelFirst },\r\n  },\r\n  modelsSecond: {\r\n    noxious: { ...modelSecond },\r\n    innoxious: { ...modelSecond },\r\n  },\r\n};\r\n\r\nconst AppContext = createContext<AppContextProps>({\r\n  state: defaultState,\r\n  setState: () => {},\r\n  closeTab: () => {},\r\n  goToHome: () => {},\r\n  goToPrev: () => {},\r\n  goToNext: () => {},\r\n  generateBacterias: () => {},\r\n  learnBacteria: () => {},\r\n  learnNoBacteria: () => {},\r\n  learnNoxiousBacteria: () => {},\r\n  learnInnoxiousBacteria: () => {},\r\n  predictFirst: () => null,\r\n  predictSecond: () => null,\r\n});\r\n\r\nexport default AppContext;\r\n","import { lighten, darken } from 'polished';\nimport styled, { css } from 'styled-components';\nimport { Theme } from '../styles/theme';\n\nconst ImgBtn = styled.button`\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  background-color: transparent;\n  font-size: 2.25rem;\n\n  ${({ theme }) => {\n    const selected = (theme as Theme).palette.midGray;\n    return css`\n      color: ${selected};\n      &:hover {\n        color: ${darken(0.1, selected)};\n      }\n      &:active {\n        color: ${lighten(0.1, selected)};\n      }\n      &:disabled {\n        color: ${lighten(0.4, selected)};\n        cursor: not-allowed;\n      }\n    `;\n  }}\n`;\n\nexport default ImgBtn;\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FaHome as Home, FaArrowLeft as Back } from 'react-icons/fa';\r\nimport { MdReplay } from 'react-icons/md';\r\nimport { FromRight } from '../styles/animations';\r\nimport AppContext from '../App/context';\r\nimport ImageButton from './ImageButton';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  animation: ${FromRight} 0.4s ease-out both;\r\n  position: relative;\r\n`;\r\n\r\nconst ButtonTopLeft = styled.div`\r\n  position: absolute;\r\n  top: 1.5rem;\r\n  left: 1.5rem;\r\n`;\r\n\r\nconst ButtonTopRight = styled.div`\r\n  position: absolute;\r\n  top: 1.5rem;\r\n  right: 1.5rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  button + button {\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst Origin = styled.div`\r\n  position: absolute;\r\n  right: 1rem;\r\n  bottom: 1rem;\r\n  font-size: 0.6rem;\r\n`;\r\ntype BasePageProps = {\r\n  cover?: boolean;\r\n};\r\n\r\nconst BasePage: React.FC<BasePageProps> = ({ children, cover }) => {\r\n  const { goToHome, goToPrev, closeTab } = useContext(AppContext);\r\n  const isClosableTab = window.opener !== null;\r\n  return (\r\n    <Container>\r\n      {children}\r\n      {!cover && (\r\n        <ButtonTopLeft>\r\n          <ImageButton onClick={goToPrev}>\r\n            <Back />\r\n          </ImageButton>\r\n        </ButtonTopLeft>\r\n      )}\r\n      <ButtonTopRight>\r\n        {!cover && (\r\n          <ImageButton onClick={goToHome}>\r\n            <MdReplay />\r\n          </ImageButton>\r\n        )}\r\n        {isClosableTab && (\r\n          <ImageButton onClick={closeTab}>\r\n            <Home />\r\n          </ImageButton>\r\n        )}\r\n      </ButtonTopRight>\r\n      <Origin>© 2021. 05. DataDriven. All rights reserved.</Origin>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BasePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport ChatBot from 'assets/images/circle_didi.png';\r\nimport { Opacity } from 'styles/animations';\r\nimport messenger from 'assets/sounds/messenger.mp3';\r\n\r\nconst audio = new Audio(messenger);\r\n\r\nenum MessageStatus {\r\n  HIDE,\r\n  APPREARING,\r\n  SHOW,\r\n}\r\n\r\ntype ChatBubbleContainerProps = {\r\n  isFirstPersonView?: boolean;\r\n  messageStatus: MessageStatus;\r\n};\r\n\r\nconst AvatarWrapper = styled.span`\r\n  min-width: 4rem;\r\n  min-height: 4rem;\r\n  max-width: 4rem;\r\n  max-height: 4rem;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ChatMessage = styled.div`\r\n  padding: 1em;\r\n  font-size: 1.1rem;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  max-width: 85%;\r\n  text-align: left;\r\n  height: 100%;\r\n  line-height: 1.6rem;\r\n`;\r\n\r\nconst switchMessageStatus = (status: MessageStatus) => {\r\n  switch (status) {\r\n    case MessageStatus.HIDE:\r\n      return css`\r\n        visibility: hidden;\r\n      `;\r\n\r\n    case MessageStatus.APPREARING:\r\n      return css`\r\n        animation: ${Opacity} 1s ease-out both;\r\n      `;\r\n\r\n    case MessageStatus.SHOW:\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return css``;\r\n};\r\n\r\nconst ChatBubbleContainer = styled.div<ChatBubbleContainerProps>`\r\n  padding: 1rem;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 80%;\r\n\r\n  ${({ isFirstPersonView }) => css`\r\n    align-self: ${isFirstPersonView ? 'flex-end' : 'flex-start'};\r\n    flex-direction: ${isFirstPersonView ? 'row-reverse' : 'row'};\r\n  `}\r\n\r\n  ${({ messageStatus }) => switchMessageStatus(messageStatus)}\r\n\r\n  & + & {\r\n    margin-top: 0.25rem;\r\n  }\r\n`;\r\n\r\ntype ChatBubbleProps = {\r\n  imgSrc: string;\r\n  text: string;\r\n} & ChatBubbleContainerProps;\r\n\r\nconst ChatBubble: React.FC<ChatBubbleProps> = ({\r\n  imgSrc,\r\n  text,\r\n  isFirstPersonView,\r\n  messageStatus,\r\n}) => {\r\n  return (\r\n    <ChatBubbleContainer\r\n      isFirstPersonView={isFirstPersonView}\r\n      messageStatus={messageStatus}\r\n    >\r\n      <AvatarWrapper>\r\n        <Avatar src={imgSrc} />\r\n      </AvatarWrapper>\r\n      <ChatMessage>{text}</ChatMessage>\r\n    </ChatBubbleContainer>\r\n  );\r\n};\r\n\r\ntype ChatUIContainerProps = {\r\n  backgroundImgSrc?: string;\r\n};\r\n\r\nconst ChatUIContainer = styled.div<ChatUIContainerProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 1rem;\r\n\r\n  ${(props) =>\r\n    props.backgroundImgSrc &&\r\n    css`\r\n      background-image: url(${props.backgroundImgSrc});\r\n    `};\r\n`;\r\n\r\ntype UserType = {\r\n  userId: number;\r\n  isFirstPersonView?: boolean;\r\n  imgSrc?: string;\r\n};\r\n\r\ntype MessageType = {\r\n  id: number;\r\n  userId: number;\r\n  text: string;\r\n};\r\n\r\ntype ChatUIProps = {\r\n  users: UserType[];\r\n  messages: MessageType[];\r\n  animation?: boolean;\r\n  setOpenNextPage?: React.Dispatch<React.SetStateAction<boolean>>;\r\n} & ChatUIContainerProps;\r\n\r\nconst ChatUI: React.FC<ChatUIProps> = ({\r\n  users,\r\n  messages,\r\n  backgroundImgSrc,\r\n  animation,\r\n  setOpenNextPage,\r\n}) => {\r\n  const [animationStep, setAnimationStep] = useState(0);\r\n  useEffect(() => {\r\n    if (animation) {\r\n      if (animationStep < messages.length - 1) {\r\n        if (animationStep === 0) {\r\n          audio.play();\r\n        }\r\n        setTimeout(() => {\r\n          setAnimationStep((step) => step + 1);\r\n        }, 1500);\r\n      } else if (setOpenNextPage && animationStep === messages.length - 1) {\r\n        setOpenNextPage(true);\r\n      }\r\n    }\r\n  }, [animation, animationStep, messages, setOpenNextPage]);\r\n  const meUserId =\r\n    users.find((user) => user.isFirstPersonView)?.userId || users[0].userId;\r\n  const userMap = new Map(users.map((user) => [user.userId, user]));\r\n  return (\r\n    <ChatUIContainer backgroundImgSrc={backgroundImgSrc}>\r\n      {messages.map((message) => {\r\n        const user = userMap.get(message.userId);\r\n        const src = user?.imgSrc || ChatBot;\r\n        const isFirstPersonView = user?.userId === meUserId;\r\n        let status = MessageStatus.SHOW;\r\n        if (animation) {\r\n          if (message.id === animationStep) {\r\n            status = MessageStatus.APPREARING;\r\n          } else if (message.id > animationStep) {\r\n            status = MessageStatus.HIDE;\r\n          }\r\n        }\r\n        return (\r\n          <ChatBubble\r\n            key={message.id}\r\n            imgSrc={src}\r\n            text={message.text}\r\n            isFirstPersonView={isFirstPersonView}\r\n            messageStatus={status}\r\n          />\r\n        );\r\n      })}\r\n    </ChatUIContainer>\r\n  );\r\n};\r\n\r\nexport default ChatUI;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { darken, lighten } from 'polished';\r\nimport { Theme } from '../styles/theme';\r\nimport { ColorType } from '../styles/colors';\r\n\r\ntype SizeType = 'xxlarge' | 'xlarge' | 'large' | 'medium' | 'small';\r\ntype PaddingType = 'longWidth' | 'large' | 'medium';\r\ntype StyledButtonProps = {\r\n  theme: Theme;\r\n  color: ColorType;\r\n  size: SizeType;\r\n  padding: PaddingType;\r\n  fullWidth: boolean;\r\n  outline: boolean;\r\n};\r\n\r\nconst colorStyles = css`\r\n  ${({ theme, color }: StyledButtonProps) => {\r\n    const selected = theme.palette[color];\r\n    return css`\r\n      background: ${selected};\r\n      &:hover {\r\n        background: ${lighten(0.1, selected)};\r\n      }\r\n      &:active {\r\n        background: ${darken(0.1, selected)};\r\n      }\r\n      &:disabled {\r\n        background: ${lighten(0.4, selected)};\r\n        cursor: not-allowed;\r\n      }\r\n      ${(props: StyledButtonProps) =>\r\n        props.outline &&\r\n        css`\r\n          color: ${selected};\r\n          background: none;\r\n          border: 1px solid ${selected};\r\n          &:hover {\r\n            background: ${selected};\r\n            color: white;\r\n          }\r\n          &:active {\r\n            background: ${darken(0.1, selected)};\r\n          }\r\n        `}\r\n    `;\r\n  }}\r\n`;\r\n\r\nconst sizes = {\r\n  xxlarge: {\r\n    height: '3.75rem',\r\n    fontSize: '3rem',\r\n  },\r\n  xlarge: {\r\n    height: '3.5rem',\r\n    fontSize: '2rem',\r\n  },\r\n  large: {\r\n    height: '3rem',\r\n    fontSize: '1.25rem',\r\n  },\r\n  medium: {\r\n    height: '2.25rem',\r\n    fontSize: '1rem',\r\n  },\r\n  small: {\r\n    height: '1.75rem',\r\n    fontSize: '0.875rem',\r\n  },\r\n};\r\nconst paddings = {\r\n  longWidth: {\r\n    padding: '1.5rem 4rem',\r\n  },\r\n  medium: {\r\n    padding: '1rem',\r\n  },\r\n  large: {\r\n    padding: '3rem 4rem',\r\n  },\r\n};\r\n\r\nconst sizeStyles = css`\r\n  ${({ size }: StyledButtonProps) =>\r\n    css`\r\n      height: ${sizes[size].height};\r\n      font-size: ${sizes[size].fontSize};\r\n    `}\r\n`;\r\n\r\nconst paddingStyles = css`\r\n  ${({ padding }: StyledButtonProps) =>\r\n    css`\r\n      padding: ${paddings[padding].padding};\r\n    `}\r\n`;\r\n\r\nconst fullWidthStyle = css`\r\n  ${(props: StyledButtonProps) =>\r\n    props.fullWidth &&\r\n    css`\r\n      width: 100%;\r\n      justify-content: center;\r\n      &:not(:first-child) {\r\n        margin-left: 0;\r\n        margin-top: 1rem;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  /* common style */\r\n  display: inline-flex;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  font-family: 'Yspot';\r\n  /* etc */\r\n  &:not(:first-child) {\r\n    margin-left: 1rem;\r\n  }\r\n\r\n  /* size */\r\n  ${sizeStyles}\r\n\r\n  /* color */\r\n  ${colorStyles}\r\n\r\n  /* width */\r\n  ${fullWidthStyle}\r\n\r\n  /* padding */\r\n  ${paddingStyles}\r\n`;\r\n\r\ntype ButtonProps = {\r\n  color?: ColorType;\r\n  size?: SizeType;\r\n  outline?: boolean;\r\n  padding?: PaddingType;\r\n  fullWidth?: boolean;\r\n  disabled?: boolean;\r\n  onClick?: () => void;\r\n};\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  children,\r\n  color = ColorType.Blue,\r\n  size = 'medium',\r\n  padding = 'medium',\r\n  outline = false,\r\n  fullWidth = false,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <StyledButton\r\n      color={color}\r\n      size={size}\r\n      padding={padding}\r\n      outline={outline}\r\n      fullWidth={fullWidth}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { DefaultTheme } from 'styled-components';\r\nimport { palette } from './colors';\r\n\r\nexport interface Theme extends DefaultTheme {\r\n  palette: Record<string, string>;\r\n}\r\n\r\nconst defaultTheme: Theme = { palette };\r\n\r\nexport default defaultTheme;\r\n","import styled, { css } from 'styled-components';\r\nimport Button from 'components/Button';\r\nimport { Bounce } from 'styles/animations';\r\nimport defaultTheme, { Theme } from 'styles/theme';\r\n\r\nexport const PointText = styled.span`\r\n  color: ${defaultTheme.palette.blue};\r\n`;\r\nexport const PointDiv = styled.div`\r\n  color: ${defaultTheme.palette.blue};\r\n`;\r\nexport const Container = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-size: cover;\r\n`;\r\nexport const Title = styled.div`\r\n  font-size: 5rem;\r\n  color: ${defaultTheme.palette.blue};\r\n  font-family: 'Yj', sans-serif;\r\n`;\r\nexport const SubTitle = styled.div`\r\n  font-size: 1.2rem;\r\n  font-family: 'Yspot', sans-serif;\r\n  font-size: 2.2rem;\r\n  text-align: center;\r\n  margin: 1rem 0 5rem 0;\r\n`;\r\nexport const BounceButton = styled(Button)`\r\n  animation: ${Bounce} 0.7s infinite alternate;\r\n`;\r\n\r\nexport const DivBase = styled.div`\r\n  width: 80%;\r\n  height: 80%;\r\n  margin-top: 3rem;\r\n  margin-bottom: 8.5rem;\r\n`;\r\nexport const ContentTitle = styled.div`\r\n  height: 3rem;\r\n  font-family: 'Yspot';\r\n  font-size: 2.4rem;\r\n  text-align: center;\r\n`;\r\nexport const Content = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 10rem);\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n`;\r\nexport const ExplainBox = styled.div`\r\n  font-size: 1.4rem;\r\n  overflow: auto;\r\n  min-width: 80%;\r\n  max-width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 1.4rem 1.2rem;\r\n  animation-duration: 2.5s;\r\n  text-align: center;\r\n  white-space: pre-wrap;\r\n`;\r\nexport const Img = styled.img`\r\n  height: 90%;\r\n`;\r\nexport const FlexDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ConversationBox = styled.div`\r\n  ${({ theme }) => {\r\n    const Lg = (theme as Theme).palette.lightGray;\r\n    const Mg = (theme as Theme).palette.midGray;\r\n    return css`\r\n      background-color: ${Lg};\r\n      box-shadow: 5px 5px 7px ${Mg};\r\n    `;\r\n  }}\r\n  border-radius: 1.5rem;\r\n  overflow: auto;\r\n  max-width: 45%;\r\n  max-height: 100%;\r\n  animation-duration: 2.5s;\r\n  margin-left: 3rem;\r\n`;\r\n","import BasePage from 'components/BasePage';\r\nimport React, { useContext } from 'react';\r\nimport AppContext from '../App/context';\r\nimport {\r\n  Container,\r\n  Title,\r\n  SubTitle,\r\n  BounceButton,\r\n} from '../components/BaseStyles';\r\n\r\nconst Cover: React.FC = () => {\r\n  const { goToNext } = useContext(AppContext);\r\n  return (\r\n    <BasePage cover>\r\n      <Container>\r\n        <Title>AI로봇 만들기</Title>\r\n        <SubTitle>AI가 만들어지는 과정인 기계학습 이해하기</SubTitle>\r\n        <BounceButton size=\"xxlarge\" padding=\"large\" onClick={goToNext}>\r\n          시작하기\r\n        </BounceButton>\r\n      </Container>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Cover;\r\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport AppContext from '../App/context';\nimport Button from './Button';\n\nconst Div = styled.div`\n  display: flex;\n  justify-content: center;\n  position: absolute;\n  bottom: 0;\n  padding: 1.5rem 0;\n  width: 100%;\n`;\n\ntype ButtonGroupProps = {\n  isOpenNextPage?: boolean;\n  lastPage?: boolean;\n  buttonText?: string;\n  callbackNext?: () => void;\n};\n\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({\n  isOpenNextPage = true,\n  callbackNext,\n  lastPage,\n  buttonText = '다음',\n}) => {\n  const { goToHome, goToNext } = useContext(AppContext);\n  return (\n    <Div>\n      {lastPage ? (\n        <Button\n          size=\"xlarge\"\n          onClick={() => {\n            if (callbackNext) {\n              callbackNext();\n            }\n            setTimeout(goToHome, 3000);\n          }}\n          disabled={!isOpenNextPage}\n        >\n          설문 제출 후 처음으로\n        </Button>\n      ) : (\n        <Button\n          size=\"xlarge\"\n          padding=\"longWidth\"\n          onClick={() => {\n            if (callbackNext) {\n              callbackNext();\n            }\n            goToNext();\n          }}\n          disabled={!isOpenNextPage}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </Div>\n  );\n};\n\nexport default ButtonGroup;\n","export default __webpack_public_path__ + \"static/media/circle_didi.3f527c73.png\";","export default __webpack_public_path__ + \"static/media/messenger.6eca1857.mp3\";","export default __webpack_public_path__ + \"static/media/circle_bini.ece9431e.png\";","import React, { useState } from 'react';\nimport BasePage from 'components/BasePage';\nimport {\n  Container,\n  DivBase,\n  ContentTitle,\n  Content,\n} from 'components/BaseStyles';\nimport ButtonGroup from 'components/ButtonGroup';\nimport ChatUI from 'components/ChatUI';\nimport Didi from 'assets/images/circle_didi.png';\nimport Bini from 'assets/images/circle_bini.png';\nimport styled from 'styled-components';\n\nconst StyledContent = styled(Content)`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  margin-top: 2em;\n`;\n\nconst ChatUIContainer = styled.div`\n  background: #73b5d8;\n  border-radius: 1rem;\n  width: 35vw;\n`;\n\nconst Page: React.FC = () => {\n  const [isOpenNextPage, setOpenNextPage] = useState(false);\n  return (\n    <BasePage>\n      <Container>\n        <DivBase>\n          <ContentTitle>인공지능, AI 가 무엇이며, 어떻게 쓰이지?</ContentTitle>\n          <StyledContent>\n            <ChatUIContainer>\n              <ChatUI\n                users={[\n                  {\n                    userId: 0,\n                    imgSrc: Didi,\n                  },\n                  {\n                    userId: 1,\n                    imgSrc: Bini,\n                  },\n                ]}\n                messages={[\n                  {\n                    id: 0,\n                    userId: 0,\n                    text:\n                      '인공지능, AI 라는 말은 자주 듣는데... 인공지능이 뭔지 모르겠어.',\n                  },\n                  {\n                    id: 1,\n                    userId: 1,\n                    text:\n                      '인공지능은 말의 의미, 인식, 표정 인지 등 인간만이 할 수 있다고 생각했던 기능을 컴퓨터가 수행하는 것을 의미해.',\n                  },\n                  {\n                    id: 2,\n                    userId: 0,\n                    text: '인공지능은 사람의 행동을 대신 하는거야?',\n                  },\n                  {\n                    id: 3,\n                    userId: 1,\n                    text:\n                      '맞아. 사람대신 자동차를 운전하고 관심가질만한 영상, 기사, SNS를 보여주는 등 매일 우리의 삶에서 활용되고 있어!',\n                  },\n                ]}\n                animation\n                setOpenNextPage={setOpenNextPage}\n              />\n            </ChatUIContainer>\n          </StyledContent>\n        </DivBase>\n        <ButtonGroup isOpenNextPage={isOpenNextPage} />\n      </Container>\n    </BasePage>\n  );\n};\n\nexport default Page;\n","import React, { useState } from 'react';\nimport Lottie from 'react-lottie';\nimport BasePage from 'components/BasePage';\nimport {\n  Container,\n  DivBase,\n  ContentTitle,\n  Content,\n  ExplainBox,\n  PointDiv,\n} from 'components/BaseStyles';\nimport ButtonGroup from 'components/ButtonGroup';\nimport ChatUI from 'components/ChatUI';\nimport animationData from 'assets/lotties/55461-girl-tapping-phone.json';\nimport Didi from 'assets/images/circle_didi.png';\nimport Bini from 'assets/images/circle_bini.png';\nimport styled from 'styled-components';\n\nconst StyledContent = styled(Content)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChatUIContainer = styled.div`\n  background: #73b5d8;\n  border-radius: 1rem;\n  width: 35vw;\n`;\n\nconst HowToDecide: React.FC = () => {\n  const [isOpenNextPage, setOpenNextPage] = useState(false);\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n  return (\n    <BasePage>\n      <Container>\n        <DivBase>\n          <ContentTitle>AI는 어떻게 스스로 결정하지?</ContentTitle>\n          <ExplainBox>\n            <div>검색결과나 SNS 콘텐츠도 모두 인공지능이 적용되어 있어.</div>\n            <PointDiv>인공지능은 어떻게 우리 대신 행동하는 걸까?</PointDiv>\n          </ExplainBox>\n          <StyledContent>\n            <ChatUIContainer style={{ marginTop: '1rem' }}>\n              <ChatUI\n                users={[\n                  {\n                    userId: 0,\n                    imgSrc: Didi,\n                  },\n                  {\n                    userId: 1,\n                    imgSrc: Bini,\n                  },\n                ]}\n                messages={[\n                  {\n                    id: 0,\n                    userId: 0,\n                    text:\n                      '네이버에서 검색해보거나 유튜브, 인스타그램, 틱톡 등 서비스를 이용해본 적 있지?',\n                  },\n                  {\n                    id: 1,\n                    userId: 1,\n                    text:\n                      '응. 이용하고 있지~ 근데 친구랑 나랑 콘텐츠 추천 결과가 다르더라구.',\n                  },\n                  {\n                    id: 2,\n                    userId: 0,\n                    text:\n                      '그건 인공지능이 적용되어서 그래. 우리가 무엇을 볼지 인공지능이 결정하지.',\n                  },\n                  {\n                    id: 3,\n                    userId: 1,\n                    text: '어떻게 그런 결정을 내리는거야?',\n                  },\n                ]}\n                animation\n                setOpenNextPage={setOpenNextPage}\n              />\n            </ChatUIContainer>\n            <Lottie options={defaultOptions} height={400} width={400} />\n          </StyledContent>\n        </DivBase>\n        <ButtonGroup isOpenNextPage={isOpenNextPage} />\n      </Container>\n    </BasePage>\n  );\n};\n\nexport default HowToDecide;\n","import styled, { css } from 'styled-components';\r\nimport { Content } from 'components/BaseStyles';\r\n\r\nexport const FlexDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nexport const LearnPageDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const TrashDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const TrashBtn = styled.button`\r\n  background: none;\r\n  padding: 0;\r\n  border: 0;\r\n  outline: 0;\r\n  cursor: pointer;\r\n  margin-bottom: 0.2rem;\r\n  width: 1.4rem;\r\n  height: 1.4rem;\r\n  svg {\r\n    fill: #bcbcbc;\r\n    width: 100%;\r\n    height: 100%;\r\n    :hover {\r\n      fill: #ececec;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CustomBtn = styled.button`\r\n  padding: 0 3rem;\r\n  height: 3.5rem;\r\n  color: #fff;\r\n  background-color: #1696e5;\r\n  outline: 0;\r\n  border: 0;\r\n  font-size: 2rem;\r\n  font-family: 'Yspot', sans-serif;\r\n  border-radius: 0.5rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CustomBtnDiv = styled.div`\r\n  position: absolute;\r\n  bottom: 2rem;\r\n`;\r\n\r\nexport const RightBtnDiv = styled(CustomBtnDiv)`\r\n  bottom: 0rem;\r\n  right: 5rem;\r\n`;\r\nexport const RightBtn = styled(CustomBtn)`\r\n  padding: 0.5rem 1.9rem;\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nexport const Trapezoid = styled.div`\r\n  position: absolute;\r\n  right: 12rem;\r\n  bottom: 8.5rem;\r\n  width: 0;\r\n  height: 0;\r\n  border-top: 7rem solid transparent;\r\n  border-left: 20rem solid #ececec;\r\n  border-bottom: 7rem solid transparent;\r\n  transform: rotate(15deg);\r\n`;\r\n\r\nexport const CustomContent = styled(Content)`\r\n  margin-top: 3rem;\r\n  display: flex;\r\n`;\r\n\r\nexport const RangeDiv = styled.div`\r\n  width: 50%;\r\n  border-radius: 2rem;\r\n  margin: 0 1rem;\r\n  :first-child {\r\n    border: 0.8rem solid #22a415;\r\n  }\r\n  :last-child {\r\n    border: 0.8rem solid #bf2d2d;\r\n  }\r\n`;\r\nexport const Title = styled.div`\r\n  background-color: #22a415;\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n  padding: 1rem;\r\n  width: 8rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0.8rem 0 0 0.8rem;\r\n  border-radius: 1rem;\r\n`;\r\nexport const Title2 = styled(Title)`\r\n  background-color: #bf2d2d;\r\n`;\r\n\r\nexport const MicroImg = styled.img`\r\n  width: 17rem;\r\n  position: absolute;\r\n  bottom: 5rem;\r\n  right: 1rem;\r\n`;\r\n\r\nexport const LearnPageBtn = styled.button`\r\n  background-color: ${(props) => props.color};\r\n  height: 2.5rem;\r\n  padding: 0.5rem 1.9rem;\r\n  color: #fff;\r\n  font-family: 'Yspot';\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  outline: 0;\r\n  border: 0;\r\n  font-size: 1.2rem;\r\n  &:disabled {\r\n    background: rgba(22, 150, 229, 0.4);\r\n    cursor: not-allowed;\r\n  }\r\n  margin: 0 1rem;\r\n`;\r\n\r\nexport const MicroCircle = styled.div`\r\n  border-radius: 50%;\r\n  border: 1px solid #bcbcbc;\r\n  width: 30rem;\r\n  height: 30rem;\r\n  background-color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 1rem;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const OXBtnDiv = styled.div`\r\n  margin-top: -2rem;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const BatteryDiv = styled.div`\r\n  position: absolute;\r\n  top: 2rem;\r\n  font-size: 1.5rem;\r\n  font-weight: 800;\r\n`;\r\n\r\nexport const CustomPopover = styled.div<{ isOpen: boolean }>`\r\n  font-size: 0.8rem;\r\n  white-space: nowrap;\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  left: 5rem;\r\n  font-family: 'Score', sans-serif;\r\n  font-weight: 200;\r\n  letter-spacing: -0.2pt;\r\n  padding: 0.5rem;\r\n  background-color: #777777;\r\n  color: #fff;\r\n  border-radius: 0.5rem;\r\n\r\n  ${({ isOpen }) =>\r\n    !isOpen &&\r\n    css`\r\n      display: none;\r\n    `}\r\n\r\n  ::after {\r\n    border-top: 1.2rem solid #777777;\r\n    border-left: 1.5rem solid transparent;\r\n    border-right: 0px solid transparent;\r\n    border-bottom: 0px solid transparent;\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: -1rem;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/airfresh.cbff3c6b.gif\";","import React, { useContext } from 'react';\r\nimport AppContext from 'App/context';\r\nimport styled from 'styled-components';\r\nimport BasePage from 'components/BasePage';\r\nimport {\r\n  Container,\r\n  DivBase,\r\n  ContentTitle,\r\n  Content,\r\n  ExplainBox,\r\n  PointText,\r\n} from 'components/BaseStyles';\r\nimport { CustomBtn, CustomBtnDiv } from 'components/EtcStyles';\r\nimport AirFresh from 'assets/images/airfresh.gif';\r\n\r\nconst Div = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n`;\r\n\r\nconst Page: React.FC = () => {\r\n  const { goToNext } = useContext(AppContext);\r\n  return (\r\n    <BasePage>\r\n      <Container>\r\n        <DivBase>\r\n          <ContentTitle>체험으로 배우는 AI 학습</ContentTitle>\r\n          <ExplainBox>\r\n            <div>인공지능(AI)은 사람처럼 학습을 통해 만들어져. </div>\r\n            <div>\r\n              가상의 <PointText>세균 탐지 AI를 만드는 체험</PointText>을 해보며,\r\n              AI를 알아보자!\r\n            </div>\r\n          </ExplainBox>\r\n          <Content>\r\n            <Div>\r\n              <img src={AirFresh} alt=\"\" />\r\n            </Div>\r\n          </Content>\r\n        </DivBase>\r\n        <CustomBtnDiv>\r\n          <CustomBtn\r\n            onClick={() => {\r\n              goToNext();\r\n            }}\r\n          >\r\n            체험시작\r\n          </CustomBtn>\r\n        </CustomBtnDiv>\r\n      </Container>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst WhiteLeft = styled.div`\r\n  position: absolute;\r\n  top: 2.25em;\r\n  left: 6.3em;\r\n  background: #fff;\r\n  width: 10%;\r\n  height: 45%;\r\n  border-radius: 100%;\r\n`;\r\nconst WhiteRight = styled(WhiteLeft)`\r\n  transform: translateX(3.5em);\r\n`;\r\n\r\nconst BlackLeft = styled.div`\r\n  position: absolute;\r\n  top: 0.45em;\r\n  left: 0.63em;\r\n  background: #000;\r\n  width: 1.08em;\r\n  height: 1.26em;\r\n  border-radius: 100%;\r\n`;\r\nconst BlackRight = styled(BlackLeft)`\r\n  transform: translateX(-0.56em);\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <WhiteLeft>\r\n        <BlackLeft />\r\n      </WhiteLeft>\r\n      <WhiteRight>\r\n        <BlackRight />\r\n      </WhiteRight>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Eye = styled.div`\r\n  position: absolute;\r\n  top: 2.7em;\r\n  left: 5.85em;\r\n  width: 1.62em;\r\n  height: 1.62em;\r\n  background: #fff;\r\n  border-radius: 100%;\r\n  border: 0.2em solid #333;\r\n\r\n  &::before {\r\n    position: absolute;\r\n    content: '';\r\n    top: -0.18em;\r\n    left: 4.5em;\r\n    width: 1.26em;\r\n    height: 1.26em;\r\n    background: #fff;\r\n    border-radius: 100%;\r\n    border: 0.2em solid #333;\r\n  }\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return <Eye />;\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst EyeRight = styled.div`\r\n  position: absolute;\r\n  top: 3.15em;\r\n  left: 7em;\r\n  width: 0.63em;\r\n  height: 0.63em;\r\n  background: #000;\r\n  border-radius: 100%;\r\n`;\r\n\r\nconst EyeLeft = styled(EyeRight)`\r\n  left: 10em;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <EyeRight />\r\n      <EyeLeft />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Wink = keyframes`\r\n\t15% {\r\n  width: 1.35em;\r\n  height: 0.18em;\r\n  transform: rotate(2deg);\r\n\t}\r\n`;\r\nconst WinkBrowRight = keyframes`\r\n  15% {\r\n  -webkit-transform: rotate(-10deg);\r\n  transform: rotate(-10deg);\r\n  }\r\n`;\r\nconst WinkBrowLeft = keyframes`\r\n  15% {\r\n    top: 2.7em;\r\n  }\r\n`;\r\nconst EyebrowLeft = styled.div`\r\n  position: absolute;\r\n  top: 2.88em;\r\n  width: 10%;\r\n  height: 0.45em;\r\n  border-radius: 0.9em;\r\n  background: #000;\r\n  transition: all 0.2s;\r\n  left: 5.4em;\r\n  animation: ${WinkBrowLeft} 1.2s infinite;\r\n`;\r\nconst EyebrowRight = styled(EyebrowLeft)`\r\n  left: 10.62em;\r\n  animation: ${WinkBrowRight} 1.2s infinite;\r\n`;\r\nconst EyeLeft = styled.div`\r\n  position: absolute;\r\n  top: 3.78em;\r\n  left: 5.85em;\r\n  border-radius: 100%;\r\n  height: 1.08em;\r\n  width: 1.08em;\r\n  background-color: #111;\r\n`;\r\nconst EyeRight = styled(EyeLeft)`\r\n  left: 10.8em;\r\n  animation: ${Wink} 1.2s infinite;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <EyebrowLeft />\r\n      <EyeLeft />\r\n      <EyebrowRight />\r\n      <EyeRight />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst PulseLeft = keyframes`\r\n  30% {\r\n    transform: scale(1.5, 1.5) rotate(-15deg);\r\n  }\r\n  70% {\r\n    transform: scale(1, 1) rotate(-15deg);\r\n  }\r\n`;\r\nconst PulseRight = keyframes`\r\n  30% {\r\n    transform: scale(1.5, 1.5) rotate(15deg);\r\n  }\r\n  70% {\r\n    transform: scale(1, 1) rotate(15deg);\r\n  }\r\n`;\r\n\r\nconst HeartEye = styled.div`\r\n  position: absolute;\r\n  top: 2.7em;\r\n  left: 6.3em;\r\n  transform: rotate(-15deg);\r\n  animation: ${PulseLeft} 1s infinite;\r\n\r\n  :last-child {\r\n    left: auto;\r\n    right: 6.3em;\r\n    transform: rotate(15deg);\r\n    animation: ${PulseRight} 1s infinite;\r\n  }\r\n`;\r\nconst Heart = styled.div`\r\n  display: block;\r\n  width: 1.15em;\r\n  height: 1.15em;\r\n  background: #e25d5d;\r\n  transform: rotate(-45deg);\r\n\r\n  &::before {\r\n    top: -0.7em;\r\n    left: 0;\r\n    content: '';\r\n    position: absolute;\r\n    width: 1.15em;\r\n    height: 1.15em;\r\n    border-radius: 50%;\r\n    background-color: #e25d5d;\r\n  }\r\n  &::after {\r\n    left: 0.7em;\r\n    top: 0;\r\n    content: '';\r\n    position: absolute;\r\n    width: 1.15em;\r\n    height: 1.15em;\r\n    border-radius: 50%;\r\n    background-color: #e25d5d;\r\n  }\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <HeartEye>\r\n        <Heart />\r\n      </HeartEye>\r\n      <HeartEye>\r\n        <Heart />\r\n      </HeartEye>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Eyes = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Eye = styled.div`\r\n  background-color: #dddddd;\r\n  border: 0.2em solid #071412;\r\n  width: 2.7em;\r\n  height: 2.16em;\r\n  border-radius: 40% 120% 5% 120%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  float: left;\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    background-color: #ffffff;\r\n    bottom: 0;\r\n    left: 0.45em;\r\n    width: 1.8em;\r\n    height: 2.25em;\r\n    border-radius: 27% 100% 0% 100%;\r\n    border-top: 1px solid rgba(177, 177, 177, 0.8);\r\n  }\r\n`;\r\nconst RightEye = styled(Eye)`\r\n  transform: rotateY(180deg);\r\n  margin-left: 1.8em;\r\n`;\r\nconst Pupil = styled(Eye)`\r\n  z-index: 2;\r\n  margin-left: 1.08em;\r\n  margin-top: 0.18em;\r\n  width: 0.9em;\r\n  height: 2.25em;\r\n  background: #071412;\r\n  border-radius: 100%;\r\n  position: relative;\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 0.225em;\r\n    height: 0.225em;\r\n    border-radius: 100%;\r\n    top: 0.45em;\r\n    left: 0;\r\n    background: #ffffff;\r\n    background: radial-gradient(\r\n      center,\r\n      ellipse cover,\r\n      #ffffff 0%,\r\n      #ffffff 42%,\r\n      transparent 93%,\r\n      transparent 100%\r\n    );\r\n  }\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Eyes>\r\n      <Eye>\r\n        <Pupil />\r\n      </Eye>\r\n      <RightEye>\r\n        <Pupil />\r\n      </RightEye>\r\n    </Eyes>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Eyes = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 2.25em;\r\n  margin: auto;\r\n  height: 0.45em;\r\n  width: 6.3em;\r\n  background: #383437;\r\n  -moz-border-radius: 0.1em;\r\n  -webkit-border-radius: 0.1em;\r\n  border-radius: 0.1em;\r\n  -moz-box-shadow: inset 2.5em 0 #2b272b;\r\n  -webkit-box-shadow: inset 2.5em 0 #2b272b;\r\n  box-shadow: inset 2.5em 0 #2b272b;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0.45em;\r\n    height: 0.9em;\r\n    width: 2.07em;\r\n    background: #e8f0db;\r\n    -moz-border-radius: 0 0 0.75em 0.75em;\r\n    -webkit-border-radius: 0;\r\n    border-radius: 0 0 0.75em 0.75em;\r\n    -moz-box-shadow: 0 0.1em 0 0.1em #302d2f, 0 0.2em 0 0.2em #2b272b;\r\n    -webkit-box-shadow: 0 0.1em 0 0.1em #302d2f, 0 0.2em 0 0.2em #2b272b;\r\n    box-shadow: 0 0.1em 0 0.1em #302d2f, 0 0.2em 0 0.2em #2b272b;\r\n    left: 0.4em;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0.45em;\r\n    height: 0.9em;\r\n    width: 2.07em;\r\n    background: #e8f0db;\r\n    -moz-border-radius: 0 0 0.75em 0.75em;\r\n    -webkit-border-radius: 0;\r\n    border-radius: 0 0 0.75em 0.75em;\r\n    -moz-box-shadow: 0 0.1em 0 0.1em #302d2f, 0 0.2em 0 0.2em #2b272b;\r\n    -webkit-box-shadow: 0 0.1em 0 0.1em #302d2f, 0 0.2em 0 0.2em #2b272b;\r\n    box-shadow: 0 0.1em 0 0.1em #302d2f, 0 0.2em 0 0.2em #2b272b;\r\n    right: 0.4em;\r\n  }\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return <Eyes />;\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Blink = keyframes`\r\n  100% {transform: rotateX(180deg);}\r\n`;\r\nconst Eyebrows = keyframes`\r\n  100% {top: 1.8em;}\r\n`;\r\n\r\nconst Eyebrow1 = styled.div`\r\n  width: 2.7em;\r\n  height: 0.63em;\r\n  border-radius: 0.9em;\r\n  background-color: black;\r\n  float: left;\r\n  position: absolute;\r\n  top: 1.35em;\r\n  left: 5.4em;\r\n  transform: rotate(25deg);\r\n  animation: ${Eyebrows} 1s infinite alternate;\r\n`;\r\nconst Eyebrow2 = styled.div`\r\n  width: 2.7em;\r\n  height: 0.63em;\r\n  border-radius: 0.9em;\r\n  background-color: black;\r\n  margin-left: 1.5em;\r\n  float: left;\r\n  position: absolute;\r\n  top: 1.35em;\r\n  right: 5.4em;\r\n  transform: rotate(-25deg);\r\n  animation: ${Eyebrows} 1s infinite alternate;\r\n`;\r\nconst Eye = styled.div`\r\n  float: left;\r\n  height: 2em;\r\n  width: 1em;\r\n  background: black;\r\n  border-radius: 50%;\r\n  margin-top: 2.7em;\r\n  margin-left: 6.3em;\r\n  animation: ${Blink} 1s cubic-bezier(1, 0.01, 1, -0.08) alternate infinite both;\r\n  :last-child {\r\n    margin-left: 3.15em;\r\n  }\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Eyebrow1 />\r\n      <Eyebrow2 />\r\n      <Eye />\r\n      <Eye />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Eye = styled.div`\r\n  border: 0 solid transparent;\r\n  border-top: 0.7em solid black;\r\n  border-radius: 9em;\r\n  width: 15%;\r\n  height: 50%;\r\n  transition: all 0.1s linear;\r\n  position: absolute;\r\n  top: 25%;\r\n  left: 30%;\r\n\r\n  &::before {\r\n    position: absolute;\r\n    content: '';\r\n    height: 1.62em;\r\n    width: 1.35em;\r\n    top: 0.45em;\r\n    border-radius: 100%;\r\n    display: block;\r\n    background-color: #000;\r\n    left: 0.72em;\r\n  }\r\n`;\r\nconst Eye2 = styled(Eye)`\r\n  left: 9.45em;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Eye />\r\n      <Eye2 />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import styled from 'styled-components';\r\n\r\nconst Normal = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 4.68em;\r\n  height: 1.08em;\r\n  border-radius: 9em;\r\n  background: #111;\r\n`;\r\n\r\nexport default Normal;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst Wink = keyframes`\r\n\t50% {\r\n  width: 3.6em;\r\n  height: 0;\r\n\t}\r\n`;\r\n\r\nconst Smile = styled.div`\r\n  position: absolute;\r\n  top: 25%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 2.7em;\r\n  height: 1.8em;\r\n  background: #cf1d52;\r\n  border-radius: 100%;\r\n  border: 0.15em solid #1d1d1d;\r\n  border-radius: 0 0 5em 5em;\r\n  animation: ${Wink} 1.5s infinite;\r\n`;\r\n\r\nexport default Smile;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Mouse = styled.div`\r\n  z-index: 1;\r\n  position: absolute;\r\n  top: 0.9em;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 4.5em;\r\n  height: 0.45em;\r\n  background: #111;\r\n`;\r\n\r\nconst TeethLeft = styled.div`\r\n  position: absolute;\r\n  top: 0.9em;\r\n  left: 42.5%;\r\n  width: 1.08em;\r\n  height: 1.08em;\r\n  background: #fff;\r\n  border-radius: 0.27em;\r\n  border: 0.2em solid #111;\r\n`;\r\nconst TeethRight = styled(TeethLeft)`\r\n  transform: translateX(1.62em);\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Mouse />\r\n      <TeethLeft />\r\n      <TeethRight />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import styled from 'styled-components';\r\n\r\nconst TongueSmile = styled.div`\r\n  position: absolute;\r\n  top: 2.25em;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 3em;\r\n  height: 2.1em;\r\n  background-color: black;\r\n  border-radius: 70% 70% 3.5em 3.5em;\r\n  overflow: hidden;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: inherit;\r\n    height: 0.9em;\r\n    background-color: tomato;\r\n    border-radius: 50% 50% 0 0;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nexport default TongueSmile;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Blooddrop = keyframes`\r\n  0% { opacity: 0; }\r\n  100% { transform: translateY(2.5em) rotate(-45deg); opacity: 1;}\r\n`;\r\n\r\nconst Mouse = styled.div`\r\n  height: 2.7em;\r\n  width: 6.3em;\r\n  background: black;\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 1em 1em 50% 50%;\r\n`;\r\nconst ToothLeft = styled.div`\r\n  position: absolute;\r\n  left: 1.35em;\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 0.75em solid transparent;\r\n  border-right: 0.75em solid transparent;\r\n  border-top: 1.5em solid white;\r\n  float: left;\r\n`;\r\nconst ToothRight = styled.div`\r\n  position: absolute;\r\n  left: 2.43em;\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 0.75em solid transparent;\r\n  border-right: 0.75em solid transparent;\r\n  border-top: 1.5em solid white;\r\n  float: left;\r\n  margin-left: 1em;\r\n`;\r\nconst Blood = styled.div`\r\n  position: absolute;\r\n  top: 0.9em;\r\n  right: 6.75em;\r\n  width: 1.62em;\r\n  height: 1.62em;\r\n  border: 0 solid rgba(0, 0, 0, 1);\r\n  -webkit-border-radius: 80% 0 55% 50% / 55% 0 80% 50%;\r\n  transform: rotate(-45deg);\r\n  background: #f53057;\r\n  animation: ${Blooddrop} 1.5s infinite;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Mouse>\r\n        <ToothLeft />\r\n        <ToothRight />\r\n      </Mouse>\r\n      <Blood />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Face = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 9em;\r\n  height: 9em;\r\n\r\n  &::before,\r\n  &::after {\r\n    position: absolute;\r\n    content: '';\r\n\r\n    top: 0.45em;\r\n    left: 6.93em;\r\n    z-index: 5;\r\n    width: 1.62em;\r\n    height: 1.26em;\r\n    border-radius: 50% / 40%;\r\n    border-right: 0.25em solid #000;\r\n    border-bottom: 0.25em solid #000;\r\n    border-left: 0.25em solid transparent;\r\n    border-top: 0.25em solid transparent;\r\n    box-shadow: 0px 0px #000;\r\n  }\r\n  &::after {\r\n    left: 8.73em;\r\n    transform: rotateY(180deg);\r\n  }\r\n`;\r\n\r\nconst Features = styled.div`\r\n  position: absolute;\r\n  content: '';\r\n\r\n  &::after {\r\n    position: absolute;\r\n    content: '';\r\n    left: 8.19em;\r\n    top: -0.45em;\r\n    width: 1.35em;\r\n    height: 1.35em;\r\n    background-color: #000;\r\n    border-radius: 50%;\r\n    box-shadow: 0.1em 0 #000, 0.05em 0.05em #000;\r\n  }\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Face />\r\n      <Features />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Animation = keyframes`\r\n\t50% {\r\n  height: 1.35em;\r\n\t}\r\n`;\r\n\r\nconst Normal = styled.div`\r\n  position: absolute;\r\n  top: 40%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 6.3em;\r\n  height: 0.63em;\r\n  border-radius: 4.5em;\r\n  background: #111;\r\n`;\r\n\r\nconst Teeth = styled.div`\r\n  position: absolute;\r\n  border-top: 0.8em solid white;\r\n  border-left: 0.4em solid transparent;\r\n  border-right: 0.4em solid transparent;\r\n  left: 1.35em;\r\n\r\n  &::before {\r\n    position: absolute;\r\n    border-top: 0.8em solid white;\r\n    border-left: 0.4em solid transparent;\r\n    border-right: 0.4em solid transparent;\r\n    content: '';\r\n    top: 0;\r\n    left: 2.25em;\r\n    transform: translateY(-100%);\r\n  }\r\n`;\r\n\r\nconst Saliva = styled.div`\r\n  background-color: lightblue;\r\n  height: 2.25em;\r\n  width: 0.9em;\r\n  border-bottom-left-radius: 4.5em;\r\n  border-bottom-right-radius: 4.5em;\r\n  z-index: 1;\r\n  position: absolute;\r\n  top: 48%;\r\n  left: 10.8em;\r\n  animation: ${Animation} 1.5s infinite;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Normal>\r\n        <Teeth />\r\n      </Normal>\r\n      <Saliva />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst Wink = keyframes`\r\n  from { -webkit-transform: scale(0.8); }\r\n`;\r\n\r\nconst Surprised = styled.div`\r\n  position: absolute;\r\n  background: #941e00;\r\n  width: 1.8em;\r\n  height: 2.25em;\r\n  left: 45%;\r\n  top: 0.45em;\r\n  border-radius: 70% 25% 30%;\r\n  animation: ${Wink} 0.5s infinite alternate;\r\n`;\r\n\r\nexport default Surprised;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Normal = styled.div`\r\n  position: absolute;\r\n  width: 3.6em;\r\n  height: 2.25em;\r\n  background-color: black;\r\n  border-radius: 70% 70% 3.5em 3.5em;\r\n  overflow: hidden;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst Teeth = styled.div`\r\n  position: absolute;\r\n  border-top: 0.72em solid #fffefb;\r\n  border-left: 0.45em solid transparent;\r\n  border-right: 0.45em solid transparent;\r\n  left: 1.35em;\r\n\r\n  &::before {\r\n    position: absolute;\r\n    border-top: 0.72em solid #fffefb;\r\n    border-left: 0.45em solid transparent;\r\n    border-right: 0.45em solid transparent;\r\n    content: '';\r\n    left: -1.1em;\r\n    transform: translateY(-100%);\r\n  }\r\n\r\n  &::after {\r\n    position: absolute;\r\n    border-top: 0.72em solid #fffefb;\r\n    border-left: 0.45em solid transparent;\r\n    border-right: 0.45em solid transparent;\r\n    content: '';\r\n    left: 0.36em;\r\n    transform: translateY(-100%);\r\n  }\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Normal>\r\n        <Teeth />\r\n      </Normal>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import styled from 'styled-components';\r\n\r\nconst Cloud = styled.div`\r\n  background: ${(props) => props.color};\r\n  width: 60%;\r\n  height: 60%;\r\n  margin-left: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  &::before {\r\n    border-radius: 50%;\r\n    box-shadow: 10.5em 0 0 0 ${(props) => props.color},\r\n      10.5em -2.5em 0 -0.2em ${(props) => props.color},\r\n      10em -4.5em 0 -0.2em ${(props) => props.color},\r\n      9.5em -7.5em 0 0.2em ${(props) => props.color},\r\n      7em -9em 0 -0.2em ${(props) => props.color},\r\n      4.5em -9em 0 0 ${(props) => props.color},\r\n      1.5em -8em 0 0.3em ${(props) => props.color},\r\n      0.5em -5.5em 0 -0.2em ${(props) => props.color},\r\n      1em -3em 0 0.2em ${(props) => props.color},\r\n      2em 1em 0 0.2em ${(props) => props.color},\r\n      4.5em 1.5em 0 0.2em ${(props) => props.color},\r\n      7em 2em 0 -0.1em ${(props) => props.color},\r\n      9em 1.5em 0 -0.1em ${(props) => props.color};\r\n    content: '';\r\n    position: absolute;\r\n    width: 35%;\r\n    height: 35%;\r\n    left: -15%;\r\n    bottom: 0;\r\n    background: ${(props) => props.color};\r\n  }\r\n`;\r\n\r\nexport default Cloud;\r\n","import styled from 'styled-components';\r\n\r\nconst Diamond = styled.div`\r\n  width: 0;\r\n  height: 0;\r\n  border: 9em solid transparent;\r\n  border-bottom: 9em solid ${(props) => props.color};\r\n  position: relative;\r\n  top: -9em;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: -9em;\r\n    top: 9em;\r\n    width: 0;\r\n    height: 0;\r\n    border: 9em solid transparent;\r\n    border-top: 9em solid ${(props) => props.color};\r\n  }\r\n`;\r\n\r\nexport default Diamond;\r\n","import styled from 'styled-components';\r\n\r\nconst Nail = styled.div`\r\n  width: 90%;\r\n  height: 100%;\r\n  background: ${(props) => props.color};\r\n  border-radius: 100%;\r\n  border-bottom-left-radius: 0.8em;\r\n  border-bottom-right-radius: 0.8em;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport default Nail;\r\n","import styled from 'styled-components';\r\n\r\nconst Round = styled.div`\r\n  width: 85%;\r\n  height: 85%;\r\n  background-color: ${(props) => props.color};\r\n  border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport default Round;\r\n","import styled from 'styled-components';\r\n\r\nconst Square = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  height: 70%;\r\n  width: 60%;\r\n  border-radius: 0.9em;\r\n  border-bottom-left-radius: 3.15em;\r\n  border-bottom-right-radius: 3.15em;\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\nexport default Square;\r\n","import styled from 'styled-components';\r\n\r\nconst Star = styled.div`\r\n  background: ${(props) => props.color};\r\n  width: 70%;\r\n  height: 70%;\r\n  position: relative;\r\n  text-align: center;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 13em;\r\n    width: 13em;\r\n    background: ${(props) => props.color};\r\n  }\r\n\r\n  &::before {\r\n    transform: rotate(30deg);\r\n  }\r\n\r\n  &::after {\r\n    transform: rotate(60deg);\r\n  }\r\n`;\r\n\r\nexport default Star;\r\n","import React from 'react';\nimport { Color, Body } from 'App/datas';\nimport Cloud from './Cloud';\nimport Diamond from './Diamond';\nimport Nail from './Nail';\nimport Round from './Round';\nimport Square from './Square';\nimport Star from './Star';\n\nconst colorMap = {\n  [Color.GroupRed]: ['#ecbaba', '#b28383'],\n  [Color.GroupYellow]: ['#f0e4a7', '#cdc89a'],\n  [Color.GroupGreen]: ['#c8e1c2', '#adbda9'],\n  [Color.GroupBlue]: ['#bfcbe7', '#a9b3c9'],\n};\n\nconst renderColor = (color: Color, pickedColor?: number) => {\n  const colorGroup = colorMap[color];\n  const randomNum =\n    pickedColor === undefined\n      ? Math.floor(Math.random() * colorGroup.length)\n      : pickedColor;\n  return colorGroup[randomNum];\n};\n\nconst bodyMap = {\n  [Body.Good]: [Round, Cloud],\n  [Body.Soso]: [Nail, Square],\n  [Body.Bad]: [Star, Diamond],\n};\n\nconst renderBody = (body: Body, color: string, pickedBody?: number) => {\n  const bodyGroup = bodyMap[body];\n  const randomNum =\n    pickedBody === undefined\n      ? Math.floor(Math.random() * bodyGroup.length)\n      : pickedBody;\n  const BodyComponent = bodyGroup[randomNum];\n  return <BodyComponent color={color} />;\n};\n\nconst Bodies: React.FC<{\n  color: Color;\n  body: Body;\n  pickedColor?: number;\n  pickedBody?: number;\n}> = ({ body, color, pickedBody, pickedColor }) => {\n  const bodyColor = renderColor(color, pickedColor);\n  return renderBody(body, bodyColor, pickedBody);\n};\n\nexport default Bodies;\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Mouse, Eyes, Bacteria, BacteriaPickedPartType } from 'App/datas';\r\nimport { scaleUp } from 'styles/animations';\r\n\r\nimport SquintEye from 'components/bacteriaParts/eyes/Squint';\r\nimport EmptyEye from 'components/bacteriaParts/eyes/Empty';\r\nimport BeanEye from 'components/bacteriaParts/eyes/Bean';\r\nimport WinkEye from 'components/bacteriaParts/eyes/Wink';\r\nimport HeartEye from 'components/bacteriaParts/eyes/Heart';\r\nimport CatEye from 'components/bacteriaParts/eyes/Cat';\r\nimport FrankEye from 'components/bacteriaParts/eyes/Frank';\r\nimport AngryEye from 'components/bacteriaParts/eyes/Angry';\r\nimport SmileEye from 'components/bacteriaParts/eyes/Smile';\r\n\r\nimport NormalMouse from 'components/bacteriaParts/mouses/Normal';\r\nimport SmileMouse from 'components/bacteriaParts/mouses/Smile';\r\nimport SquareTeethMouse from 'components/bacteriaParts/mouses/SquareTeeth';\r\nimport TongueSmileMouse from 'components/bacteriaParts/mouses/TongueSmile';\r\nimport BloodMouse from 'components/bacteriaParts/mouses/Blood';\r\nimport PuppyMouse from 'components/bacteriaParts/mouses/Puppy';\r\nimport SalivaMouse from 'components/bacteriaParts/mouses/Saliva';\r\nimport SurprisedMouse from 'components/bacteriaParts/mouses/Surprised';\r\nimport ThreeTeethMouse from 'components/bacteriaParts/mouses/ThreeTeeth';\r\nimport Bodies from './bacteriaParts/bodies';\r\n\r\nconst eyesMap = {\r\n  [Eyes.Good]: [HeartEye, WinkEye, SmileEye],\r\n  [Eyes.Soso]: [SquintEye, EmptyEye, BeanEye],\r\n  [Eyes.Bad]: [AngryEye, FrankEye, CatEye],\r\n};\r\n\r\nconst renderEyes = (eyes: Eyes, pickedEyes?: number) => {\r\n  const eyesGroup = eyesMap[eyes];\r\n  const randomNum =\r\n    pickedEyes === undefined\r\n      ? Math.floor(Math.random() * eyesGroup.length)\r\n      : pickedEyes;\r\n  const EyesComponent = eyesGroup[randomNum];\r\n  return <EyesComponent />;\r\n};\r\n\r\nconst mouseMap = {\r\n  [Mouse.Good]: [PuppyMouse, TongueSmileMouse, SmileMouse],\r\n  [Mouse.Soso]: [SquareTeethMouse, SurprisedMouse, NormalMouse],\r\n  [Mouse.Bad]: [BloodMouse, ThreeTeethMouse, SalivaMouse],\r\n};\r\n\r\nconst renderMouse = (mouse: Mouse, pickedMouse?: number) => {\r\n  const mouseGroup = mouseMap[mouse];\r\n  const randomNum =\r\n    pickedMouse === undefined\r\n      ? Math.floor(Math.random() * mouseGroup.length)\r\n      : pickedMouse;\r\n  const MouseComponent = mouseGroup[randomNum];\r\n  return <MouseComponent />;\r\n};\r\n\r\nconst BodyDiv = styled.div`\r\n  position: relative;\r\n  animation: ${scaleUp} 0.7s infinite alternate;\r\n`;\r\nconst EyeDiv = styled.div`\r\n  position: absolute;\r\n  top: 15%;\r\n  width: 100%;\r\n  height: 27.5%;\r\n`;\r\nconst MouseDiv = styled.div`\r\n  width: 100%;\r\n  height: 25%;\r\n  position: absolute;\r\n  top: 42.5%;\r\n`;\r\n\r\ntype Props = {\r\n  type: Bacteria | null;\r\n  detail?: BacteriaPickedPartType;\r\n  size?: number;\r\n};\r\n\r\nconst BacteriaCombination: React.FC<Props> = ({\r\n  type,\r\n  detail = {\r\n    pickedBody: undefined,\r\n    pickedEyes: undefined,\r\n    pickedMouse: undefined,\r\n    pickedColor: undefined,\r\n  },\r\n  size = 19,\r\n}) => {\r\n  if (!type) {\r\n    return <div>-</div>;\r\n  }\r\n  const { body, eyes, mouse, color } = type;\r\n  const { pickedBody, pickedEyes, pickedMouse, pickedColor } = detail;\r\n\r\n  return (\r\n    <BodyDiv\r\n      style={{\r\n        width: `${size}rem`,\r\n        height: `${size}rem`,\r\n        fontSize: `${size}px`,\r\n      }}\r\n    >\r\n      <Bodies\r\n        body={body}\r\n        color={color}\r\n        pickedBody={pickedBody}\r\n        pickedColor={pickedColor}\r\n      />\r\n      <EyeDiv>{renderEyes(eyes, pickedEyes)}</EyeDiv>\r\n      <MouseDiv>{renderMouse(mouse, pickedMouse)}</MouseDiv>\r\n    </BodyDiv>\r\n  );\r\n};\r\nexport default React.memo(BacteriaCombination);\r\n","export default __webpack_public_path__ + \"static/media/seed.882841d9.png\";","export default __webpack_public_path__ + \"static/media/dandelion.066528f7.png\";","export default __webpack_public_path__ + \"static/media/pine-cone.1b89ff48.png\";","export default __webpack_public_path__ + \"static/media/sesame.099b92ea.png\";","export default __webpack_public_path__ + \"static/media/rope.80e64e30.png\";","export default __webpack_public_path__ + \"static/media/candy.84283a01.png\";","export default __webpack_public_path__ + \"static/media/jupiter.03ba7b30.png\";","export default __webpack_public_path__ + \"static/media/milky-way.e3f98fd8.png\";","export default __webpack_public_path__ + \"static/media/dna.4905500d.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport NoBacteriaGroupA_0 from 'assets/images/seed.png';\r\nimport NoBacteriaGroupA_1 from 'assets/images/dandelion.png';\r\nimport NoBacteriaGroupA_2 from 'assets/images/pine-cone.png';\r\n\r\nimport NoBacteriaGroupB_0 from 'assets/images/sesame.png';\r\nimport NoBacteriaGroupB_1 from 'assets/images/rope.png';\r\nimport NoBacteriaGroupB_2 from 'assets/images/candy.png';\r\n\r\nimport NoBacteriaGroupC_0 from 'assets/images/jupiter.png';\r\nimport NoBacteriaGroupC_1 from 'assets/images/milky-way.png';\r\nimport NoBacteriaGroupC_2 from 'assets/images/dna.png';\r\n\r\nimport { scaleUp } from 'styles/animations';\r\n\r\nconst somethingRender = (type: string) => {\r\n  switch (type) {\r\n    case 'noBacteriaGroupA':\r\n      switch (Math.floor(Math.random() * 3)) {\r\n        case 0:\r\n          return <img src={NoBacteriaGroupA_0} alt=\"\" />;\r\n        case 1:\r\n          return <img src={NoBacteriaGroupA_1} alt=\"\" />;\r\n        case 2:\r\n          return <img src={NoBacteriaGroupA_2} alt=\"\" />;\r\n        default:\r\n          break;\r\n      }\r\n      return <></>;\r\n    default:\r\n      break;\r\n\r\n    case 'noBacteriaGroupB':\r\n      switch (Math.floor(Math.random() * 3)) {\r\n        case 0:\r\n          return <img src={NoBacteriaGroupB_0} alt=\"\" />;\r\n        case 1:\r\n          return <img src={NoBacteriaGroupB_1} alt=\"\" />;\r\n        case 2:\r\n          return <img src={NoBacteriaGroupB_2} alt=\"\" />;\r\n        default:\r\n          break;\r\n      }\r\n      return <></>;\r\n\r\n    case 'noBacteriaGroupC':\r\n      switch (Math.floor(Math.random() * 3)) {\r\n        case 0:\r\n          return <img src={NoBacteriaGroupC_0} alt=\"\" />;\r\n        case 1:\r\n          return <img src={NoBacteriaGroupC_1} alt=\"\" />;\r\n        case 2:\r\n          return <img src={NoBacteriaGroupC_2} alt=\"\" />;\r\n        default:\r\n          break;\r\n      }\r\n      return <></>;\r\n  }\r\n  return <></>;\r\n};\r\n\r\ntype Props = {\r\n  type: string;\r\n  size?: number;\r\n};\r\n\r\ntype ImgProps = {\r\n  size?: number;\r\n};\r\n\r\nconst SometingDiv = styled.div<ImgProps>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  animation: ${scaleUp} 0.7s infinite alternate;\r\n\r\n  img {\r\n    width: ${(props) => props.size}rem;\r\n    z-index: 9;\r\n  }\r\n`;\r\n\r\nconst RenderSomething: React.FC<Props> = ({ type, size = 14 }) => {\r\n  return <SometingDiv size={size}>{somethingRender(type)}</SometingDiv>;\r\n};\r\nexport default React.memo(RenderSomething);\r\n","export default __webpack_public_path__ + \"static/media/micro.d9d3d232.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype Props = {\r\n  title?: string;\r\n  content?: string;\r\n};\r\n\r\nconst Div = styled.div`\r\n  position: absolute;\r\n  bottom: 1.5rem;\r\n  left: 1.5rem;\r\n  box-shadow: 1px 0 8px 0 rgba(0, 0, 0, 0.16);\r\n  background-color: #fbfbfb;\r\n  padding: 1.5rem;\r\n  max-width: 30rem;\r\n  border-radius: 1rem;\r\n  z-index: 1;\r\n  font-size: 1rem;\r\n  white-space: pre-wrap;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 1.2rem;\r\n  font-weight: 800;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst HelpBox: React.FC<Props> = ({ children, title, content }) => {\r\n  return (\r\n    <Div>\r\n      {title && <Title>{title}</Title>}\r\n      {content} {children}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default HelpBox;\r\n","import React from 'react';\nimport HelpBox from 'components/HelpBox';\n\nconst HelpBoxByGage: React.FC<{ gage: number }> = ({ gage }) => {\n  let content = `아직 세균을 제대로 구분할 수 없어....😖\\n세균의 색깔, 모양, 표정 등을 기준으로 자유롭게 분류해봐.`;\n  if (gage >= 50) {\n    content = `우리가 수집한 학습데이터는 여기까지야.\\n끝까지 학습시켜줘서 고마워😍`;\n  } else if (gage >= 25) {\n    content = '더 많이 학습시킬수록 AI는 더 너를 닮아가!🙂';\n  } else if (gage >= 20) {\n    content = '고마워! 덕분에 많은 걸 배웠어!😎';\n  } else if (gage >= 10) {\n    content = `이제 조금은 알 것 같아.\\n그래도 부족해😢`;\n  } else if (gage >= 5) {\n    content = '어떤 게 세균일까... 더 배우고 싶어!🧐';\n  }\n\n  return <HelpBox title=\"AI가 보내는 메시지\">{content}</HelpBox>;\n};\n\nexport default HelpBoxByGage;\n","import React, { useContext, useMemo } from 'react';\r\nimport BasePage from 'components/BasePage';\r\nimport {\r\n  Container,\r\n  DivBase,\r\n  ContentTitle,\r\n  Content,\r\n  ExplainBox,\r\n  PointText,\r\n} from 'components/BaseStyles';\r\nimport {\r\n  FlexDiv,\r\n  LearnPageDiv,\r\n  RightBtnDiv,\r\n  MicroImg,\r\n  LearnPageBtn,\r\n  MicroCircle,\r\n  Trapezoid,\r\n  OXBtnDiv,\r\n  BatteryDiv,\r\n  TrashBtn,\r\n  TrashDiv,\r\n  CustomPopover,\r\n} from 'components/EtcStyles';\r\nimport BacteriaCombination from 'components/BacteriaCombination';\r\nimport AppContext from 'App/context';\r\nimport {\r\n  PatternFirstType,\r\n  generateBacteria,\r\n  generateModelFirstLabel,\r\n  modelFirst,\r\n} from 'App/datas';\r\nimport RenderNoBacteria from 'components/RenderNoBacteria';\r\nimport Micro from 'assets/images/micro.png';\r\nimport { FaRegTrashAlt as Trash } from 'react-icons/fa';\r\nimport HelpBoxByGage from 'components/HelpBoxByGage';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nconst Page: React.FC = () => {\r\n  const {\r\n    state: { modelsFirst },\r\n    setState,\r\n    goToNext,\r\n    learnBacteria,\r\n    learnNoBacteria,\r\n  } = useContext(AppContext);\r\n\r\n  const gage =\r\n    modelsFirst.bacteria.learnCount + modelsFirst.noBacteria.learnCount;\r\n  const zeroPaddedGage = ['0', gage.toString()].join('').slice(-2);\r\n  const handleTarget = () => {\r\n    const param = generateModelFirstLabel();\r\n    return {\r\n      param,\r\n      bacteria: param === 'bacteria' ? generateBacteria() : null,\r\n    };\r\n  };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const target = useMemo(handleTarget, [gage]);\r\n  const { param, bacteria } = target;\r\n\r\n  const handleChange = (learn: (_: keyof PatternFirstType) => void) => () => {\r\n    if (gage < 50) {\r\n      learn(param);\r\n    }\r\n  };\r\n  const handleChangeO = handleChange(learnBacteria);\r\n  const handleChangeX = handleChange(learnNoBacteria);\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleTooltipClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <BasePage>\r\n      <Container>\r\n        <DivBase>\r\n          <ContentTitle>1. AI 학습 시키기</ContentTitle>\r\n          <ExplainBox>\r\n            AI는 처음에 공기 중 물체가 세균인지, 아닌지 구분할 수 없어.\r\n            <div>\r\n              <PointText>AI는 우리가 알려준대로 물체를 인식</PointText>하게\r\n              될거야! 이제 AI에게 세균을 알려주자!\r\n            </div>\r\n          </ExplainBox>\r\n          <Content style={{ height: 'calc(100% - 5rem)' }}>\r\n            <FlexDiv>\r\n              <LearnPageDiv>\r\n                <MicroImg src={Micro} alt=\"\" />\r\n                <Trapezoid />\r\n                <MicroCircle>\r\n                  <ClickAwayListener onClickAway={handleTooltipClose}>\r\n                    <BatteryDiv>\r\n                      <CustomPopover isOpen={open}>\r\n                        처음부터 다시 시작하려면 여길 눌러 학습데이터를 비워봐!\r\n                      </CustomPopover>\r\n                      <TrashDiv>\r\n                        <TrashBtn\r\n                          onClick={() =>\r\n                            setState((prevState) => ({\r\n                              ...prevState,\r\n                              modelsFirst: {\r\n                                bacteria: { ...modelFirst },\r\n                                noBacteria: { ...modelFirst },\r\n                              },\r\n                            }))\r\n                          }\r\n                        >\r\n                          <Trash />\r\n                        </TrashBtn>\r\n                        {zeroPaddedGage} / 50\r\n                      </TrashDiv>\r\n                    </BatteryDiv>\r\n                  </ClickAwayListener>\r\n                  {param === 'bacteria' ? (\r\n                    <BacteriaCombination type={bacteria} />\r\n                  ) : (\r\n                    <RenderNoBacteria type={param} />\r\n                  )}\r\n                </MicroCircle>\r\n                <OXBtnDiv>\r\n                  <LearnPageBtn onClick={handleChangeO} color=\"#FF5667\">\r\n                    세균이다\r\n                  </LearnPageBtn>\r\n                  <LearnPageBtn onClick={handleChangeX} color=\"#5BC590\">\r\n                    세균아님\r\n                  </LearnPageBtn>\r\n                </OXBtnDiv>\r\n                <RightBtnDiv>\r\n                  <LearnPageBtn\r\n                    onClick={() => {\r\n                      goToNext();\r\n                    }}\r\n                    disabled={gage < 5}\r\n                    color=\"#1696e5\"\r\n                    style={{ margin: 0 }}\r\n                  >\r\n                    학습완료\r\n                  </LearnPageBtn>\r\n                </RightBtnDiv>\r\n              </LearnPageDiv>\r\n            </FlexDiv>\r\n            <HelpBoxByGage gage={gage} />\r\n          </Content>\r\n        </DivBase>\r\n      </Container>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","export default __webpack_public_path__ + \"static/media/machine.33491a7b.png\";","import AppContext, { ModelsFirstType, ModelsSecondType } from 'App/context';\nimport Lottie from 'react-lottie';\nimport { generateBacteria, generateModelFirstLabel } from 'App/datas';\nimport React, { useContext, useState, useLayoutEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  Conveyer1,\n  Conveyer2,\n  Conveyer3,\n  Conveyer4,\n  LittleBounce,\n} from 'styles/animations';\nimport Machine from 'assets/images/machine.png';\nimport { FaCheckCircle, FaMinusCircle } from 'react-icons/fa';\nimport RenderNoBacteria from 'components/RenderNoBacteria';\nimport BacteriaCombination from 'components/BacteriaCombination';\nimport animationData from 'assets/lotties/20734-siren-animation.json';\n\nconst maxStep = 4;\n\nconst GreenIcon = styled.div`\n  color: #5bc590;\n  svg {\n    fill: #5bc590;\n  }\n`;\nconst RedIcon = styled.div`\n  color: #ff5667;\n  svg {\n    fill: #ff5667;\n  }\n`;\nconst getLabelFirst = (result: keyof ModelsFirstType | null) => {\n  switch (result) {\n    case 'bacteria':\n      return (\n        <RedIcon>\n          <FaCheckCircle />\n          <div>세균이다</div>\n        </RedIcon>\n      );\n    case 'noBacteria':\n      return (\n        <GreenIcon>\n          <FaMinusCircle />\n          <div>세균아님</div>\n        </GreenIcon>\n      );\n    default:\n      return '-';\n  }\n};\n\nconst getLabelSecond = (result: keyof ModelsSecondType | null) => {\n  switch (result) {\n    case 'noxious':\n      return (\n        <RedIcon>\n          <FaCheckCircle />\n          <div>유해균</div>\n        </RedIcon>\n      );\n    case 'innoxious':\n      return (\n        <GreenIcon>\n          <FaMinusCircle />\n          <div>무해균</div>\n        </GreenIcon>\n      );\n    default:\n      return '-';\n  }\n};\n\nconst Container = styled.div`\n  position: relative;\n  width: 60rem;\n  height: 28rem;\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n  flex-direction: row-reverse;\n  margin: auto;\n  overflow-x: hidden;\n  overflow-y: hidden;\n\n  & > div + div {\n    margin: 0 3rem 3rem 3rem;\n  }\n`;\n\nconst Animated = styled.div`\n  :nth-child(2) {\n    animation: ${Conveyer3} 1s ease forwards;\n  }\n  :nth-child(3) {\n    animation: ${Conveyer2} 1s ease forwards;\n  }\n  :nth-child(4) {\n    animation: ${Conveyer1} 1s ease forwards;\n  }\n  :nth-child(5) {\n    animation: ${Conveyer4} 1s ease forwards;\n  }\n  :nth-child(5) > :nth-child(2) {\n    visibility: hidden;\n  }\n`;\n\nconst UVMachine = styled.div<{\n  on: boolean;\n}>`\n  position: absolute;\n  text-align: center;\n  top: 10%;\n  left: 33%;\n  width: 10rem;\n  height: 25rem;\n  top: -10rem;\n  left: 42%;\n  background: linear-gradient(180deg, #5bc590, transparent);\n  -webkit-transform: perspective(200px) rotateX(40deg);\n\n  ${({ on }) =>\n    on &&\n    css`\n      background: linear-gradient(180deg, #ff1b1b, transparent);\n    `}\n`;\n\nconst LabelDiv = styled.div`\n  margin-top: 0.2rem;\n  z-index: 9;\n`;\n\nconst Img = styled.img`\n  position: absolute;\n  top: 25%;\n  left: 0;\n  width: 15rem;\n`;\n\nconst Belt = styled.div`\n  border: 1px solid gray;\n  border-radius: 3rem;\n  width: 74rem;\n  height: 5rem;\n  position: absolute;\n  bottom: -2.5rem;\n  left: 50%;\n  transform: translate(-50%, 0);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #fff;\n`;\nconst Circle = styled.div`\n  width: 3rem;\n  height: 3rem;\n  margin: 0 5rem;\n  border-radius: 50%;\n  border: 1rem solid #c7c7c7;\n  background-color: #fff;\n  animation: ${LittleBounce} 0.2s infinite alternate;\n`;\nconst StyledContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, 0);\n  z-index: 9;\n`;\n\ntype Props = {\n  type: 'modelFirst' | 'modelSecond';\n};\n\nconst generateSomething = () => {\n  const something = generateModelFirstLabel();\n  return {\n    something,\n    feature: something === 'bacteria' ? generateBacteria() : null,\n  };\n};\n\nconst ConveyerBelt: React.FC<Props> = ({ type }) => {\n  const { predictFirst, predictSecond } = useContext(AppContext);\n\n  const [somethings, setSomethings] = useState(\n    Array.from(new Array(maxStep)).map((_, index) => {\n      return {\n        key: index,\n        ...generateSomething(),\n      };\n    }),\n  );\n\n  const [bacterias, setBacterias] = useState(\n    Array.from(new Array(maxStep)).map((_, index) => ({\n      key: index,\n      bacteria: generateBacteria(),\n    })),\n  );\n\n  useLayoutEffect(() => {\n    const timeout: NodeJS.Timeout = setTimeout(() => {\n      switch (type) {\n        case 'modelFirst':\n          return setSomethings((prev) => [\n            { ...prev[1] },\n            { ...prev[2] },\n            { ...prev[3] },\n            { key: prev[3].key + 1, ...generateSomething() },\n          ]);\n        case 'modelSecond':\n          return setBacterias((prev) => [\n            { ...prev[1] },\n            { ...prev[2] },\n            { ...prev[3] },\n            { key: prev[3].key + 1, bacteria: generateBacteria() },\n          ]);\n        default:\n          break;\n      }\n      return <></>;\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [type, somethings, setSomethings, bacterias, setBacterias]);\n\n  const isFirstUVMachineOn =\n    predictFirst(somethings[2].something) === 'bacteria';\n  const isSecondUVMachineOn =\n    predictSecond(bacterias[2].bacteria) === 'noxious';\n\n  const defaultOptions = {\n    animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n\n  const className = 'lavel-div';\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <Img src={Machine} />\n      <StyledContent>\n        <Lottie\n          options={defaultOptions}\n          height={120}\n          width={120}\n          isStopped={\n            type === 'modelFirst' ? !isFirstUVMachineOn : !isSecondUVMachineOn\n          }\n        />\n      </StyledContent>\n      <Container>\n        {type === 'modelFirst' ? (\n          <>\n            <UVMachine on={isFirstUVMachineOn} />\n            {somethings.map(({ key, something, feature }) => {\n              const result = predictFirst(something);\n              return (\n                <Animated key={key}>\n                  {something === 'bacteria' ? (\n                    <BacteriaCombination type={feature} size={14} />\n                  ) : (\n                    <RenderNoBacteria type={something} size={14} />\n                  )}\n                  <LabelDiv>{getLabelFirst(result)}</LabelDiv>\n                </Animated>\n              );\n            })}\n          </>\n        ) : (\n          <>\n            <UVMachine on={isSecondUVMachineOn} />\n            {bacterias.map(({ key, bacteria }) => {\n              const result = predictSecond(bacteria);\n              return (\n                <Animated key={key}>\n                  <BacteriaCombination type={bacteria} size={14} />\n                  <LabelDiv className={className}>\n                    {getLabelSecond(result)}\n                  </LabelDiv>\n                </Animated>\n              );\n            })}\n          </>\n        )}\n      </Container>\n      <Belt>\n        <Circle />\n        <Circle />\n        <Circle />\n        <Circle />\n        <Circle />\n      </Belt>\n    </div>\n  );\n};\n\nexport default React.memo(ConveyerBelt);\n","import React from 'react';\r\nimport BasePage from 'components/BasePage';\r\nimport {\r\n  Container,\r\n  DivBase,\r\n  ContentTitle,\r\n  Content,\r\n  ExplainBox,\r\n  PointText,\r\n} from 'components/BaseStyles';\r\nimport ButtonGroup from 'components/ButtonGroup';\r\nimport ConveyerBelt from 'components/ConveyerBelt';\r\n\r\nconst Page: React.FC = () => {\r\n  return (\r\n    <BasePage>\r\n      <Container>\r\n        <DivBase>\r\n          <ContentTitle>2. AI 성능 확인하기</ContentTitle>\r\n          <ExplainBox>\r\n            <div>\r\n              이제\r\n              <PointText> AI가 배운 내용에 따라 세균과 사물을 분석</PointText>\r\n              하고 구분할 수 있어!\r\n            </div>\r\n            과연 내가 만든 AI는 공기 중 세균을 잘 알아볼까?\r\n          </ExplainBox>\r\n          <Content style={{ marginTop: '2rem' }}>\r\n            <ConveyerBelt type=\"modelFirst\" />\r\n          </Content>\r\n        </DivBase>\r\n        <ButtonGroup />\r\n      </Container>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Lottie from 'react-lottie';\r\nimport BasePage from 'components/BasePage';\r\nimport {\r\n  Container,\r\n  DivBase,\r\n  ContentTitle,\r\n  Content,\r\n  ExplainBox,\r\n} from 'components/BaseStyles';\r\nimport ButtonGroup from 'components/ButtonGroup';\r\nimport GuestList from 'assets/lotties/58305-guestlist.json';\r\nimport Code from 'assets/lotties/61918-code-animation.json';\r\nimport HelpBox from 'components/HelpBox';\r\n\r\nconst Point = styled.span`\r\n  color: #1696e5;\r\n`;\r\n\r\nconst WhatIsSupervisedLearning: React.FC = () => {\r\n  const guestListOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: GuestList,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice',\r\n    },\r\n  };\r\n  const codeOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: Code,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <BasePage>\r\n      <Container>\r\n        <DivBase>\r\n          <ContentTitle>지도 학습이란?</ContentTitle>\r\n          <ExplainBox style={{ display: 'block' }}>\r\n            <div>\r\n              지금까지 입력값(Input data)인 이미지에 대한 결과값(Output\r\n              data)으로 세균 여부를 학습시켜줬어.\r\n            </div>\r\n            <div>\r\n              이처럼 <Point>원인과 결과에 대한 데이터 값을 입력</Point>시키는\r\n              것을 <Point>지도학습</Point>이라 불러!\r\n            </div>\r\n          </ExplainBox>\r\n          <Content style={{ display: 'flex', marginTop: '4rem' }}>\r\n            <div style={{ width: '60%', height: '100%' }}>\r\n              <Lottie options={guestListOptions} />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                height: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                marginTop: '3rem',\r\n                marginLeft: '-10rem',\r\n              }}\r\n            >\r\n              <Lottie options={codeOptions} width={500} height={350} />\r\n            </div>\r\n          </Content>\r\n          <HelpBox title=\"지도학습은 왜 하는 거야?\">\r\n            <div>AI의 핵심은 상황을 인식하고 예측하여, 판단을 내리는 거야!</div>\r\n            <div>사용자가 이 콘텐츠를 좋아할지 안할지, 자동차라면</div>\r\n            <div>우회전 할지 멈출지를 인공지능 모델에 의해 결정하지.</div>\r\n          </HelpBox>\r\n        </DivBase>\r\n        <ButtonGroup />\r\n      </Container>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default WhatIsSupervisedLearning;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { learningPage1Index, learningPage2Index } from 'App';\r\nimport AppContext from 'App/context';\r\n\r\nconst Div = styled.div`\r\n  position: absolute;\r\n  bottom: 1rem;\r\n  left: 1rem;\r\n  background: #ececec;\r\n  padding: 1rem;\r\n  border-radius: 1rem;\r\n  max-width: 32rem;\r\n  z-index: 9;\r\n  box-shadow: 5px 5px 7px #c4c4c4;\r\n  font-size: 0.9rem;\r\n`;\r\nconst BoldTitle = styled.div`\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n  margin-bottom: 1rem;\r\n`;\r\nconst RestartBtn = styled.button`\r\n  width: 45%;\r\n  border: 1px solid #1696e5;\r\n  border-radius: 0.5rem;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n  font-family: 'Yspot';\r\n  color: #1696e5;\r\n  font-size: 1rem;\r\n  padding: 0.5rem;\r\n  margin-top: 1rem;\r\n  :hover {\r\n    color: #535353;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  goTo: string;\r\n};\r\n\r\nconst PlayAgainBox: React.FC<Props> = ({ goTo }) => {\r\n  const { setState } = useContext(AppContext);\r\n  const handleClick = () => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      page: goTo === 'first-step' ? learningPage1Index : learningPage2Index,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Div>\r\n      {goTo === 'first-step' ? (\r\n        <>\r\n          <BoldTitle>AI가 세균을 잘 구분 못하나요? </BoldTitle>\r\n          학습 데이터를 더 제공할 수록 AI가 더 많이 배웁니다.\r\n          <br />\r\n          AI를 다시 학습시켜볼까요?\r\n          <br />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <BoldTitle>AI 예측결과가 나의 예상과 다르나요? </BoldTitle>\r\n          무해균과 유해균을 구분한 나의 기준을 분명하게 정해서\r\n          <br />\r\n          AI를 다시 학습시켜 볼까요?\r\n          <br />\r\n        </>\r\n      )}\r\n\r\n      <RestartBtn onClick={handleClick}>다시 학습하기</RestartBtn>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default PlayAgainBox;\r\n","import React, { useContext, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport BasePage from 'components/BasePage';\r\nimport {\r\n  Container,\r\n  DivBase,\r\n  ContentTitle,\r\n  ExplainBox,\r\n  Content,\r\n  PointDiv,\r\n} from 'components/BaseStyles';\r\nimport ButtonGroup from 'components/ButtonGroup';\r\nimport {\r\n  generateModelFirstLabel,\r\n  PatternFirstType,\r\n  generateBacteria,\r\n} from 'App/datas';\r\nimport AppContext, { ModelsFirstType } from 'App/context';\r\nimport BacteriaCombination from 'components/BacteriaCombination';\r\nimport RenderNoBacteria from 'components/RenderNoBacteria';\r\nimport PlayAgainBox from 'components/PlayAgainBox';\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst Cell = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 8vw;\r\n  height: 8vw;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nexport const gridCellCount = 12;\r\n\r\nconst generateFullData = (\r\n  predict: (param: keyof PatternFirstType) => keyof ModelsFirstType | null,\r\n) => {\r\n  const fullData: {\r\n    bacteria: Array<keyof PatternFirstType>;\r\n    noBacteria: Array<keyof PatternFirstType>;\r\n  } = {\r\n    bacteria: [],\r\n    noBacteria: [],\r\n  };\r\n  while (\r\n    fullData.bacteria.length < gridCellCount ||\r\n    fullData.noBacteria.length < gridCellCount\r\n  ) {\r\n    const label = generateModelFirstLabel();\r\n    if (\r\n      predict(label) === 'bacteria' &&\r\n      fullData.bacteria.length < gridCellCount\r\n    ) {\r\n      fullData.bacteria.push(label);\r\n    } else if (fullData.noBacteria.length < gridCellCount) {\r\n      fullData.noBacteria.push(label);\r\n    }\r\n  }\r\n  return fullData;\r\n};\r\n\r\nconst BacteriasContainer = styled.div<{ color?: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  border-radius: 1rem;\r\n  font-size: 1.5rem;\r\n  padding: 1em;\r\n  font-weight: bold;\r\n\r\n  ${({ color = 'lightgray' }) => css`\r\n    color: ${color};\r\n    border: 0.5rem solid ${color};\r\n  `}\r\n\r\n  & + & {\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\n\r\nconst Data: React.FC<{ data: keyof PatternFirstType }> = ({ data }) => {\r\n  if (data === 'bacteria') {\r\n    return <BacteriaCombination type={generateBacteria()} size={6} />;\r\n  }\r\n  return <RenderNoBacteria type={data} size={4} />;\r\n};\r\n\r\nconst Page: React.FC = () => {\r\n  const { predictFirst } = useContext(AppContext);\r\n  const [datas] = useState(generateFullData(predictFirst));\r\n\r\n  return (\r\n    <BasePage>\r\n      <Container style={{ position: 'relative' }}>\r\n        <DivBase>\r\n          <ContentTitle>3. AI 학습 결과</ContentTitle>\r\n          <ExplainBox>\r\n            학습 내용에 따라 AI가 세균이라고 구분한 사물은 다음과 같아.\r\n            <PointDiv>내가 학습 시킨 AI는 세균을 잘 구분했을까?</PointDiv>\r\n          </ExplainBox>\r\n          <Content>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <BacteriasContainer>\r\n                <span>세균</span>\r\n                <Grid>\r\n                  {datas.bacteria.map((data) => (\r\n                    <Cell>\r\n                      <Data data={data} />\r\n                    </Cell>\r\n                  ))}\r\n                </Grid>\r\n              </BacteriasContainer>\r\n              <BacteriasContainer>\r\n                <span>세균아님</span>\r\n                <Grid>\r\n                  {datas.noBacteria.map((data) => (\r\n                    <Cell>\r\n                      <Data data={data} />\r\n                    </Cell>\r\n                  ))}\r\n                </Grid>\r\n              </BacteriasContainer>\r\n            </div>\r\n          </Content>\r\n        </DivBase>\r\n        <PlayAgainBox goTo=\"first-step\" />\r\n        <ButtonGroup />\r\n      </Container>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { useContext, useMemo } from 'react';\r\nimport AppContext from 'App/context';\r\nimport BasePage from 'components/BasePage';\r\nimport {\r\n  Container,\r\n  DivBase,\r\n  ContentTitle,\r\n  Content,\r\n  ExplainBox,\r\n  PointText,\r\n} from 'components/BaseStyles';\r\nimport {\r\n  FlexDiv,\r\n  RightBtnDiv,\r\n  LearnPageDiv,\r\n  MicroImg,\r\n  MicroCircle,\r\n  Trapezoid,\r\n  BatteryDiv,\r\n  LearnPageBtn,\r\n  OXBtnDiv,\r\n  TrashBtn,\r\n  TrashDiv,\r\n  CustomPopover,\r\n} from 'components/EtcStyles';\r\nimport Combination from 'components/BacteriaCombination';\r\nimport { Bacteria, generateBacteria, modelSecond } from 'App/datas';\r\nimport Micro from 'assets/images/micro.png';\r\nimport { FaRegTrashAlt as Trash } from 'react-icons/fa';\r\nimport HelpBoxByGage from 'components/HelpBoxByGage';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nconst Page: React.FC = () => {\r\n  const {\r\n    state: { modelsSecond },\r\n    setState,\r\n    goToNext,\r\n    learnNoxiousBacteria,\r\n    learnInnoxiousBacteria,\r\n  } = useContext(AppContext);\r\n\r\n  const gage =\r\n    modelsSecond.noxious.learnCount + modelsSecond.innoxious.learnCount;\r\n  const zeroPaddedGage = ['0', gage.toString()].join('').slice(-2);\r\n\r\n  const bacteria = useMemo(generateBacteria, [gage]);\r\n\r\n  const handleChange = (learn: (_: Bacteria) => void) => () => {\r\n    if (gage < 50) {\r\n      learn(bacteria);\r\n    }\r\n  };\r\n  const handleChangeO = handleChange(learnNoxiousBacteria);\r\n  const handleChangeX = handleChange(learnInnoxiousBacteria);\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleTooltipClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <BasePage>\r\n      <Container>\r\n        <DivBase>\r\n          <ContentTitle>1. AI 학습 시키기</ContentTitle>\r\n          <ExplainBox>\r\n            자 이제 세균 탐지 AI를 위한 학습을 새로 해보자. AI는 우리가\r\n            알려준대로 세균을 구분하게 될거야!\r\n            <div>\r\n              세균의 모양, 색깔, 표정 등을 고려하여\r\n              <PointText> 나의 판단기준을 AI에게 알려주자.</PointText>\r\n            </div>\r\n          </ExplainBox>\r\n          <Content style={{ height: 'calc(100% - 5rem)' }}>\r\n            <FlexDiv>\r\n              <LearnPageDiv>\r\n                <MicroImg src={Micro} alt=\"\" />\r\n                <Trapezoid />\r\n                <MicroCircle>\r\n                  <ClickAwayListener onClickAway={handleTooltipClose}>\r\n                    <BatteryDiv>\r\n                      <CustomPopover isOpen={open}>\r\n                        처음부터 다시 시작하려면 여길 눌러 학습데이터를 비워봐!\r\n                      </CustomPopover>\r\n                      <TrashDiv>\r\n                        <TrashBtn\r\n                          onClick={() =>\r\n                            setState((prevState) => ({\r\n                              ...prevState,\r\n                              modelsSecond: {\r\n                                noxious: { ...modelSecond },\r\n                                innoxious: { ...modelSecond },\r\n                              },\r\n                            }))\r\n                          }\r\n                        >\r\n                          <Trash />\r\n                        </TrashBtn>\r\n                        {zeroPaddedGage} / 50\r\n                      </TrashDiv>\r\n                    </BatteryDiv>\r\n                  </ClickAwayListener>\r\n                  <Combination type={bacteria} />\r\n                </MicroCircle>\r\n                <OXBtnDiv>\r\n                  <LearnPageBtn onClick={handleChangeX} color=\"#5BC590\">\r\n                    무해균\r\n                  </LearnPageBtn>\r\n                  <LearnPageBtn onClick={handleChangeO} color=\"#FF5667\">\r\n                    유해균\r\n                  </LearnPageBtn>\r\n                </OXBtnDiv>\r\n                <RightBtnDiv>\r\n                  <LearnPageBtn\r\n                    onClick={goToNext}\r\n                    disabled={gage < 5}\r\n                    color=\"#1696e5\"\r\n                    style={{ margin: 0 }}\r\n                  >\r\n                    학습완료\r\n                  </LearnPageBtn>\r\n                </RightBtnDiv>\r\n              </LearnPageDiv>\r\n            </FlexDiv>\r\n            <HelpBoxByGage gage={gage} />\r\n          </Content>\r\n        </DivBase>\r\n      </Container>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default React.memo(Page);\r\n","import React from 'react';\r\nimport BasePage from 'components/BasePage';\r\nimport {\r\n  Container,\r\n  DivBase,\r\n  ContentTitle,\r\n  Content,\r\n  ExplainBox,\r\n  PointText,\r\n} from 'components/BaseStyles';\r\nimport ButtonGroup from 'components/ButtonGroup';\r\nimport ConveyerBelt from 'components/ConveyerBelt';\r\n\r\nconst Page: React.FC = () => (\r\n  <BasePage>\r\n    <Container>\r\n      <DivBase>\r\n        <ContentTitle>2. AI 성능 확인하기</ContentTitle>\r\n        <ExplainBox>\r\n          <div>\r\n            이제{' '}\r\n            <PointText>\r\n              AI가 내가 알려준 내용에 따라 유해균과 무해균인지를 예측\r\n            </PointText>\r\n            할 수 있어!\r\n          </div>\r\n          과연 내가 만든 AI는 무해균과 유해균을 잘 판단할 수 있을까?\r\n        </ExplainBox>\r\n        <Content>\r\n          <ConveyerBelt type=\"modelSecond\" />\r\n        </Content>\r\n      </DivBase>\r\n      <ButtonGroup />\r\n    </Container>\r\n  </BasePage>\r\n);\r\n\r\nexport default Page;\r\n","import AppContext from 'App/context';\nimport { PatternSecondType } from 'App/datas';\nimport { BacteriaTargetType } from 'pages/AIPerformanceResult2';\nimport React, { useContext } from 'react';\nimport styled, { css } from 'styled-components';\nimport BacteriaCombination from './BacteriaCombination';\n\nconst Container = styled.div`\n  background: rgba(59, 59, 59, 0.9);\n  color: white;\n  padding: 2rem;\n  text-align: center;\n  position: absolute;\n  width: 40vw;\n  height: fit-content;\n  font-size: 1.125rem;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  border-radius: 2rem;\n`;\n\nconst StackedBarChartContainer = styled.div`\n  width: 100%;\n\n  & > div {\n    display: flex;\n    width: 100%;\n    height: 2em;\n    justify-content: space-between;\n  }\n\n  & > div + div {\n    margin-top: 0.5rem;\n  }\n`;\n\ntype ChartDataType = {\n  color: string;\n  value: number;\n  label: string;\n};\n\nconst Bar = styled.div<Omit<ChartDataType, 'label'>>`\n  ${({ color, value }) => css`\n    background: ${color};\n    width: ${value}%;\n  `}\n`;\n\nconst Label = styled.div<Pick<ChartDataType, 'color'>>`\n  ${({ color }) => css`\n    color: ${color};\n  `}\n`;\n\nconst StackedBarChart: React.FC<{ datas: ChartDataType[] }> = ({ datas }) => {\n  return (\n    <StackedBarChartContainer>\n      <div>\n        {datas.filter(({ value }) => Number.isNaN(value)).length > 0 ? (\n          <Bar color=\"gray\" value={100} />\n        ) : (\n          datas.map(({ color, value, label }) => (\n            <Bar key={label} color={color} value={value} />\n          ))\n        )}\n      </div>\n      <div>\n        {datas.map(({ color, label, value }) => (\n          <Label key={label} color={color}>\n            {`${label} ${Number.isNaN(value) ? '?' : value}%`}\n          </Label>\n        ))}\n      </div>\n    </StackedBarChartContainer>\n  );\n};\n\ntype PatternSecondTypeKey = keyof PatternSecondType;\n\nconst patternSecondKeys = [\n  'body',\n  'color',\n  'mouse',\n  'eyes',\n] as Array<PatternSecondTypeKey>;\n\nconst patternSecondNames: Record<PatternSecondTypeKey, string> = {\n  body: '몸통',\n  color: '색깔',\n  eyes: '눈',\n  mouse: '입',\n};\n\nconst BacteriaChart: React.FC<{ target: BacteriaTargetType }> = ({\n  target: { bacteria, detail },\n}) => {\n  const {\n    state: {\n      modelsSecond: { noxious, innoxious },\n    },\n  } = useContext(AppContext);\n  const scoreNoxious =\n    patternSecondKeys.reduce(\n      (prev, current) => prev + noxious.pattern[current][bacteria[current]],\n      0,\n    ) / (noxious.learnCount || 1);\n  const scoreInnoxious =\n    patternSecondKeys.reduce(\n      (prev, current) => prev + innoxious.pattern[current][bacteria[current]],\n      0,\n    ) / (innoxious.learnCount || 1);\n  const total = scoreNoxious + scoreInnoxious;\n  const percentNoxious = Math.round((100 * scoreNoxious) / total);\n  const percentInnoxious = 100 - percentNoxious;\n  return (\n    <Container>\n      <h1>AI 예측 결과</h1>\n      <StackedBarChart\n        datas={[\n          {\n            color: '#60C492',\n            label: '무해균',\n            value: percentInnoxious,\n          },\n          {\n            color: '#FD586A',\n            label: '유해균',\n            value: percentNoxious,\n          },\n        ]}\n      />\n      <h3>세균을 구분하는 세부 기준에 대한 예측결과</h3>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n        }}\n      >\n        <BacteriaCombination type={bacteria} detail={detail} size={10} />\n        <div style={{ width: '75%' }}>\n          {patternSecondKeys.map((part) => {\n            const key = bacteria[part];\n            const scoreNoxiousPart =\n              noxious.pattern[part][key] / (noxious.learnCount || 1);\n            const scoreInnoxiousPart =\n              innoxious.pattern[part][key] / (innoxious.learnCount || 1);\n            const totalPart = scoreNoxiousPart + scoreInnoxiousPart;\n            const percentNoxiousPart = Math.round(\n              (100 * scoreNoxiousPart) / totalPart,\n            );\n            const percentInnoxiousPart = 100 - percentNoxiousPart;\n            return (\n              <div\n                key={part}\n                style={{\n                  display: 'flex',\n                  marginTop: '0.5rem',\n                  fontSize: '0.875rem',\n                }}\n              >\n                <span style={{ width: '4em', padding: '0.5em' }}>\n                  {patternSecondNames[part]}\n                </span>\n                <StackedBarChart\n                  datas={[\n                    {\n                      color: '#60C492',\n                      label: '무해균',\n                      value: percentInnoxiousPart,\n                    },\n                    {\n                      color: '#FD586A',\n                      label: '유해균',\n                      value: percentNoxiousPart,\n                    },\n                  ]}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default BacteriaChart;\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport BasePage from 'components/BasePage';\r\nimport {\r\n  Container,\r\n  DivBase,\r\n  ContentTitle,\r\n  ExplainBox,\r\n  Content,\r\n  PointDiv,\r\n} from 'components/BaseStyles';\r\nimport BacteriaCombination from 'components/BacteriaCombination';\r\nimport ButtonGroup from 'components/ButtonGroup';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {\r\n  Bacteria,\r\n  BacteriaPickedPartType,\r\n  generateBacteria,\r\n  generateBacteriaPickedPart,\r\n} from 'App/datas';\r\nimport AppContext, { ModelsSecondType } from 'App/context';\r\nimport PlayAgainBox from 'components/PlayAgainBox';\r\nimport BacteriaChart from 'components/BacteriaChart';\r\nimport { Grid, gridCellCount } from './AIPerformanceResult1';\r\n\r\nconst Cell = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 8vw;\r\n  height: 8vw;\r\n  border-radius: 0.5rem;\r\n\r\n  &:hover {\r\n    background: lightgray;\r\n  }\r\n`;\r\n\r\nexport type BacteriaTargetType = {\r\n  bacteria: Bacteria;\r\n  detail: BacteriaPickedPartType;\r\n};\r\n\r\nconst defaultState: {\r\n  open: boolean;\r\n  target: BacteriaTargetType | null;\r\n} = { open: false, target: null };\r\n\r\ntype FullDataType = {\r\n  noxious: BacteriaTargetType[];\r\n  innoxious: BacteriaTargetType[];\r\n};\r\n\r\nconst generateFullData: (\r\n  predict: (bacteria: Bacteria) => keyof ModelsSecondType | null,\r\n) => FullDataType = (predict) => {\r\n  const fullData: FullDataType = {\r\n    noxious: [],\r\n    innoxious: [],\r\n  };\r\n  while (\r\n    fullData.noxious.length < gridCellCount ||\r\n    fullData.innoxious.length < gridCellCount\r\n  ) {\r\n    const bacteria = generateBacteria();\r\n    const detail = generateBacteriaPickedPart();\r\n    switch (predict(bacteria)) {\r\n      case 'noxious':\r\n        if (fullData.noxious.length < gridCellCount) {\r\n          fullData.noxious.push({ bacteria, detail });\r\n        }\r\n        break;\r\n      case 'innoxious':\r\n        if (fullData.innoxious.length < gridCellCount) {\r\n          fullData.innoxious.push({ bacteria, detail });\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return fullData;\r\n};\r\n\r\nconst BacteriasContainer = styled.div<{ color: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  border-radius: 1rem;\r\n  font-size: 1.5rem;\r\n  padding: 1em;\r\n  font-weight: bold;\r\n\r\n  ${({ color }) => css`\r\n    color: ${color};\r\n    border: 0.5rem solid ${color};\r\n  `}\r\n\r\n  & + & {\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\n\r\nconst Page: React.FC = () => {\r\n  const { predictSecond } = useContext(AppContext);\r\n  const [modal, setModal] = useState(defaultState);\r\n  const [datas, setDatas] = useState<FullDataType | null>(null);\r\n  useEffect(() => {\r\n    if (!datas) {\r\n      setDatas(generateFullData(predictSecond));\r\n    }\r\n  }, [datas, setDatas, predictSecond]);\r\n  const handleClose = () => setModal(defaultState);\r\n  const handleClick = (target: BacteriaTargetType) => () =>\r\n    setModal({\r\n      open: true,\r\n      target,\r\n    });\r\n\r\n  if (!datas) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <BasePage>\r\n      <Container style={{ position: 'relative' }}>\r\n        <DivBase>\r\n          <ContentTitle>3. AI 학습 결과</ContentTitle>\r\n          <ExplainBox>\r\n            학습 내용에 따라 AI가 세균이라고 구분한 사물은 다음과 같아.\r\n            <PointDiv>\r\n              내가 생각한대로, 알려준대로 AI가 세균을 잘 구분했을까?\r\n            </PointDiv>\r\n          </ExplainBox>\r\n          <Content>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                position: 'absolute',\r\n                width: '100%',\r\n                left: 0,\r\n              }}\r\n            >\r\n              <BacteriasContainer color=\"#60C492\">\r\n                <span>무해균</span>\r\n                <Grid>\r\n                  {datas.innoxious.map((data, index) => (\r\n                    <Cell\r\n                      key={JSON.stringify({ ...data, index })}\r\n                      onClick={handleClick(data)}\r\n                    >\r\n                      <BacteriaCombination\r\n                        type={data.bacteria}\r\n                        detail={data.detail}\r\n                        size={6}\r\n                      />\r\n                    </Cell>\r\n                  ))}\r\n                </Grid>\r\n              </BacteriasContainer>\r\n              <BacteriasContainer color=\"#FD586A\">\r\n                <span>유해균</span>\r\n                <Grid>\r\n                  {datas.noxious.map((data, index) => (\r\n                    <Cell\r\n                      key={JSON.stringify({ ...data, index })}\r\n                      onClick={handleClick(data)}\r\n                    >\r\n                      <BacteriaCombination\r\n                        type={data.bacteria}\r\n                        detail={data.detail}\r\n                        size={6}\r\n                      />\r\n                    </Cell>\r\n                  ))}\r\n                </Grid>\r\n              </BacteriasContainer>\r\n            </div>\r\n          </Content>\r\n          <Modal\r\n            open={modal.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            {modal.target ? <BacteriaChart target={modal.target} /> : <></>}\r\n          </Modal>\r\n        </DivBase>\r\n        <PlayAgainBox goTo=\"second-step\" />\r\n        <ButtonGroup />\r\n      </Container>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\nimport Lottie from 'react-lottie';\nimport BasePage from 'components/BasePage';\nimport {\n  Container,\n  DivBase,\n  ContentTitle,\n  Content,\n  ExplainBox,\n} from 'components/BaseStyles';\nimport ButtonGroup from 'components/ButtonGroup';\nimport animationData from 'assets/lotties/29138-ending-meeting-animation.json';\nimport styled from 'styled-components';\n\nconst StyledContent = styled(Content)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Finish: React.FC = () => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n  return (\n    <BasePage>\n      <Container>\n        <DivBase>\n          <ContentTitle>인공지능을 만드는 사람의 역할</ContentTitle>\n          <ExplainBox>\n            {`이처럼 인공지능은 사람의 사고를 그대로 배우게 돼.\n            그래서 인공지능을 만드는 사람의 의도와 도덕성이 중요하지.\n            AI학습에서는 AI를 지도하는 사람이 제일 중요하다는 것을 기억해줘!`}\n          </ExplainBox>\n          <StyledContent>\n            <Lottie options={defaultOptions} height={400} width={400} />\n          </StyledContent>\n        </DivBase>\n        <ButtonGroup />\n      </Container>\n    </BasePage>\n  );\n};\n\nexport default Finish;\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\n\nconst ContentTitle = styled.div`\n  height: 3rem;\n  font-family: 'Yspot';\n  font-size: 2.4rem;\n  text-align: center;\n`;\n\nexport default ContentTitle;\n","import React, { useState } from 'react';\r\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\r\nimport dotenv from 'dotenv';\r\nimport styled, { css } from 'styled-components';\r\nimport { FaRegSmile as Smile, FaRegFrown as Sad } from 'react-icons/fa';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport moment from 'moment';\r\nimport BasePage from '../components/BasePage';\r\nimport ButtonGroup from '../components/ButtonGroup';\r\nimport Container from '../components/Container';\r\nimport ContentTitle from '../components/ContentTitle';\r\n\r\ntype FormType = {\r\n  age: string;\r\n  rating: string;\r\n};\r\n\r\ndotenv.config();\r\n\r\nconst SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID || '';\r\nconst SHEET_ID = process.env.REACT_APP_SHEET_ID || '';\r\nconst CLIENT_EMAIL = process.env.REACT_APP_CLIENT_EMAIL || '';\r\nconst PRIVATE_KEY =\r\n  process.env.REACT_APP_PRIVATE_KEY?.replace(/\\\\n/g, '\\n') || '';\r\n\r\nconst doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\nconst appendSpreadsheet = async (row: FormType) => {\r\n  try {\r\n    await doc.useServiceAccountAuth({\r\n      client_email: CLIENT_EMAIL,\r\n      private_key: PRIVATE_KEY,\r\n    });\r\n    // loads document properties and worksheets\r\n    await doc.loadInfo();\r\n\r\n    const sheet = doc.sheetsById[SHEET_ID];\r\n    const now = new Date();\r\n    await sheet.addRow({\r\n      ...row,\r\n      date: moment(now).format('YYYY-MM-DD HH:mm:ss'),\r\n    });\r\n  } catch (e) {\r\n    // eslint-disable-next-line no-console\r\n    console.error('Error: ', e);\r\n  }\r\n};\r\n\r\nconst ageOptions = [\r\n  '초1~2',\r\n  '초3~4',\r\n  '초5~6',\r\n  '중1',\r\n  '중2',\r\n  '중3',\r\n  '고1',\r\n  '고2',\r\n  '고3',\r\n  '대학생',\r\n  '기타',\r\n];\r\nconst ratingOptions = [\r\n  { value: '좋아요', icon: <Smile /> },\r\n  { value: '별로네요', icon: <Sad /> },\r\n];\r\nconst defaultValues = {\r\n  age: '',\r\n  rating: '',\r\n};\r\n\r\nconst List = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Subtitle = styled.h3`\r\n  font-size: 1.6rem;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 50%;\r\n  margin-top: 5rem;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n`;\r\n\r\nconst CustomDivBase = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin-top: 3rem;\r\n  margin-bottom: 8.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst Option = styled.span<{ active?: boolean }>`\r\n  color: black;\r\n  cursor: pointer;\r\n  text-align: center;\r\n`;\r\n\r\nconst AgeOption = styled(Option)`\r\n  padding: 1em;\r\n  font-size: 1.1rem;\r\n  margin: 0.5em;\r\n  background: #dadada;\r\n  border-radius: 30px;\r\n  width: 100px;\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      color: white;\r\n      background: gray;\r\n    `}\r\n`;\r\n\r\nconst RatingOption = styled(Option)`\r\n  & + & {\r\n    margin-left: 4rem;\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles({\r\n  cookieAlert: {\r\n    '& .MuiAlert-icon': {\r\n      fontSize: '2rem',\r\n    },\r\n    '& .MuiAlert-message': {\r\n      fontSize: '1.5rem',\r\n    },\r\n  },\r\n});\r\n\r\nconst Survey: React.FC = () => {\r\n  const [state, setState] = useState<FormType>(defaultValues);\r\n  const [open, setOpen] = useState(false);\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n  const { age, rating } = state;\r\n  return (\r\n    <BasePage cover>\r\n      <Container>\r\n        <CustomDivBase>\r\n          <ContentTitle>만족도 평가</ContentTitle>\r\n          <Wrapper>\r\n            <Subtitle>이용 연령대를 선택해주세요</Subtitle>\r\n            <Grid>\r\n              {ageOptions.map((option) => (\r\n                <AgeOption\r\n                  key={option}\r\n                  active={age === option}\r\n                  onClick={() =>\r\n                    setState((prevState) => ({\r\n                      ...prevState,\r\n                      age: option,\r\n                    }))\r\n                  }\r\n                >\r\n                  {option}\r\n                </AgeOption>\r\n              ))}\r\n            </Grid>\r\n          </Wrapper>\r\n          <Wrapper>\r\n            <Subtitle>콘텐츠를 평가해주세요</Subtitle>\r\n            <List>\r\n              {ratingOptions.map((option) => {\r\n                const { value, icon } = option;\r\n                return (\r\n                  <RatingOption\r\n                    key={value}\r\n                    onClick={() =>\r\n                      setState((prevState) => ({\r\n                        ...prevState,\r\n                        rating: value,\r\n                      }))\r\n                    }\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        fontSize: '3rem',\r\n                        height: '3rem',\r\n                        width: '3rem',\r\n                        borderRadius: '50%',\r\n                        margin: 'auto',\r\n                        marginBottom: '10px',\r\n                        background: rating === value ? 'yellow' : 'initial',\r\n                      }}\r\n                    >\r\n                      {icon}\r\n                    </div>\r\n                    {value}\r\n                  </RatingOption>\r\n                );\r\n              })}\r\n            </List>\r\n          </Wrapper>\r\n        </CustomDivBase>\r\n      </Container>\r\n      {!open && (\r\n        <ButtonGroup\r\n          lastPage\r\n          callbackNext={() => {\r\n            handleClick();\r\n            appendSpreadsheet(state);\r\n          }}\r\n          isOpenNextPage={!!(age && rating)}\r\n        />\r\n      )}\r\n      <Snackbar open={open} onClose={handleClose}>\r\n        <Alert\r\n          className={classes.cookieAlert}\r\n          severity=\"success\"\r\n          variant=\"filled\"\r\n        >\r\n          설문이 반영되었습니다. 소중한 의견 감사합니다.\r\n        </Alert>\r\n      </Snackbar>\r\n    </BasePage>\r\n  );\r\n};\r\n\r\nexport default Survey;\r\n","import React, { useState } from 'react';\r\nimport { Bacteria, generateBacteria, PatternFirstType } from 'App/datas';\r\nimport Cover from 'pages/Cover';\r\nimport WhatIsAI from 'pages/WhatIsAI';\r\nimport HowToDecide from 'pages/HowToDecide';\r\nimport LearnByExperience from 'pages/LearnByExperience';\r\nimport AILearning1 from 'pages/AILearning1';\r\nimport AIPerformanceCheck1 from 'pages/AIPerformanceCheck1';\r\nimport WhatIsSupervisedLearning from 'pages/WhatIsSupervisedLearning';\r\nimport AIPerformanceResult1 from 'pages/AIPerformanceResult1';\r\nimport AILearning2 from 'pages/AILearning2';\r\nimport AIPerformanceCheck2 from 'pages/AIPerformanceCheck2';\r\nimport AIPerformanceResult2 from 'pages/AIPerformanceResult2';\r\nimport Finish from 'pages/Finish';\r\nimport Survey from 'pages/Survey';\r\n\r\nimport AppContext, {\r\n  defaultState,\r\n  minPage,\r\n  ModelsFirstType,\r\n  ModelsSecondType,\r\n  StateType,\r\n} from './context';\r\n\r\nconst pageComponents = [\r\n  Cover,\r\n  WhatIsAI,\r\n  HowToDecide,\r\n  LearnByExperience,\r\n  AILearning1,\r\n  AIPerformanceCheck1,\r\n  AIPerformanceResult1,\r\n  WhatIsSupervisedLearning,\r\n  AILearning2,\r\n  AIPerformanceCheck2,\r\n  AIPerformanceResult2,\r\n  Finish,\r\n  ...(navigator.onLine ? [Survey] : []),\r\n];\r\n\r\nconst pages = pageComponents.map((C) => <C />);\r\n\r\nexport const learningPage1Index = pageComponents.findIndex(\r\n  (pageComponent) => pageComponent === AILearning1,\r\n);\r\nexport const learningPage2Index = pageComponents.findIndex(\r\n  (pageComponent) => pageComponent === AILearning2,\r\n);\r\n\r\nconst maxStage = pages.length - 1;\r\n\r\nconst App: React.FC = () => {\r\n  const [state, setState] = useState<StateType>(defaultState);\r\n  const goToHome = () => setState(defaultState);\r\n  const closeTab = () => window.close();\r\n\r\n  const handleGoToPage = (addValue: number) => () => {\r\n    setState((prevState) => {\r\n      const newStage = prevState.page + addValue;\r\n      const page =\r\n        minPage <= newStage && newStage <= maxStage ? newStage : minPage;\r\n      return {\r\n        ...prevState,\r\n        page,\r\n      };\r\n    });\r\n  };\r\n  const goToPrev = handleGoToPage(-1);\r\n  const goToNext = handleGoToPage(1);\r\n  const generateBacterias = (count: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      bacterias: Array.from(Array(count)).map(() => generateBacteria()),\r\n    }));\r\n  };\r\n\r\n  const handleLearnFirst = (model: keyof ModelsFirstType) => (\r\n    param: keyof PatternFirstType,\r\n  ) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      modelsFirst: {\r\n        ...prevState.modelsFirst,\r\n        [model]: {\r\n          ...prevState.modelsFirst[model],\r\n          learnCount: prevState.modelsFirst[model].learnCount + 1,\r\n          pattern: {\r\n            ...prevState.modelsFirst[model].pattern,\r\n            [param]: prevState.modelsFirst[model].pattern[param] + 1,\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n  const learnBacteria = handleLearnFirst('bacteria');\r\n  const learnNoBacteria = handleLearnFirst('noBacteria');\r\n\r\n  const handleLearnSecond = (model: keyof ModelsSecondType) => (\r\n    bacteria: Bacteria,\r\n  ) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      modelsSecond: {\r\n        ...prevState.modelsSecond,\r\n        [model]: {\r\n          ...prevState.modelsSecond[model],\r\n          learnCount: prevState.modelsSecond[model].learnCount + 1,\r\n          pattern: {\r\n            eyes: {\r\n              ...prevState.modelsSecond[model].pattern.eyes,\r\n              [bacteria.eyes]:\r\n                prevState.modelsSecond[model].pattern.eyes[bacteria.eyes] + 1,\r\n            },\r\n            body: {\r\n              ...prevState.modelsSecond[model].pattern.body,\r\n              [bacteria.body]:\r\n                prevState.modelsSecond[model].pattern.body[bacteria.body] + 1,\r\n            },\r\n            mouse: {\r\n              ...prevState.modelsSecond[model].pattern.mouse,\r\n              [bacteria.mouse]:\r\n                prevState.modelsSecond[model].pattern.mouse[bacteria.mouse] + 1,\r\n            },\r\n            color: {\r\n              ...prevState.modelsSecond[model].pattern.color,\r\n              [bacteria.color]:\r\n                prevState.modelsSecond[model].pattern.color[bacteria.color] + 1,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n  const learnNoxiousBacteria = handleLearnSecond('noxious');\r\n  const learnInnoxiousBacteria = handleLearnSecond('innoxious');\r\n\r\n  const predictFirst: (\r\n    param: keyof PatternFirstType,\r\n  ) => keyof ModelsFirstType | null = (param) => {\r\n    const { bacteria, noBacteria } = state.modelsFirst;\r\n    if (bacteria.learnCount + noBacteria.learnCount < 5) {\r\n      return null;\r\n    }\r\n    const scoreBacteria = bacteria.pattern[param] / (bacteria.learnCount || 1);\r\n    const scoreNoBacteria =\r\n      noBacteria.pattern[param] / (noBacteria.learnCount || 1);\r\n    if (scoreBacteria + scoreNoBacteria === 0) {\r\n      return Math.random() > 0.5 ? 'bacteria' : 'noBacteria';\r\n    }\r\n    if (scoreBacteria >= scoreNoBacteria) return 'bacteria';\r\n    return 'noBacteria';\r\n  };\r\n\r\n  const predictSecond: (bacteria: Bacteria) => keyof ModelsSecondType | null = (\r\n    bacteria,\r\n  ) => {\r\n    const { noxious, innoxious } = state.modelsSecond;\r\n    const { color, eyes, body, mouse } = bacteria;\r\n    if (noxious.learnCount + innoxious.learnCount < 5) {\r\n      return null;\r\n    }\r\n    const scoreNoxious =\r\n      (noxious.pattern.color[color] +\r\n        noxious.pattern.eyes[eyes] +\r\n        noxious.pattern.body[body] +\r\n        noxious.pattern.mouse[mouse]) /\r\n      (noxious.learnCount || 1);\r\n    const scoreInnoxious =\r\n      (innoxious.pattern.color[color] +\r\n        innoxious.pattern.eyes[eyes] +\r\n        innoxious.pattern.body[body] +\r\n        innoxious.pattern.mouse[mouse]) /\r\n      (innoxious.learnCount || 1);\r\n    if (scoreNoxious + scoreInnoxious === 0) {\r\n      return Math.random() > 0.5 ? 'noxious' : 'innoxious';\r\n    }\r\n    if (scoreNoxious >= scoreInnoxious) return 'noxious';\r\n    return 'innoxious';\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        state,\r\n        setState,\r\n        goToHome,\r\n        closeTab,\r\n        goToPrev,\r\n        goToNext,\r\n        generateBacterias,\r\n        learnBacteria,\r\n        learnNoBacteria,\r\n        learnNoxiousBacteria,\r\n        learnInnoxiousBacteria,\r\n        predictFirst,\r\n        predictSecond,\r\n      }}\r\n    >\r\n      {pages[state.page]}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html,\r\n  body {\r\n    color: #717578;\r\n    font-family: 'Score', sans-serif;\r\n    font-weight: 400;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    margin: 0;\r\n    font-size: 18px;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport './index.css';\nimport App from './App/index';\nimport reportWebVitals from './reportWebVitals';\nimport defaultTheme from './styles/theme';\nimport GlobalStyle from './styles/globalStyles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={defaultTheme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}