{"version":3,"sources":["components/Common.tsx","components/Simulation.tsx","components/Visualization.tsx","components/Videos.tsx","App.tsx","reportWebVitals.ts","components/GlobalStyles.tsx","index.tsx"],"names":["ListItem","styled","li","Buttons","div","backgroundColor","css","lighten","ButtonLink","title","description","href","onClick","useCallback","window","open","className","style","fontSize","marginTop","fontFamily","letterSpacing","ModalButtonLink","rest","Opacity","keyframes","StyledModal","Modal","X","button","Content","Iframe","iframe","Simulation","useState","isOpen","setIsOpen","toggleModal","src","setSrc","color","onEscapeKeydown","Visualization","Videos","includes","allow","allowFullScreen","frameBorder","width","height","controls","autoPlay","Container","Title","Subtitle","ContentList","ul","LottyDiv","defaultOptions","animationData","rendererSettings","preserveAspectRatio","App","onContextMenu","e","preventDefault","options","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAIaA,EAAWC,UAAOC,GAAV,wJAQRC,EAAUF,UAAOG,IAAV,yJAShB,gBAAGC,EAAH,EAAGA,gBAAH,OAAyBC,cAAxB,IAAD,gRAEsBD,EAOJE,YAAQF,EAAiB,SAMlCG,EAKR,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACpBC,EAAUC,uBAAY,WAC1BC,OAAOC,KAAKJ,KACX,CAACA,IACJ,OACE,sBAAKK,UAAU,cAAcJ,QAASA,EAAtC,UACE,qBAAKK,MAAO,CAAEC,SAAU,UAAxB,SAAqCT,IACrC,qBACEQ,MAAO,CACLC,SAAU,SACVC,UAAW,OACXC,WAAY,QACZC,cAAe,UALnB,SAQGX,QAMIY,EAIR,SAAC,GAAqC,IAAnCb,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,YAAgBa,EAAW,uCACxC,OACE,8CAAKP,UAAU,eAAkBO,GAAjC,cACE,qBAAKN,MAAO,CAAEC,SAAU,UAAxB,SAAqCT,IACrC,qBACEQ,MAAO,CACLC,SAAU,SACVC,UAAW,OACXC,WAAY,QACZC,cAAe,UALnB,SAQGX,SCtEHc,EAAUC,oBAAH,oEAKPC,EAAcC,IAAM1B,OAAT,gKAKEuB,GAGbI,EAAI3B,UAAO4B,OAAV,yRAmBDC,EAAU7B,UAAOG,IAAV,4DAGP2B,EAAS9B,UAAO+B,OAAV,6DAqEGC,EAhEc,WAAO,IAAD,EACLC,oBAAS,GADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KAE3BC,EAAc,kBAAMD,GAAWD,IAFJ,EAGXD,mBAAS,IAHE,mBAG1BI,EAH0B,KAGrBC,EAHqB,KAKjC,OACE,eAACvC,EAAD,WACE,sBACEiB,MAAO,CACLG,WAAY,QACZF,SAAU,UAHd,sCAMO,sBAAMD,MAAO,CAAEuB,MAAO,WAAtB,+CAEP,cAAC,gBAAD,UACE,eAACd,EAAD,CAAaS,OAAQA,EAAQM,gBAAiBJ,EAA9C,UACE,cAACT,EAAD,CAAGhB,QAASyB,EAAZ,SACE,cAAC,IAAD,MAEF,cAACP,EAAD,UACE,cAACC,EAAD,CAAQO,IAAKA,WAInB,eAACnC,EAAD,CAASE,gBAAgB,UAAzB,UACE,cAAC,EAAD,CACEI,MAAM,0DACNC,YAAY,uGACZC,KAAK,yDAEP,cAAC,EAAD,CACEF,MAAM,2CACNC,YAAY,mGACZC,KAAK,qEAEP,cAAC,EAAD,CACEF,MAAM,8CACNC,YAAY,wGACZC,KAAK,2DAEP,cAAC,EAAD,CACEF,MAAM,8CACNC,YAAY,8GACZE,QAAS,WACP2B,EAAO,4CACPF,OAGJ,cAAC,EAAD,CACE5B,MAAM,qDACNC,YAAY,iEACZE,QAAS,WACP2B,EAAO,uEAGPF,cCjGNN,EAAS9B,UAAO+B,OAAV,6DAKNR,GAAUC,oBAAH,oEAKPC,GAAcC,IAAM1B,OAAT,gKAKEuB,IAGbI,GAAI3B,UAAO4B,OAAV,yRAmBDC,GAAU7B,UAAOG,IAAV,4DA8DEsC,GA1DiB,WAAO,IAAD,EACRR,oBAAS,GADD,mBAC7BC,EAD6B,KACrBC,EADqB,KAE9BC,EAAc,kBAAMD,GAAWD,IAFD,EAGdD,mBAAS,IAHK,mBAG7BI,EAH6B,KAGxBC,EAHwB,KAIpC,OACE,eAACvC,EAAD,WACE,sBACEiB,MAAO,CACLG,WAAY,QACZF,SAAU,UAHd,yDAMW,sBAAMD,MAAO,CAAEuB,MAAO,WAAtB,mCAEX,cAAC,gBAAD,UACE,eAAC,GAAD,CAAaL,OAAQA,EAAQM,gBAAiBJ,EAA9C,UACE,cAAC,GAAD,CAAGzB,QAASyB,EAAZ,SACE,cAAC,IAAD,MAEF,cAAC,GAAD,UACE,cAAC,EAAD,CAAQC,IAAKA,WAInB,eAACnC,EAAD,CAASE,gBAAgB,UAAzB,UACE,cAAC,EAAD,CACEI,MAAM,qEACNC,YAAY,0FACZE,QAAS,WACP2B,EAAO,sCACPF,OAGJ,cAAC,EAAD,CACE5B,MAAM,wBACNC,YAAY,iGACZE,QAAS,WACP2B,EAAO,wDACPF,OAGJ,cAAC,EAAD,CACE5B,MAAM,2DACNC,YAAY,wEACZC,KAAK,2EAEP,cAAC,EAAD,CACEF,MAAM,yBACNC,YAAY,0EACZE,QAAS,WACP2B,EAAO,qCACPF,cC3FNb,GAAUC,oBAAH,oEAKPC,GAAcC,IAAM1B,OAAT,gKAKEuB,IAGbI,GAAI3B,UAAO4B,OAAV,yRAmBDC,GAAU7B,UAAOG,IAAV,4DA8EEuC,GA1EU,WAAO,IAAD,EACDT,oBAAS,GADR,mBACtBC,EADsB,KACdC,EADc,KAEvBC,EAAc,kBAAMD,GAAWD,IAFR,EAGPD,mBAAS,IAHF,mBAGtBI,EAHsB,KAGjBC,EAHiB,KAK7B,OACE,eAACvC,EAAD,WACE,sBACEiB,MAAO,CACLG,WAAY,QACZF,SAAU,UAHd,sCAMO,sBAAMD,MAAO,CAAEuB,MAAO,WAAtB,uDAEP,cAAC,gBAAD,UACE,eAAC,GAAD,CAAaL,OAAQA,EAAQM,gBAAiBJ,EAA9C,UACE,cAAC,GAAD,CAAGzB,QAASyB,EAAZ,SACE,cAAC,IAAD,MAEF,cAAC,GAAD,UACGC,EAAIM,SAAS,WACZ,wBACEN,IAAKA,EACL7B,MAAM,uBACNoC,MAAM,2FACNC,iBAAe,EACfC,YAAY,IACZC,MAAM,OACNC,OAAO,SAGT,uBAAOC,UAAQ,EAACC,UAAQ,EAACH,MAAM,OAAOC,OAAO,OAA7C,SACE,wBAAQX,IAAKA,aAMvB,eAACnC,EAAD,CAASE,gBAAgB,UAAzB,UACE,cAAC,EAAD,CACEI,MAAM,2BACNC,YAAY,2DACZE,QAAS,WACP2B,EAAO,iEAGPF,OAGJ,cAAC,EAAD,CACE5B,MAAM,wCACNC,YAAY,2DACZE,QAAS,WACP2B,EAAO,6FAGPF,OAGJ,cAAC,EAAD,CACE5B,MAAM,qDACNC,YAAY,8EACZE,QAAS,WACP2B,EAAO,iEAGPF,cCvGNe,GAAYnD,UAAOG,IAAV,6LAUTiD,GAAQpD,UAAOG,IAAV,6FAMLkD,GAAWrD,UAAOG,IAAV,yJAQRmD,GAActD,UAAOuD,GAAV,iHASXC,GAAWxD,UAAOG,IAAV,iFAMRsD,GAAiB,CACrBC,gBACAC,iBAAkB,CAChBC,oBAAqB,mBAyBVC,GArBO,kBACpB,eAACV,GAAD,CACEW,cAAe,SAACC,GACdA,EAAEC,kBAFN,UAKE,gCACE,cAACZ,GAAD,mIACA,cAACC,GAAD,qJAEF,eAACC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAACE,GAAD,UACE,cAAC,IAAD,CAAQS,QAASR,GAAgBT,OAAQ,IAAKD,MAAO,YCxD5CmB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCsBCQ,GA5BMC,4BAAH,odACZC,MCGNC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEFC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.859d40a2.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport styled, { css } from 'styled-components';\nimport { lighten } from '@material-ui/core';\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n`;\n\nexport const Buttons = styled.div<{\n  backgroundColor: string;\n}>`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  width: 100%;\n  grid-gap: 1rem;\n  margin-top: 1rem;\n\n  ${({ backgroundColor }) => css`\n    .link-button {\n      background-color: ${backgroundColor};\n      padding: 2rem 0;\n      color: white;\n      border-radius: 0.5rem;\n      box-shadow: 5px 5px 4px #dcdcdc;\n      cursor: pointer;\n      :hover {\n        background: ${lighten(backgroundColor, 0.05)};\n      }\n    }\n  `}\n`;\n\nexport const ButtonLink: React.FC<{\n  title: string;\n  description: string;\n  href?: string;\n  onClick?: () => void;\n}> = ({ title, description, href }) => {\n  const onClick = useCallback(() => {\n    window.open(href);\n  }, [href]);\n  return (\n    <div className=\"link-button\" onClick={onClick}>\n      <div style={{ fontSize: '1.5rem' }}>{title}</div>\n      <div\n        style={{\n          fontSize: '0.9rem',\n          marginTop: '1rem',\n          fontFamily: 'Score',\n          letterSpacing: '-0.1px',\n        }}\n      >\n        {description}\n      </div>\n    </div>\n  );\n};\n\nexport const ModalButtonLink: React.FC<{\n  title: string;\n  description: string;\n  onClick?: () => void;\n}> = ({ title, description, ...rest }) => {\n  return (\n    <div className=\"link-button\" {...rest}>\n      <div style={{ fontSize: '1.5rem' }}>{title}</div>\n      <div\n        style={{\n          fontSize: '0.9rem',\n          marginTop: '1rem',\n          fontFamily: 'Score',\n          letterSpacing: '-0.1px',\n        }}\n      >\n        {description}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { keyframes } from 'styled-components';\nimport Modal from 'styled-react-modal';\nimport { ModalProvider } from 'styled-react-modal';\nimport { FaTimes as XIcon } from 'react-icons/fa';\nimport { ListItem, Buttons, ButtonLink, ModalButtonLink } from './Common';\n\nconst Opacity = keyframes`\n\tfrom {opacity:0;}\n\tto {opacity:1;}\n`;\n\nconst StyledModal = Modal.styled`\n  width: 100vw;\n  height: 100vh;\n  padding: 4rem;\n  background-color: #000;\n\tanimation-name: ${Opacity};\n\tanimation-duration: 0.5s;\n`;\nconst X = styled.button`\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  background: none;\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: #bcbcbc;\n  position: absolute;\n  top: 1.5rem;\n  right: 1.5rem;\n  z-index: 9;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst Content = styled.div`\n  height: calc(100% - 0.5rem);\n`;\nconst Iframe = styled.iframe`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Simulation: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleModal = () => setIsOpen(!isOpen);\n  const [src, setSrc] = useState('');\n\n  return (\n    <ListItem>\n      <div\n        style={{\n          fontFamily: 'Yspot',\n          fontSize: '1.5rem',\n        }}\n      >\n        빅데이터 <span style={{ color: '#FC9B5A' }}>시뮬레이션</span>\n      </div>\n      <ModalProvider>\n        <StyledModal isOpen={isOpen} onEscapeKeydown={toggleModal}>\n          <X onClick={toggleModal}>\n            <XIcon />\n          </X>\n          <Content>\n            <Iframe src={src} />\n          </Content>\n        </StyledModal>\n      </ModalProvider>\n      <Buttons backgroundColor=\"#FC9B5A\">\n        <ButtonLink\n          title=\"워드클라우드 만들기\"\n          description=\"데이터 나누고 분석 결과를 시각화하기\"\n          href=\"https://datadriven-korea.github.io/bigdata/wordcloud\"\n        />\n        <ButtonLink\n          title=\"AI 로봇 학습하기\"\n          description=\"AI가 만들어지는 과정인 지도학습 이해\"\n          href=\" https://datadriven-korea.github.io/bigdata/supervised-learning/\"\n        />\n        <ButtonLink\n          title=\"데이터 정리하기\"\n          description=\"유사한 데이터를 묶는 클러스터링 이해 \"\n          href=\"https://datadriven-korea.github.io/bigdata/clustering/\"\n        />\n        <ModalButtonLink\n          title=\"통계데이터 활용\"\n          description=\"통그라미를 통한 통계데이터 활용법 이해 \"\n          onClick={() => {\n            setSrc(`https://mdis.kostat.go.kr/tong/sub2.html`);\n            toggleModal();\n          }}\n        />\n        <ModalButtonLink\n          title=\"한국 관광 데이터랩\"\n          description=\"관광 빅데이터 알아보기\"\n          onClick={() => {\n            setSrc(\n              `https://datalab.visitkorea.or.kr/datalab/portal/main/getMainForm.do`\n            );\n            toggleModal();\n          }}\n        />\n      </Buttons>\n    </ListItem>\n  );\n};\n\nexport default Simulation;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { keyframes } from 'styled-components';\nimport Modal, { ModalProvider } from 'styled-react-modal';\nimport { FaTimes as XIcon } from 'react-icons/fa';\nimport { ListItem, Buttons, ButtonLink, ModalButtonLink } from './Common';\n\nconst Iframe = styled.iframe`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Opacity = keyframes`\n\tfrom {opacity:0;}\n\tto {opacity:1;}\n`;\n\nconst StyledModal = Modal.styled`\n  width: 100vw;\n  height: 100vh;\n  padding: 4rem;\n  background-color: #000;\n\tanimation-name: ${Opacity};\n\tanimation-duration: 0.5s;\n`;\nconst X = styled.button`\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  background: none;\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: #bcbcbc;\n  position: absolute;\n  top: 1.5rem;\n  right: 1.5rem;\n  z-index: 9;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst Content = styled.div`\n  height: calc(100% - 0.5rem);\n`;\n\nconst Visualization: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleModal = () => setIsOpen(!isOpen);\n  const [src, setSrc] = useState('');\n  return (\n    <ListItem>\n      <div\n        style={{\n          fontFamily: 'Yspot',\n          fontSize: '1.5rem',\n        }}\n      >\n        지도기반 데이터 <span style={{ color: '#5B8BCA' }}>시각화</span>\n      </div>\n      <ModalProvider>\n        <StyledModal isOpen={isOpen} onEscapeKeydown={toggleModal}>\n          <X onClick={toggleModal}>\n            <XIcon />\n          </X>\n          <Content>\n            <Iframe src={src} />\n          </Content>\n        </StyledModal>\n      </ModalProvider>\n      <Buttons backgroundColor=\"#5B8BCA\">\n        <ModalButtonLink\n          title=\"성남청소년데이터플랫폼\"\n          description=\"성남시 지도기반 빅데이터 플랫폼\"\n          onClick={() => {\n            setSrc(`https://snyouthbigta.datadriven.kr`);\n            toggleModal();\n          }}\n        />\n        <ModalButtonLink\n          title=\"MY 통계로\"\n          description=\"통계청 데이터로 살펴보는 우리 동네\"\n          onClick={() => {\n            setSrc(`https://sgis.kostat.go.kr/view/statsMe/statsMeMain#1`);\n            toggleModal();\n          }}\n        />\n        <ButtonLink\n          title=\"데이터로 보는 지구촌\"\n          description=\"글로벌 데이터 통계 시각화\"\n          href=\"https://datadriven-korea.github.io/bigdata/global-village-through-data\"\n        />\n        <ModalButtonLink\n          title=\"Land Portal Geo Portal\"\n          description=\"글로벌 데이터 시각화 (해외)\"\n          onClick={() => {\n            setSrc(`https://geoportal.landportal.org/`);\n            toggleModal();\n          }}\n        />\n      </Buttons>\n    </ListItem>\n  );\n};\nexport default Visualization;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { keyframes } from 'styled-components';\nimport Modal from 'styled-react-modal';\nimport { ModalProvider } from 'styled-react-modal';\nimport { ListItem, Buttons, ModalButtonLink } from './Common';\nimport { FaTimes as XIcon } from 'react-icons/fa';\n\nconst Opacity = keyframes`\n\tfrom {opacity:0;}\n\tto {opacity:1;}\n`;\n\nconst StyledModal = Modal.styled`\n  width: 100vw;\n  height: 100vh;\n  padding: 4rem;\n  background-color: #000;\n\tanimation-name: ${Opacity};\n\tanimation-duration: 0.5s;\n`;\nconst X = styled.button`\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  background: none;\n  width: 3rem;\n  height: 3rem;\n  font-size: 3rem;\n  color: #bcbcbc;\n  position: absolute;\n  top: 1.5rem;\n  right: 1.5rem;\n  z-index: 9;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nconst Content = styled.div`\n  height: calc(100% - 0.5rem);\n`;\n\nconst Videos: React.FC = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleModal = () => setIsOpen(!isOpen);\n  const [src, setSrc] = useState('');\n\n  return (\n    <ListItem>\n      <div\n        style={{\n          fontFamily: 'Yspot',\n          fontSize: '1.5rem',\n        }}\n      >\n        빅데이터 <span style={{ color: '#559043' }}>개념 이해 영상</span>\n      </div>\n      <ModalProvider>\n        <StyledModal isOpen={isOpen} onEscapeKeydown={toggleModal}>\n          <X onClick={toggleModal}>\n            <XIcon />\n          </X>\n          <Content>\n            {src.includes('youtube') ? (\n              <iframe\n                src={src}\n                title=\"YouTube video player\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n                frameBorder=\"0\"\n                width=\"100%\"\n                height=\"100%\"\n              />\n            ) : (\n              <video controls autoPlay width=\"100%\" height=\"100%\">\n                <source src={src} />\n              </video>\n            )}\n          </Content>\n        </StyledModal>\n      </ModalProvider>\n      <Buttons backgroundColor=\"#559043\">\n        <ModalButtonLink\n          title=\"빅데이터\"\n          description=\"처음 접하는 빅데이터\"\n          onClick={() => {\n            setSrc(\n              `https://www.youtube-nocookie.com/embed/6MrCdXBlmqM?autoplay=1`\n            );\n            toggleModal();\n          }}\n        ></ModalButtonLink>\n        <ModalButtonLink\n          title=\"추천 알고리즘\"\n          description=\"추천 알고리즘의 이해\"\n          onClick={() => {\n            setSrc(\n              `https://wstrssl.ebsmath.co.kr/ebsvod/ebsm/M41M2001/M202000009/M202000009_1000K_M00123.mp4`\n            );\n            toggleModal();\n          }}\n        />\n        <ModalButtonLink\n          title=\"빅데이터 활용 사례\"\n          description=\"스마트 과학 콘텐츠 구축사업\"\n          onClick={() => {\n            setSrc(\n              `https://www.youtube-nocookie.com/embed/vyRC1bUAwFE?autoplay=1`\n            );\n            toggleModal();\n          }}\n        />\n      </Buttons>\n    </ListItem>\n  );\n};\nexport default Videos;\n","import React from 'react';\nimport Lottie from 'react-lottie';\nimport styled from 'styled-components';\nimport animationData from './assets/lotties/30723-data-animation.json';\nimport Simulation from './components/Simulation';\nimport Visualization from './components/Visualization';\nimport Videos from './components/Videos';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  text-align: center;\n  padding: 3rem;\n  height: 100vh;\n  position: relative;\n`;\n\nconst Title = styled.div`\n  font-size: 3rem;\n  color: #316dbd;\n  letter-spacing: 1.5px;\n`;\n\nconst Subtitle = styled.div`\n  font-size: 1.5rem;\n  font-family: 'Yspot';\n  margin: 1.5rem 0;\n  transform: skew(-0.05deg);\n  letter-spacing: -0.5px;\n`;\n\nconst ContentList = styled.ul`\n  width: 100%;\n  height: fit-content;\n\n  li + li {\n    margin-top: 3.5rem;\n  }\n`;\n\nconst LottyDiv = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 2rem;\n`;\n\nconst defaultOptions = {\n  animationData,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nconst App: React.FC = () => (\n  <Container\n    onContextMenu={(e) => {\n      e.preventDefault();\n    }}\n  >\n    <div>\n      <Title>분당야탑청소년수련관 빅데이터 체험콘텐츠</Title>\n      <Subtitle>콘텐츠를 선택하여 빅데이터를 직접 체험해보세요!</Subtitle>\n    </div>\n    <ContentList>\n      <Simulation />\n      <Visualization />\n      <Videos />\n    </ContentList>\n    <LottyDiv>\n      <Lottie options={defaultOptions} height={400} width={400} />\n    </LottyDiv>\n  </Container>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n\n    body, button{\n        color: #5c5c5c;\n        font-family: 'Yj', sans-serif;\n        font-weight: 400;\n        overflow: hidden;\n        padding: 0;\n        margin: 0;\n        font-size: 18px;\n        letter-spacing: 0.5px;\n    }\n    * {\n        box-sizing: border-box;\n    }\n\n    button {\n        outline: 0;\n        border: 0;\n    }\n\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalStyles from './components/GlobalStyles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}